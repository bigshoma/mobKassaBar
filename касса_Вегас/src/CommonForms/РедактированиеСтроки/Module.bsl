
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОбработатьПолученныйШтрихкод(ПолученныйШтрихкод, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(ПолученныйШтрихкод) Тогда
		
		Штрихкод = ПолученныйШтрихкод;
		Элементы.Штрихкод.СписокВыбора.Добавить(ПолученныйШтрихкод, ПолученныйШтрихкод);
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

// Возникает при сканировании внутренней камерой устройства
//
&НаКлиенте
Процедура ОбработкаЗакрытияСканирования(ДополнительныеПараметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИспользуетсяЕГАИС = ЗначениеНастроекВызовСервераПовтИсп.ИспользуетсяЕГАИСПриПродаже();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "МаксимальноеКоличествоИнфо", "Видимость", Ложь);
	ОбщегоНазначения.УстановитьЦветИнформационныхНадписей(ЭтаФорма, "МаксимальноеКоличествоИнфо");
	
	ИсключенныеСвойства = "ЗакрыватьПриВыборе, ЗакрыватьПриЗакрытииВладельца, ТолькоПросмотр";
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, ,ИсключенныеСвойства);
	
	ИспользоватьСкидкиНаценки = ЗначениеНастроекПовтИсп.ИспользуютсяСкидкиНаценки();
	
	ЭтоМаркируемаяПродукция = ПродажиВызовСервера.ОпределитьНеобходимостьВводаМарки(Номенклатура);
	
	ЗаполнитьСтавкиНДС();
	
	ПроцентНДС = ЦенообразованиеКлиентСерверПовтИсп.ПолучитьСтавкуНДСЧислом(СтавкаНДС);
	
	// Оформление
	ОбщегоНазначения.ОформитьСуммовыеПоля(ЭтаФорма, "Цена, Сумма, СуммаБезСкидкиНаценки, СуммаСкидкиНаценки, СуммаНДС, СкидкаНаценкаЗначение");
	ОбщегоНазначения.УстановитьЦветИтоговыхПолей(ЭтаФорма, "Сумма, СуммаБезСкидкиНаценки, СуммаСкидкиНаценки, СуммаНДС");
	
	ЗаполнитьШтрихкодыНоменклатуры();
	
	НастроитьФормуПоЗначениямНастроек();
	
	ОформитьСтатичныеЗаголовкиИПоля();
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
	// СкидкаНаценка
	Если ИспользоватьСкидкиНаценки Тогда
		
		ЗначениеСкидки = 1;
		ЗначениеНаценки = 2;
		
		ПараметрСкидкаНаценкаПроцент = Параметры.СкидкаНаценкаПроцент;
		ПараметрСкидкаНаценкаСумма = Параметры.СкидкаНаценкаСумма;
		
		Если ЗначениеЗаполнено(ПараметрСкидкаНаценкаПроцент) Тогда
			
			СкидкаНаценкаЗначение = ?(ПараметрСкидкаНаценкаПроцент > 0, ПараметрСкидкаНаценкаПроцент, -ПараметрСкидкаНаценкаПроцент);
			
			СкидкаНаценка = ?(ПараметрСкидкаНаценкаПроцент > 0, ЗначениеНаценки, ЗначениеСкидки);
			
			ЗначениеПроцент = 0;
			ПроцентСумма = ЗначениеПроцент;
			
			СуммаСкидкиНаценки = ?(ПараметрСкидкаНаценкаСумма > 0, ПараметрСкидкаНаценкаСумма, - ПараметрСкидкаНаценкаСумма);
			СуммаБезСкидкиНаценки = Сумма - ПараметрСкидкаНаценкаСумма;
			
		ИначеЕсли ЗначениеЗаполнено(ПараметрСкидкаНаценкаСумма) Тогда
			
			СкидкаНаценка = ?(ПараметрСкидкаНаценкаСумма > 0, ЗначениеНаценки, ЗначениеСкидки);
			
			ЗначениеСумма = 1;
			ПроцентСумма = ЗначениеСумма;
			
			СуммаСкидкиНаценки = ?(ПараметрСкидкаНаценкаСумма > 0, ПараметрСкидкаНаценкаСумма, - ПараметрСкидкаНаценкаСумма);
			СкидкаНаценкаЗначение = СуммаСкидкиНаценки;
			СуммаБезСкидкиНаценки = Сумма - ПараметрСкидкаНаценкаСумма;
			
		КонецЕсли;
		
	КонецЕсли;
	
	НастроитьФормуПоСкидкеНаценке();
	
	Если ВозвратТоваров Тогда
		УстановитьМаксКоличествоКВозврату();
	КонецЕсли;
	
	НеобходимоВводитьМарки = НЕ ЭтоЧекКоррекции И НЕ ЭтоЗаказ
		И (ЭтоМаркируемаяПродукция ИЛИ НеобходимостьВводаАкцизнойМарки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОпределитьМаксимальныеЗначенияСкидкиНаценки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыЗначенияНастроек" Тогда
		
		НастроитьФормуПоЗначениямНастроек();
		
	КонецЕсли;
	
	Если ПодключаемоеОборудованиеКлиент.ЭтоОповещениеСканераШтрихкода(ИмяСобытия) И ВводДоступен() Тогда
		
		Если НеобходимостьШтрихкодаПриПродаже Тогда
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
			ОбработатьПолученныйШтрихкод(Параметр, ДополнительныеПараметры);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	ОпределитьМаксимальныеЗначенияСкидкиНаценки();
	РассчитатьСуммы();
	
	НастроитьФормуПоСкидкеНаценке();
	
КонецПроцедуры

&НаКлиенте
Процедура СкидкаНаценкаПриИзменении(Элемент)
	
	ОпределитьМаксимальныеЗначенияСкидкиНаценки();
	РассчитатьСуммы();
	
	НастроитьФормуПоСкидкеНаценке();
	
	
КонецПроцедуры

&НаКлиенте
Процедура СкидкаНаценкаСуммаПроцентПриИзменении(Элемент)
	
	ОпределитьМаксимальныеЗначенияСкидкиНаценки();
	РассчитатьСуммы();
	
	НастроитьФормуПоСкидкеНаценке();
	
КонецПроцедуры

&НаКлиенте
Процедура СкидкаНаценкаЗначениеПриИзменении(Элемент)
	
	РассчитатьСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	
	ОпределитьМаксимальныеЗначенияСкидкиНаценки();
	РассчитатьСуммы();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НеобходимоВводитьМарки Тогда
		
		СтандартнаяОбработка = Ложь;
		ВвестиАкцизныеМарки();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоОчистка(Элемент, СтандартнаяОбработка)
	
	Если НеобходимоВводитьМарки Тогда
		
		СтандартнаяОбработка = Ложь;
		ВвестиАкцизныеМарки();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Если НеобходимоВводитьМарки Тогда
		
		СтандартнаяОбработка = Ложь;
		ВвестиАкцизныеМарки();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("УдалитьСтроку");
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("Сохранить");
	ПараметрыЗакрытия.Вставить("Цена",       Цена);
	ПараметрыЗакрытия.Вставить("Количество", Количество);
	ПараметрыЗакрытия.Вставить("Сумма",      Сумма);
	ПараметрыЗакрытия.Вставить("СуммаНДС",   СуммаНДС);
	ПараметрыЗакрытия.Вставить("Штрихкод",   Штрихкод);
	ПараметрыЗакрытия.Вставить("СтавкаНДС",  СтавкаНДС);
	
	ПараметрыЗакрытия.Вставить("СкидкаНаценкаПроцент", 0);
	ПараметрыЗакрытия.Вставить("СкидкаНаценкаСумма",   0);
	ПараметрыЗакрытия.Вставить("АдресМарокВХранилище", АдресМарокВХранилище);
	
	Если ИспользоватьСкидкиНаценки Тогда
		
		Если ПроцентСумма = 0 Тогда
			ПараметрыЗакрытия.СкидкаНаценкаПроцент = ?(СкидкаНаценка = 1, - СкидкаНаценкаЗначение, СкидкаНаценкаЗначение);
		КонецЕсли;
		
		ПараметрыЗакрытия.СкидкаНаценкаСумма = ?(СкидкаНаценка = 1, - СуммаСкидкиНаценки, СуммаСкидкиНаценки);
		
	КонецЕсли;
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура СканироватьШтрихкод(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	ДополнительныеПараметры.Вставить("ИмяОбработчикаЗакрытияСканирования", "ОбработкаЗакрытияСканирования");
	
	ПодключаемоеОборудованиеКлиент.ПолучитьШтрихкод(ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьСканер(Команда)
	
	ПодключаемоеОборудованиеКлиент.ИнициализироватьАсинхронныйСканер(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьШтрихкодыНоменклатуры()
	
	Если ИспользуетсяЕГАИС И Номенклатура.АлкогольнаяПродукция Тогда
		
		СписокШтрихкодов = РегистрыСведений.Штрихкоды.ШтрихкодыНоменклатуры(Номенклатура);
		Элементы.Штрихкод.СписокВыбора.ЗагрузитьЗначения(СписокШтрихкодов);
		
		Если ЗначениеЗаполнено(Штрихкод) И СписокШтрихкодов.Найти(Штрихкод) = Неопределено Тогда
			
			Элементы.Штрихкод.СписокВыбора.Добавить(Штрихкод, Штрихкод);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиАкцизныеМарки()
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтотОбъект);
	
	ПараметрыВводаМарок = ПродажиКлиент.ПараметрыВводаМарок();
	ПараметрыВводаМарок.Номенклатура             = Номенклатура;
	ПараметрыВводаМарок.АдресМарокВХранилище     = АдресМарокВХранилище;
	ПараметрыВводаМарок.МаксимальноеКоличество   = МаксимальноеКоличество;
	ПараметрыВводаМарок.АдресМарокЧекаВХранилище = АдресМарокЧекаВХранилище();
		
	ОбработчикОповещения = Новый ОписаниеОповещения("ВводАкцизныхМарокЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПродажиКлиент.ОткрытьВводМарок(ЭтотОбъект, ПараметрыВводаМарок, ОбработчикОповещения);
	
КонецПроцедуры

&НаКлиенте
Функция АдресМарокЧекаВХранилище()
	
	Если ЗначениеЗаполнено(АдресМарокЧекаВХранилище) Тогда
		
		Возврат АдресМарокЧекаВХранилище;
	КонецЕсли;
	
	МаркиСтроки = ПолучитьИзВременногоХранилища(АдресМарокВХранилище);
	
	МассивМарокЧека = ПолучитьИзВременногоХранилища(ВладелецФормы.АдресМарокЧекаВХранилище());
	
	МаркиДляПроверкиДублей = ОбщегоНазначенияКлиентСервер.СократитьМассив(МассивМарокЧека, МаркиСтроки);
	
	АдресМарокЧекаВХранилище = ПоместитьВоВременноеХранилище(МаркиДляПроверкиДублей, УникальныйИдентификатор);
	
	Возврат АдресМарокЧекаВХранилище;
	
КонецФункции

&НаКлиенте
Процедура ВводАкцизныхМарокЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если Результат.Свойство("АдресВХранилище") Тогда
			
			Марки = ПолучитьИзВременногоХранилища(Результат.АдресВХранилище);
			
			АдресМарокВХранилище = Результат.АдресВХранилище;
			Результат.Свойство("КоличествоМарок", Количество);
			
		КонецЕсли;
		
		ОпределитьМаксимальныеЗначенияСкидкиНаценки();
		РассчитатьСуммы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммы()
	
	Сумма = Цена * Количество;
	
	Если ИспользоватьСкидкиНаценки Тогда
		
		СуммаБезСкидкиНаценки = Сумма;
		СуммаСкидкиНаценки = 0;
		
		Если НЕ СкидкаНаценкаСуммаПродажи = 0 Тогда
			
			ПроцентСумма = 1; //сумма
			
			СтруктураДанных = Новый Структура;
			СтруктураДанных.Вставить("Количество",                Количество);
			СтруктураДанных.Вставить("КоличествоПродажи",         КоличествоПродажи);
			СтруктураДанных.Вставить("Цена",                      Цена);
			СтруктураДанных.Вставить("СкидкаНаценкаСуммаПродажи", СкидкаНаценкаСуммаПродажи);
			СтруктураДанных.Вставить("СкидкаНаценкаСумма",        0);
			СтруктураДанных.Вставить("Сумма",                     0);
			СтруктураДанных.Вставить("ЦенаСУчетомСкидки",         0);
			
			ОбработкаТабличнойЧастиВызовСервера.ОбработатьСтрокуВозвратаПоПродаже(СтруктураДанных);
			
			Если СтруктураДанных.СкидкаНаценкаСумма > 0 Тогда
				СкидкаНаценкаЗначение = СтруктураДанных.СкидкаНаценкаСумма;
				СкидкаНаценка = 2;
			ИначеЕсли СтруктураДанных.СкидкаНаценкаСумма < 0 Тогда
				СкидкаНаценкаЗначение = - СтруктураДанных.СкидкаНаценкаСумма;
				СкидкаНаценка = 1;
			Иначе
				СкидкаНаценка = Неопределено;
				СкидкаНаценкаЗначение = 0;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ПроцентСумма = 0 Тогда
			СуммаСкидкиНаценки = (Сумма * СкидкаНаценкаЗначение)/100;
		ИначеЕсли ПроцентСумма = 1 Тогда
			СуммаСкидкиНаценки = СкидкаНаценкаЗначение;
		КонецЕсли;
		
		Если СкидкаНаценка = 1 Тогда // Скидка
			Сумма = Сумма - СуммаСкидкиНаценки;
		ИначеЕсли СкидкаНаценка = 2 Тогда
			Сумма = Сумма + СуммаСкидкиНаценки;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЦенаВключаетНДС Тогда
		
		Если ЭтоМаркируемаяПродукция И НЕ ЭтоЧекКоррекции И Количество > 1 Тогда
			
			Коэффициенты = Новый Массив(Количество);
			
			Индекс = 0;
			Для Каждого _ Из Коэффициенты Цикл
				Коэффициенты[Индекс] = 1;
				Индекс = Индекс + 1;
			КонецЦикла;
			
			РаспределенныеСуммы = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(Сумма, Коэффициенты);
			
			СуммаНДС = 0;
			Для Каждого РаспределеннаяСумма Из РаспределенныеСуммы Цикл
				
				СуммаНДС = СуммаНДС + ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(РаспределеннаяСумма, ПроцентНДС);
			КонецЦикла;
			
		Иначе
			СуммаНДС = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(Сумма, ПроцентНДС);
		КонецЕсли;
		
	Иначе
		СуммаНДС = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоСкидкеНаценке()
	
	Если НЕ ИспользоватьСкидкиНаценки Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ПроцентСуммаСкидкиНаценки, СуммаБезСкидкиНаценки, СуммаСкидкиНаценки", "Видимость", ЗначениеЗаполнено(СкидкаНаценка));
	
	Если НЕ ЗначениеЗаполнено(СкидкаНаценка) Тогда
		Возврат;
	КонецЕсли;
	
	Если СкидкаНаценка = 1 Тогда // Скидка
		
		Элементы.СуммаСкидкиНаценки.Заголовок = НСтр("ru = 'Скидка'");
		Элементы.СуммаБезСкидкиНаценки.Заголовок = НСтр("ru = 'Без скидки'");
		
	ИначеЕсли СкидкаНаценка = 2 Тогда // Наценка
		
		Элементы.СуммаСкидкиНаценки.Заголовок = НСтр("ru = 'Наценка'");
		Элементы.СуммаБезСкидкиНаценки.Заголовок = НСтр("ru = 'Без наценки'");
		
	КонецЕсли;
	
	Если ПроцентСумма = 0 Тогда // скидка процентом
		
		Элементы.СкидкаНаценкаЗначение.КнопкаРегулирования = Истина;
		
	Иначе // скидка суммой
		
		Элементы.СкидкаНаценкаЗначение.КнопкаРегулирования = Ложь;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОпределитьМаксимальныеЗначенияСкидкиНаценки()
	
	Если Не ИспользоватьСкидкиНаценки Тогда
		Возврат;
	КонецЕсли;
	
	Если СкидкаНаценка = 1 Тогда // Скидка
		
		Если ПроцентСумма = 0 Тогда // скидка процентом
			
			МаксимальноеЗначение = 99.99;
			
		Иначе // скидка суммой
			ОднаКопейка = 0.01;
			МаксимальноеЗначение = (Количество*Цена) - ОднаКопейка;
			
		КонецЕсли;
		
	ИначеЕсли СкидкаНаценка = 2 Тогда //Наценка
		
		Если ПроцентСумма = 0 Тогда //наценка процентом
			
			МаксимальноеЗначение = 999.99;
			
		Иначе // наценка суммой
			МаксимальноеЗначение = 9999999999999.99;
		КонецЕсли;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Если СкидкаНаценкаЗначение > МаксимальноеЗначение Тогда
		СкидкаНаценкаЗначение = МаксимальноеЗначение;
	КонецЕсли;
	
	Элементы.СкидкаНаценкаЗначение.МаксимальноеЗначение = МаксимальноеЗначение;
	
КонецПроцедуры

&НаСервере
Процедура ОформитьСтатичныеЗаголовкиИПоля()
	
	// заголовок формы
	ЗаголовокФормы = НСтр("ru = 'Строка №%НомерСтроки%'");
	ЗаголовокФормы = СтрЗаменить(ЗаголовокФормы, "%НомерСтроки%", НомерСтроки);
	Заголовок      = ЗаголовокФормы;
	
	// количество
	ЗаголовокКоличества =  НСтр("ru = 'Количество, %ЕдИзм%'");
	ЗаголовокКоличества = СтрЗаменить(ЗаголовокКоличества, "%ЕдИзм%", Номенклатура.ЕдиницаИзмерения);
	Элементы.Количество.Заголовок = ЗаголовокКоличества;
	
	// цена
	Если ЦенаВключаетНДС Тогда
		ЗаголовокЦена = НСтр("ru = 'Цена (с НДС)'");
		Элементы.Цена.Заголовок = ЗаголовокЦена;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Цена", "ТолькоПросмотр", ЗначениеЗаполнено(Цена));
	
	ОбновитьЗаголовокСтавкиНДС();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ГруппаСуммаНДС",
		"Видимость", ЦенаВключаетНДС
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ГруппаСкидки, СуммаБезСкидкиНаценки, СуммаСкидкиНаценки", "Видимость", 
		ИспользоватьСкидкиНаценки);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ГруппаШтрихкод", "Видимость", НеобходимостьШтрихкодаПриПродаже);
		
	Если ВозвратТоваров Тогда
		Элементы.ГруппаСкидки.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если ТолькоПросмотрФормы Тогда
		
		Элементы.Отмена.Заголовок = НСтр("ru = 'Закрыть'");
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Готово, УдалитьСтроку, СканироватьШтрихкод", "Видимость", Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Количество, СкидкаНаценкаЗначение", "КнопкаРегулирования", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Количество, СкидкаНаценкаЗначение, Штрихкод", "ТолькоПросмотр", Истина);
		
		
		Если СкидкаНаценка = 0 Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ГруппаСкидки", "Видимость", Ложь);
		Иначе
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "СкидкаНаценка, ПроцентСумма", "Доступность", Ложь);
		КонецЕсли;
		
		Элементы.СтавкаНДСПросмотр.Видимость = Истина;
		Элементы.СтавкаНДСРедактирование.Видимость = Ложь;
		
	Иначе
		
		Элементы.СтавкаНДСПросмотр.Видимость = Ложь;
		Элементы.СтавкаНДСРедактирование.Видимость = Истина;
		
	КонецЕсли;
	
	ОбщегоНазначения.УстановитьЖирныйШрифтПолей(ЭтаФорма, "Сумма");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ИспользуетсяАсинхронныйСканер = ЗначениеНастроекВызовСервераПовтИсп.ИспользуетсяАсинхронныйСканерШтрихкодов();
	
	ОбщегоНазначения.УстановитьШрифт(ЭтотОбъект);
	ОбщегоНазначения.ОформитьКоличественныеПоля(ЭтотОбъект, "Количество");
	
	ОбщегоНазначения.УстановитьВысотуПоляНаименованиеТовара(ЭтотОбъект, ,"Номенклатура");
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, "СканироватьШтрихкод", "Видимость",
		ЗначениеЗаполнено(ЗначениеНастроекВызовСервераПовтИсп.ТипУстройстваСканирования()) И НЕ ИспользуетсяАсинхронныйСканер);
		
	НастроитьЭлементыАсинхронногоСканера();
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,,,2);
	
	
	Элементы.СтавкаНДСПросмотр.ЦветТекста = ЗначениеНастроекКлиентСерверПовтИсп.ЦветТекстаЗаголовка();
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыАсинхронногоСканера()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "АктивироватьСканер", "Видимость", 
		ИспользуетсяАсинхронныйСканер И НеобходимостьШтрихкодаПриПродаже
	);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМаксКоличествоКВозврату()
	
	ДанныеТовараКВозврату = ПродажиВызовСервера.ПолучитьДанныеПоТоваруКВозврату(ЧекПродажи, Чек, Номенклатура, ЦенаСУчетомСкидки);
	
	МаксимальноеКоличество = ДанныеТовараКВозврату.МаксимальноеКоличествоКВозврату;
	
	НадписьМаксимальноеКоличество = НСтр("ru = 'максимальное количество = %МаксимальноеКоличество%'");
	НадписьМаксимальноеКоличество = СтрЗаменить(НадписьМаксимальноеКоличество, "%МаксимальноеКоличество%", 
		Формат(МаксимальноеКоличество, ЗначениеНастроекПовтИсп.ФорматКоличественныхПолей()));
	
	Элементы.МаксимальноеКоличествоИнфо.Видимость = НЕ ТолькоПросмотрФормы;
	
	МаксимальноеКоличествоИнфо               = НадписьМаксимальноеКоличество;
	Элементы.Количество.МаксимальноеЗначение = МаксимальноеКоличество;
	
	СкидкаНаценкаСуммаПродажи = ДанныеТовараКВозврату.СкидкаНаценкаСуммаПродажи;
	КоличествоПродажи         = ДанныеТовараКВозврату.КоличествоПродажи;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтавкиНДС()
	
	Если ЦенообразованиеКлиентСервер.ПрименяетсяСтавкаНДС20() Тогда
		
		СтавкиНДС.Добавить(Перечисления.СтавкиНДС.НДС20,  НСтр("ru = 'НДС 20%'"));
		
		Если ВозвратТоваров И ЗначениеЗаполнено(ЧекПродажи) Тогда
			
			ДатаЧекаПродажи = ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(ЧекПродажи, "Дата");
			
			Если ДатаЧекаПродажи < ЦенообразованиеКлиентСервер.ПолучитьДатуПереходаНДС20() Тогда
				СтавкиНДС.Добавить(Перечисления.СтавкиНДС.НДС18, НСтр("ru = 'НДС 18%'"));
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		СтавкиНДС.Добавить(Перечисления.СтавкиНДС.НДС18,  НСтр("ru = 'НДС 18%'"));
	КонецЕсли;
	
	СтавкиНДС.Добавить(Перечисления.СтавкиНДС.НДС10,  НСтр("ru = 'НДС 10%'"));
	СтавкиНДС.Добавить(Перечисления.СтавкиНДС.НДС0,   НСтр("ru = 'НДС 0%'"));
	СтавкиНДС.Добавить(Перечисления.СтавкиНДС.БезНДС, НСтр("ru = 'Без НДС'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтавкуНДСПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ СтавкаНДС = Результат.Значение Тогда
		СтавкаНДС = Результат.Значение;
		ПроцентНДС = ЦенообразованиеКлиентСерверПовтИсп.ПолучитьСтавкуНДСЧислом(СтавкаНДС);
		РассчитатьСуммы();
		ОбновитьЗаголовокСтавкиНДС();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокСтавкиНДС()
	
	// НДС
	Если ЦенаВключаетНДС Тогда
		
		Если СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			ЗаголовокНДС = НСтр("ru = 'Без НДС'");
		Иначе
			ЗаголовокНДС =  НСтр("ru = 'НДС %СтавкаНДС%'");
			ЗаголовокНДС = СтрЗаменить(ЗаголовокНДС, "%СтавкаНДС%", СтавкаНДС);
		КонецЕсли;
		
		Элементы.СтавкаНДСПросмотр.Заголовок = ЗаголовокНДС;
		Элементы.СтавкаНДСРедактирование.Заголовок = ЗаголовокНДС;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
	Если ПараметрыСеанса.ГоризонтальнаяОриентацияЭкрана Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Количество, Штрихкод", "ПоложениеЗаголовка", 
			ПоложениеЗаголовкаЭлементаФормы.Лево);
			
		Элементы.ГруппаСкидки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		
		Элементы.СканироватьШтрихкод.Высота = 1;
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Количество, Штрихкод", "ПоложениеЗаголовка", 
			ПоложениеЗаголовкаЭлементаФормы.Верх);
			
		Элементы.ГруппаСкидки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.СканироватьШтрихкод.Высота = 2;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДС(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ИзменитьСтавкуНДСПродолжение", ЭтотОбъект);
	ПоказатьВыборИзМеню(Оповещение, СтавкиНДС, Элементы.СтавкаНДСРедактирование);
	
КонецПроцедуры

#КонецОбласти
