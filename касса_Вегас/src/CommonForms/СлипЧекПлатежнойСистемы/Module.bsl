
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	
	ТекстСлипЧека = Параметры.ТекстСлипЧека;
	ДатаОперации = Параметры.ДатаОперации;
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Печать(Команда)
	
	ОчиститьСообщения();
	
	Если ПустаяСтрока(ТекстСлипЧека) Тогда
		Возврат;
	КонецЕсли;
	
	ПечатьЗавершена = Ложь;
	
	// функция разреза [cut] будет перенесена в мБПО, временное решение.
	МассивРазрезанныхСлипЧеков = ОбщегоНазначенияКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекстСлипЧека, "[cut]", Ложь, Ложь);
	
	Для Каждого РазрезанныйСлипЧек Из МассивРазрезанныхСлипЧеков Цикл
		
		ОчиститьСообщения();
		ВыходныеПараметры = Неопределено;
		ВходныеПараметры = Новый Структура("СтрокиТекста", РазрезанныйСлипЧек);
		
		Если МенеджерОборудованияКлиент.ВыполнитьПечатьТекста(
			УникальныйИдентификатор,
			ЗначениеНастроекВызовСервераПовтИсп.ОборудованиеПечати(),
			ВходныеПараметры,
			ВыходныеПараметры) Тогда
			
			ПечатьЗавершена = Истина;
		Иначе
			
			ПечатьЗавершена = Ложь;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ВыходныеПараметры.ТекстОшибки);
			Возврат;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПечатьЗавершена Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоEmail(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		СтруктураПисьма = ПолучитьСтруктуруПисьма();
		
		РаботаСПочтойКлиент.ОтправитьОтчет(СтруктураПисьма);
		
	#Иначе
		
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru = 'Операция доступна только из мобильного приложения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПолучитьСтруктуруПисьма()
	
	СтруктураПисьма = РаботаСПочтойКлиент.СтруктураПисьмаОтчета();
	
	СтруктураПисьма.ТемаПисьма  = ПолучитьТемуПисьма();
	СтруктураПисьма.ТекстПисьма = НСтр("ru = 'Дата платежной операции:'") + " " + ДатаОперации;
	
	ТабДок = ОбщегоНазначенияКлиентСервер.СоздатьТабличныйДокументСТекстом(ТекстСлипЧека);
	
	ЗаписанныйФайл = РаботаСПочтойКлиент.ЗаписатьТабДокВФайлПисьма(ТабДок, СтруктураПисьма.ТемаПисьма);
	
	РаботаСПочтойКлиент.ДобавитьЗаписанныйФайлВоВложениеПисьма(СтруктураПисьма, ЗаписанныйФайл);
	
	Возврат СтруктураПисьма;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТемуПисьма()
	
	ТемаПисьма = НСтр("ru = '[1С:МК] Слип чек платежной системы'");
	
	Возврат ТемаПисьма;
	
КонецФункции

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Печать", "Видимость",
		ЗначениеЗаполнено(ЗначениеНастроекВызовСервераПовтИсп.ОборудованиеПечати()));
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти
