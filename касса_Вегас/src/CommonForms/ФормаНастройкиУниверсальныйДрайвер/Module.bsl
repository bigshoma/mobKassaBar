
#Область ОбработчикиСобытийФорм

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЗначениеПараметров = Параметры.ПараметрыОборудования;
	
	Параметры.Свойство("Идентификатор",       Идентификатор);
	Параметры.Свойство("ДрайверОборудования", ДрайверОборудования);
	Параметры.Свойство("ПакетнаяПечать"     , ПакетнаяПечать);
	Параметры.Свойство("ТипОборудованияИмя" , ТипОборудованияИмя);
	
	Заголовок = ДрайверОборудования.Наименование;    
	МенеджерОборудованияВызовСервера.ПодготовитьЭлементУправления(Элементы.ВерсияДрайвера);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
#Если НЕ МобильноеПриложениеКлиент Тогда 
	Элементы.ФормаТестУстройства.Видимость = Истина;
#КонецЕсли
	
	ОбновитьИнформациюОДрайвере(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Результат = ПолучитьНастройки();
	
	МенеджерОборудованияВызовСервера.СохранитьПараметрыУстройства(Результат.Идентификатор, Результат.ПараметрыОборудования, Результат.ПакетнаяПечать);
	
	Закрыть(ПолучитьНастройки());    
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНаСайтПроизводителяНажатие(Элемент)
	
	Оповещения = Новый ОписаниеОповещения("НачатьЗапускПриложенияЗавершение", ЭтотОбъект);
	НачатьЗапускПриложения(Оповещения, АдресЗагрузкиДрайвера, , Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьНастройки()
	            
	ПараметрыДрайвера = ПолучитьРеквизиты();
	
	НовыеЗначениеПараметров = Новый Структура;
	Для Каждого Параметр из ПараметрыДрайвера Цикл
		Если Лев(Параметр.Имя, 2) = "P_" Тогда
			НовыеЗначениеПараметров.Вставить(Параметр.Имя, ЭтаФорма[Параметр.Имя]);
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("Идентификатор"        , Идентификатор);
	Результат.Вставить("ПараметрыОборудования", НовыеЗначениеПараметров);
	Результат.Вставить("ПакетнаяПечать"       , ПакетнаяПечать);
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьНастраиваемыйИнтерфейс(ОписаниеИнтерфейса)
	
	БазоваяГруппа = Неопределено;
	Элемент = Неопределено;
	ИндексГруппы = 0;
	КоличествоСтраниц = 0;
	ТекущаяСтраница = Элементы.Добавить("ОсновнаяСтраница", Тип("ГруппаФормы"), Элементы.Страницы);
	
	ЧтениеXML = Новый ЧтениеXML; 
	ЧтениеXML.УстановитьСтроку(ОписаниеИнтерфейса);
	ЧтениеXML.ПерейтиКСодержимому();
	
	Если ЧтениеXML.Имя = "Settings" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
		Пока ЧтениеXML.Прочитать() Цикл  
			
			Если ЧтениеXML.Имя = "Parameter" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
				
				ПараметрДоступность = ?(ВРег(ЧтениеXML.ЗначениеАтрибута("ReadOnly")) = "TRUE", Истина, Ложь) 
										Или ?(ВРег(ЧтениеXML.ЗначениеАтрибута("ReadOnly")) = "ИСТИНА", Истина, Ложь);
				Если ПараметрДоступность Тогда
					ПараметрИмя = "R_" + ЧтениеXML.ЗначениеАтрибута("Name");
				Иначе
					ПараметрИмя = "P_" + ЧтениеXML.ЗначениеАтрибута("Name");
				КонецЕсли;
				ПараметрЗаголовок   = ЧтениеXML.ЗначениеАтрибута("Caption");
				ПараметрТип         = ВРег(ЧтениеXML.ЗначениеАтрибута("TypeValue"));
				ПараметрТип         = ?(НЕ ПустаяСтрока(ПараметрТип), ПараметрТип, "STRING");
				ПараметрЗначение    = ЧтениеXML.ЗначениеАтрибута("DefaultValue");
				ПараметрОписание    = ЧтениеXML.ЗначениеАтрибута("Description");
				
				ПараметрСуществует = Ложь;
				ПараметрыДрайвера = ПолучитьРеквизиты();
				Для Каждого ПараметрДрайвера из ПараметрыДрайвера Цикл
					Если ПараметрДрайвера.Имя = ПараметрИмя Тогда
						ПараметрСуществует = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если Не ПараметрСуществует Тогда
					
					Если ПараметрТип = "NUMBER" Тогда 
						Реквизит = Новый РеквизитФормы(ПараметрИмя, Новый ОписаниеТипов("Число"), , ПараметрЗаголовок, Истина);
					ИначеЕсли ПараметрТип = "BOOLEAN" Тогда 
						Реквизит = Новый РеквизитФормы(ПараметрИмя, Новый ОписаниеТипов("Булево"), , ПараметрЗаголовок, Истина);
					Иначе
						Реквизит = Новый РеквизитФормы(ПараметрИмя, Новый ОписаниеТипов("Строка"), , ПараметрЗаголовок, Истина);
					КонецЕсли;
				
					// Добавляем новый реквизит в форму
					ДобавляемыеРеквизиты = Новый Массив;
					ДобавляемыеРеквизиты.Добавить(Реквизит);
					ИзменитьРеквизиты(ДобавляемыеРеквизиты);
				
				КонецЕсли;
				
				Если Элементы.Найти(ПараметрИмя) = Неопределено Тогда
					// Если не было создано не одной группы
					Если БазоваяГруппа = Неопределено Тогда
						БазоваяГруппа = Элементы.Добавить("БазоваяГруппа" + КоличествоСтраниц, Тип("ГруппаФормы"), ТекущаяСтраница);
						БазоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
						БазоваяГруппа.РастягиватьПоГоризонтали = Истина;
						БазоваяГруппа.Заголовок = НСтр("ru = 'Параметры'");
						БазоваяГруппа.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
						БазоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
					КонецЕсли;
					// Добавляем новое поле ввода на форму
					Элемент = Элементы.Добавить(ПараметрИмя, Тип("ПолеФормы"), БазоваяГруппа);
					Если ПараметрТип = "BOOLEAN" Тогда 
						Элемент.Вид = ВидПоляФормы.ПолеФлажка;
						Элемент.ВертикальноеПоложение = ВертикальноеПоложениеЭлемента.Центр;
					Иначе
						Элемент.Вид = ВидПоляФормы.ПолеВвода;
						Элемент.АвтоМаксимальнаяШирина = Ложь;
						Элемент.РастягиватьПоГоризонтали = Истина;
						МенеджерОборудованияВызовСервера.ПодготовитьЭлементУправления(Элемент);
					КонецЕсли;
					Элемент.ПутьКДанным = ПараметрИмя;
					Элемент.Подсказка = ПараметрОписание;
					Элемент.ТолькоПросмотр = ПараметрДоступность; 
				КонецЕсли;
				
				ХранимоеЗначение = Неопределено;
				Если ЗначениеПараметров.Свойство(ПараметрИмя, ХранимоеЗначение) Тогда
					ПараметрЗначение = ХранимоеЗначение
				Иначе
					Если НЕ ПустаяСтрока(ПараметрЗначение) Тогда
						Если ПараметрТип = "BOOLEAN" Тогда
							ПараметрЗначение = ?(ВРег(ПараметрЗначение) = "TRUE", Истина, Ложь) ИЛИ  ?(ВРег(ПараметрЗначение) = "ИСТИНА", Истина, Ложь);
						ИначеЕсли ПараметрТип = "STRING" Тогда
							ПараметрЗначение = Строка(ПараметрЗначение);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ЭтаФорма[ПараметрИмя] = ПараметрЗначение;
				МастерПараметр         = ЧтениеXML.ЗначениеАтрибута("MasterParameterName");
				МастерПараметрЗначение = ЧтениеXML.ЗначениеАтрибута("MasterParameterValue");
				МастерПараметрОперация = ЧтениеXML.ЗначениеАтрибута("MasterParameterOperation");
				
			КонецЕсли;
			
			Если ЧтениеXML.Имя = "ChoiceList" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
				
				Если НЕ (Элемент = Неопределено) И НЕ (Элемент.Вид = ВидПоляФормы.ПолеФлажка) Тогда   
					Элемент.РежимВыбораИзСписка  = Истина; 
					Элемент.РедактированиеТекста = Ложь; 
				КонецЕсли;
				
				Пока ЧтениеXML.Прочитать() И НЕ (ЧтениеXML.Имя = "ChoiceList") Цикл   
					Если ЧтениеXML.Имя = "Item" И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
						ЗначениеАтрибута = ЧтениеXML.ЗначениеАтрибута("Value"); 
						Если ЧтениеXML.Прочитать() Тогда
							ПредставлениеАтрибута = ЧтениеXML.Значение;
						КонецЕсли;
						Если ПустаяСтрока(ЗначениеАтрибута) Тогда
							ЗначениеАтрибута = ПредставлениеАтрибута;
						КонецЕсли;
						
						Если ПараметрТип = "NUMBER" Тогда 
							Элемент.СписокВыбора.Добавить(Число(ЗначениеАтрибута), ПредставлениеАтрибута);
						Иначе	
							Элемент.СписокВыбора.Добавить(ЗначениеАтрибута, ПредставлениеАтрибута)
						КонецЕсли;
						МенеджерОборудованияВызовСервера.ПодготовитьЭлементУправления(Элемент);
					КонецЕсли;
				КонецЦикла; 
				
			КонецЕсли;
			
			Если ЧтениеXML.Имя = "Page" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				ЗаголовокСтраницы = ЧтениеXML.ЗначениеАтрибута("Caption");
				ЗаголовокСтраницы = ?(ПустаяСтрока(ЗаголовокСтраницы), НСтр("ru = 'Параметры'"), ЗаголовокСтраницы);
				КоличествоСтраниц = КоличествоСтраниц + 1;
				Если КоличествоСтраниц > 1 Тогда
					Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
					ТекущаяСтраница = Элементы.Добавить("Страница" + КоличествоСтраниц, Тип("ГруппаФормы"), Элементы.Страницы);
					БазоваяГруппа = Неопределено;
				КонецЕсли;
				ТекущаяСтраница.Заголовок = ЗаголовокСтраницы;
			КонецЕсли;
				
			Если ЧтениеXML.Имя = "Group" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
				ЗаголовокГруппы = ЧтениеXML.ЗначениеАтрибута("Caption");
				ЗаголовокГруппы = ?(ПустаяСтрока(ЗаголовокГруппы), НСтр("ru = 'Параметры'"), ЗаголовокГруппы);
				БазоваяГруппа = Элементы.Добавить("Группа" + ИндексГруппы, Тип("ГруппаФормы"), ТекущаяСтраница);
				БазоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
				БазоваяГруппа.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
				БазоваяГруппа.РастягиватьПоГоризонтали = Истина;
				БазоваяГруппа.Заголовок = ЗаголовокГруппы;
				БазоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
				ИндексГруппы = ИндексГруппы + 1;
			КонецЕсли;
			
		КонецЦикла;  
		
	КонецЕсли;
	
	ЧтениеXML.Закрыть(); 
	
КонецПроцедуры     

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере(ПервыйЗапуск)

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;
	
	ВыходныеПараметры = Неопределено;
	Если МенеджерОборудованияКлиент.ПолучитьВерсиюДрайвера(УникальныйИдентификатор, Идентификатор, Неопределено, ВыходныеПараметры) Тогда
		
		ВерсияДрайвера = ВыходныеПараметры.ВерсияДрайвера;
		РевизияИнтерфейса = ВыходныеПараметры.РевизияИнтерфейса;
		Элементы.ВерсияДрайвера.Видимость = Истина;
		Элементы.ДрайверНеУстановлен.Видимость = Ложь;
		
		Если (ТипОборудованияИмя = "ПринтерЧеков" Или ТипОборудованияИмя = "ФискальныйРегистратор") И  РевизияИнтерфейса > 1000 Тогда
			Элементы.ПакетнаяПечать.Видимость = Истина;
		Иначе
			ПакетнаяПечать = Ложь;
		КонецЕсли;
			
		Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду(Идентификатор, "ПолучитьОписаниеДрайвера", ВходныеПараметры, ВыходныеПараметры) Тогда
			
			АдресЗагрузкиДрайвера = ?(ВыходныеПараметры.Свойство("URLЗагрузкиДрайвера"), ВыходныеПараметры.URLЗагрузкиДрайвера, "");
			ИнтеграционныйКомпонент = ?(ВыходныеПараметры.Свойство("ИнтеграционныйКомпонент"), ВыходныеПараметры.ИнтеграционныйКомпонент, Ложь);
			ОсновнойДрайверУстановлен = ?(ВыходныеПараметры.Свойство("ОсновнойДрайверУстановлен"), ВыходныеПараметры.ОсновнойДрайверУстановлен, Истина);
			Если ИнтеграционныйКомпонент И НЕ ОсновнойДрайверУстановлен Тогда
				Элементы.ДрайверИнтеграционныйКомпонент.Видимость = Истина;
				Элементы.ПерейтиНаСайтПроизводителя.Видимость = НЕ ПустаяСтрока(АдресЗагрузкиДрайвера);
				Элементы.Сообщение.Видимость = Ложь;
			КонецЕсли;
			Если ВыходныеПараметры.Свойство("ТаблицаПараметров") И НЕ ПустаяСтрока(ВыходныеПараметры.ТаблицаПараметров) Тогда
				ОбновитьНастраиваемыйИнтерфейс(ВыходныеПараметры.ТаблицаПараметров);
				Элементы.Сообщение.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Элементы.ВерсияДрайвера.Видимость = Ложь;
		Элементы.ДрайверНеУстановлен.Видимость = Истина;
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)
	
	ОчиститьСообщения();
	
	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;
	
	ПараметрыПодключения = ПолучитьНастройки().ПараметрыОборудования;
	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду(Идентификатор, "CheckHealth", ВходныеПараметры, ВыходныеПараметры, ПараметрыПодключения); 
	
	Если ВыходныеПараметры <> Неопределено И ВыходныеПараметры.Свойство("РезультатТеста") Тогда
		РезультатТеста = ВыходныеПараметры.РезультатТеста;
	Иначе
		РезультатТеста = "";
	КонецЕсли;
		
	ТекстСообщения = ?(Результат, НСтр("ru = 'Тест успешно выполнен. %Описание%'"), НСтр("ru = 'Тест не пройден. %Описание%'"));
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Описание%", РезультатТеста);
	Сообщить(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗапускПриложенияЗавершение(Результат, Параметры) Экспорт
	
	Сообщить(НСтр("ru='Начата установка основной поставки драйвера.'")); 
	
КонецПроцедуры

#КонецОбласти
