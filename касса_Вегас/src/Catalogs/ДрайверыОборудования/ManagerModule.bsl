// Процедура заполняет предопределенные элементы в справочнике драйверов.
//
Процедура ЗаполнитьПредопределенныйЭлемент(ТипОборудования, ИмяДрайвера, НаименованиеДрайвера, ИдентификаторОбъекта, ИнтеграционноеПриложение, ВерсияДрайвера = Неопределено, УстановкаИзМакета = Истина) Экспорт
	
	Попытка
		Драйвер = МенеджерОборудованияВызовСервера.ПредопределенныйЭлемент("Справочник.ДрайверыОборудования." + ИмяДрайвера);
	Исключение
		Сообщение = НСтр("ru = 'Предопределенный элемент ""%Параметр%"" не найден.'");
		Сообщение = СтрЗаменить(Сообщение, "%Параметр%", "Справочник.ДрайверыОборудования." + ИмяДрайвера);
		ВызватьИсключение Сообщение;
	КонецПопытки;
		
	Если Драйвер = Неопределено Тогда  
		Драйвер = Справочники.ДрайверыОборудования.СоздатьЭлемент();
		Драйвер.ИмяПредопределенныхДанных = ИмяДрайвера;     
	Иначе 
		Драйвер = Драйвер.ПолучитьОбъект();
	КонецЕсли;
	Драйвер.ТипОборудования      = ТипОборудования;
	Драйвер.Наименование         = НаименованиеДрайвера;
	Драйвер.ИдентификаторОбъекта = ИдентификаторОбъекта;
	Драйвер.ИнтеграционноеПриложение = ИнтеграционноеПриложение;
	Драйвер.ВерсияДрайвера           = ВерсияДрайвера;
	Драйвер.УстановкаИзМакета        = УстановкаИзМакета;
	Драйвер.Записать();
	
КонецПроцедуры

// Функция возвращает список драйверов. 
//
Функция ПолучитьСписокДрайверов(Идентификатор = Неопределено) Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДрайверыОборудования.Ссылка КАК Ссылка,
	|	ДрайверыОборудования.Наименование         КАК Наименование,
	|	ДрайверыОборудования.ТипОборудования      КАК ТипОборудования,
	|	ДрайверыОборудования.ИдентификаторОбъекта КАК ИдентификаторОбъекта,
	|	ДрайверыОборудования.УстановкаИзМакета    КАК УстановкаИзМакета,
	|	ДрайверыОборудования.ВерсияДрайвера       КАК ВерсияДрайвера,
	|	ДрайверыОборудования.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных, 
	|	ДрайверыОборудования.ИнтеграционноеПриложение  КАК ИнтеграционноеПриложение
	|ИЗ
	|	Справочник.ДрайверыОборудования КАК ДрайверыОборудования ";
	
	Если Идентификатор <> Неопределено Тогда
		ТекстЗапроса = ТекстЗапроса + " ГДЕ (ДрайверыОборудования.Ссылка = &Идентификатор)"
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	// Установим параметры запроса (фильтрующие выборку значения)
	Если Идентификатор <> Неопределено Тогда
		// Фильтр по конкретному драйверу
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|УПОРЯДОЧИТЬ ПО
		|	ТипОборудования,
		|	Наименование;";

	Выборка = Запрос.Выполнить().Выбрать();
	
	СписокДрайверов = Новый Массив();
	Пока Выборка.Следующий() Цикл
		ДанныеДрайвера = Новый Структура();
		ДанныеДрайвера.Вставить("Ссылка"                   , Выборка.Ссылка);
		ДанныеДрайвера.Вставить("Наименование"             , Выборка.Наименование);
		ДанныеДрайвера.Вставить("ТипОборудования"          , Выборка.ТипОборудования);
		ДанныеДрайвера.Вставить("ИдентификаторОбъекта"     , Выборка.ИдентификаторОбъекта);
		ДанныеДрайвера.Вставить("УстановкаИзМакета"        , Выборка.УстановкаИзМакета);
		ДанныеДрайвера.Вставить("ВерсияДрайвера"           , Выборка.ВерсияДрайвера);
		ДанныеДрайвера.Вставить("ИмяПредопределенныхДанных", Выборка.ИмяПредопределенныхДанных);
		ДанныеДрайвера.Вставить("ИнтеграционноеПриложение" , Выборка.ИнтеграционноеПриложение);
		СписокДрайверов.Добавить(ДанныеДрайвера);
	КонецЦикла;
	
	// Возвращаем полученный список с данными
	Возврат СписокДрайверов;
	
КонецФункции