
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОбработатьПолученныйШтрихкод(ПолученныйШтрихкод, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(ПолученныйШтрихкод) Тогда
		
		СписокШтрихкодов.Добавить(ПолученныйШтрихкод, ПолученныйШтрихкод);
		Модифицированность = Истина;
		
		УстановитьСтраницуСписка();
		
	КонецЕсли;
	
КонецПроцедуры

// Возникает при сканировании внутренней камерой устройства
//
&НаКлиенте
Процедура ОбработкаЗакрытияСканирования(ДополнительныеПараметры) Экспорт
	Возврат;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СписокШтрихкодов = Параметры.СписокШтрихкодов;
	
	НастроитьФормуПоЗначениямНастроек();
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьСтраницуСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		Закрыть(СписокШтрихкодов);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ПодключаемоеОборудованиеКлиент.ЭтоОповещениеСканераШтрихкода(ИмяСобытия) И ВводДоступен() Тогда
		
		Если ЗначениеНастроекВызовСервераПовтИсп.ЭтоАвтономныйРежим() Тогда
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
			ОбработатьПолученныйШтрихкод(Параметр, ДополнительныеПараметры);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Добавить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеДобавить", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("Справочник.Номенклатура.Форма.Штрихкод", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СканироватьШтрихкод(Команда)
	
	ОчиститьСообщения();
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	ДополнительныеПараметры.Вставить("ИмяОбработчикаЗакрытияСканирования", "ОбработкаЗакрытияСканирования");
	
	ПодключаемоеОборудованиеКлиент.ПолучитьШтрихкод(ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьСканер(Команда)
	
	ПодключаемоеОборудованиеКлиент.ИнициализироватьАсинхронныйСканер(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ШтрихкодыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ИзменитьШтрихкод();
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИзменитьШтрихкод();
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыПриИзменении(Элемент)
	
	УстановитьСтраницуСписка();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИзменитьШтрихкод()
	
	Если НЕ ЗначениеНастроекВызовСервераПовтИсп.ЭтоАвтономныйРежим() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Штрихкоды.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИдентификаторСтроки", Элементы.Штрихкоды.ТекущаяСтрока);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеИзменить", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Штрихкод", ТекущиеДанные.Значение);
	ОткрытьФорму("Справочник.Номенклатура.Форма.Штрихкод", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеДобавить(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	СписокШтрихкодов.Добавить(Результат, Результат);
	Модифицированность = Истина;
	
	УстановитьСтраницуСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеИзменить(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаШтрихкод = СписокШтрихкодов.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
	СтрокаШтрихкод.Значение = Результат;
	СтрокаШтрихкод.Представление = Результат;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ИспользуетсяАсинхронныйСканер = ЗначениеНастроекВызовСервераПовтИсп.ИспользуетсяАсинхронныйСканерШтрихкодов();
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
	СписокТолькоПросмотр = "Штрихкоды";
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, СписокТолькоПросмотр, "ТолькоПросмотр",
		НЕ ЗначениеНастроекВызовСервераПовтИсп.ЭтоАвтономныйРежим());
	
	СписокВидимость = "КоманднаяПанельСписка, Добавить, Удалить";
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, СписокВидимость, "Видимость",
		ЗначениеНастроекВызовСервераПовтИсп.ЭтоАвтономныйРежим());
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "СканироватьШтрихкод", "Видимость",
		ЗначениеЗаполнено(ЗначениеНастроекВызовСервераПовтИсп.ТипУстройстваСканирования()) И НЕ ИспользуетсяАсинхронныйСканер
	);
	
	НастроитьЭлементыАсинхронногоСканера();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыАсинхронногоСканера()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "АктивироватьСканер", "Видимость", 
		ИспользуетсяАсинхронныйСканер
	);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСписка()
	
	Если СписокШтрихкодов.Количество() = 0 Тогда
		
		Элементы.СтраницыШтрихкоды.ТекущаяСтраница = Элементы.СтраницаБезШтрихкодами;
	Иначе
		
		Элементы.СтраницыШтрихкоды.ТекущаяСтраница = Элементы.СтраницаСоШтрихкодами;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти
