
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТолькоПросмотр = Ложь;
	
	НастроитьФормуПоЗначениямНастроек();
	
	// АдминистративныйРежим
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтотОбъект);
	
	УстановитьВидимостьКнопокФормы();
	
	НастроитьКодДоступа();
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененАдминистративныйРежим" Тогда
		// АдминистративныйРежим
		НастроитьФормуПоАдминистративномуРежиму();
		НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СнятьПометкуУдаления(Команда)
	
	Объект.ПометкаУдаления = Ложь;
	
	Записать();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПользователя(Команда)
	
	Объект.ПометкаУдаления = Истина;
	
	Записать();
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,,, 2);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокировать", "АдминистративныйРежимРазблокировать",, Ложь
	);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокированоПроцесс", "АдминистративныйРежимРазблокированоПроцесс",, Ложь
	);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКнопокФормы()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "УдалитьПользователя", "Видимость",
		АдминистративныйРежим И ЗначениеЗаполнено(Объект.Ссылка) И НЕ Объект.ПометкаУдаления);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "СнятьПометкуУдаления", "Видимость",
		АдминистративныйРежим И ЗначениеЗаполнено(Объект.Ссылка) И Объект.ПометкаУдаления);
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти



&НаКлиенте
Процедура УстановитьИзменитьКодДоступа(Команда)
	
	Если НЕ ПроверитьЗаполнениеФормы() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Записать();
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("УстановитьИзменитьКодДоступаЗавершение", ЭтотОбъект);
	
	ПараметрыКодаДоступа = Новый Структура;
	ПараметрыКодаДоступа.Вставить("УстановленныйКодДоступа", Объект.КодДоступа);
	ПараметрыКодаДоступа.Вставить("ФИО", Объект.Наименование);
	
	ОбщегоНазначенияКлиент.УстановитьИзменитьКодДоступа(ПараметрыКодаДоступа, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыключитьКодДоступа(Команда)
	
	Если НЕ ПроверитьЗаполнениеФормы() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Записать();
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ВыключитьКодДоступаЗавершение", ЭтотОбъект);
	
	ПараметрыКодаДоступа = Новый Структура;
	ПараметрыКодаДоступа.Вставить("УстановленныйКодДоступа", Объект.КодДоступа);
	ПараметрыКодаДоступа.Вставить("ФИО", Объект.Наименование);
	
	ОбщегоНазначенияКлиент.ВыключитьКодДоступа(ПараметрыКодаДоступа, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИзменитьКодДоступаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КодДоступа = Результат;
	
	Записать();
	
	ПомощникUIКлиент.ПоказатьСообщение(НСтр("ru = 'Код доступа установлен'"));
	
	НастроитьКодДоступа();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыключитьКодДоступаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КодДоступа = "";
	
	Записать();
	
	ПомощникUIКлиент.ПоказатьСообщение(НСтр("ru = 'Код доступа выключен'"));
	
	НастроитьКодДоступа();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьКодДоступа()
	
	Если ЗначениеЗаполнено(Объект.КодДоступа) Тогда
		
		ЗаголовокКнопки = НСтр("ru = 'Изменить код'");
		
		Элементы.ВыключитьКодДоступа.Видимость = Истина;
		
	Иначе
		
		ЗаголовокКнопки = НСтр("ru = 'Установить код'");
		
		Элементы.ВыключитьКодДоступа.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.УстановитьИзменитьКодДоступа.Заголовок = ЗаголовокКнопки;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеФормы()
	
	Если НЕ ЗначениеЗаполнено(Объект.Фамилия) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект, Элементы.Фамилия, НСтр("ru = 'Фамилия'"));
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура Готово(Команда)
	
	Если НЕ ПроверитьЗаполнениеФормы() Тогда
		Возврат;
	КонецЕсли;
	
	Записать();
	Закрыть();
	
КонецПроцедуры

#Область СлужебныеПроцедурыАдминистративныйРежим

&НаКлиенте
Процедура НастроитьДоступностьЭлементовПоАдминистративномуРежиму()
	
	СписокТолькоПросмотр = 
	"ИНН,
	|Должность,
	|Отчество,
	|Имя,
	|Фамилия";
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект,
		СписокТолькоПросмотр, "ТолькоПросмотр", НЕ АдминистративныйРежим);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект,
		"УстановитьИзменитьКодДоступа, ВыключитьКодДоступа", "Доступность", АдминистративныйРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуПоАдминистративномуРежимуКлиент()
	
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	НастроитьФормуПоАдминистративномуРежиму(Истина);
	Оповестить("ИзмененАдминистративныйРежим");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоАдминистративномуРежиму(УстановитьРежим = Ложь)
	
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтотОбъект, УстановитьРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьАдминистративныйРежим()
	
	НастроитьОтображениеПереключенияРежима();
	
	ПодключитьОбработчикОжидания("НастроитьФормуПоАдминистративномуРежимуКлиент", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеПереключенияРежима()
	
	//"
	Если АдминистративныйРежим Тогда
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокированоПроцесс;
	Иначе
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокировать;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПереключитьАдминистративныйРежим(Команда)
	
	Если НЕ АдминистративныйРежим
		И ОбщегоНазначенияВызовСервера.УстановленПарольАдминистративногоРежима() Тогда
		
		ОбщегоНазначенияКлиент.ОткрытьФормуПереключенияАдминистративногоРежима(ЭтотОбъект);
		
		Возврат;
	КонецЕсли;
	
	АдминистративныйРежим = НЕ АдминистративныйРежим;
	
	ИзменитьАдминистративныйРежим();
	
КонецПроцедуры

