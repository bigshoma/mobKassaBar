
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначения.ОформитьСуммовыеПоля(ЭтаФорма, "СуммаДокумента, ТоварыЦена, ТоварыСумма");
	ОбщегоНазначения.УстановитьЦветИтоговыхПолей(ЭтаФорма, "СуммаДокумента");
	ОбщегоНазначения.УстановитьЦветИнформационныхНадписей(ЭтаФорма, "НадписьПодтверждено, НадписьОтправленОтказ");
	
	НастроитьФормуПоЗначениямНастроек();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьФорму();
	КонецЕсли;
	
	УстановитьДоступностьКоманд();
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДанныеТТН = Документы.ТоварноТранспортнаяНакладнаяЕГАИС.ПолучитьДанныеТТН(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыЗначенияНастроек" Тогда
		
		НастроитьФормуПоЗначениямНастроек();
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ГрузоотправительОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьОрганизацию(Грузоотправитель, НСтр("ru = 'Грузоотправитель'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьОрганизацию(Грузополучатель, НСтр("ru = 'Грузополучатель'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьОрганизацию(Поставщик, НСтр("ru = 'Поставщик'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПараметрыСтроки = Новый Структура;
	ПараметрыСтроки.Вставить("НомерСправкиБ");
	ПараметрыСтроки.Вставить("Количество");
	ПараметрыСтроки.Вставить("Тип");
	ПараметрыСтроки.Вставить("Наименование");
	ПараметрыСтроки.Вставить("КодВидаПродукции");
	ПараметрыСтроки.Вставить("Производитель");
	ПараметрыСтроки.Вставить("Импортер");
	ПараметрыСтроки.Вставить("Идентификатор");
	ПараметрыСтроки.Вставить("НаименованиеПолное");
	ПараметрыСтроки.Вставить("Объем");
	ПараметрыСтроки.Вставить("Крепость");
	ПараметрыСтроки.Вставить("Код");
	ПараметрыСтроки.Вставить("Цена");
	ПараметрыСтроки.Вставить("Сумма");
	ПараметрыСтроки.Вставить("НомерПартии");
	ПараметрыСтроки.Вставить("ИдентификаторУпаковки");
	ПараметрыСтроки.Вставить("НомерСправкиБПоставщика");
	ПараметрыСтроки.Вставить("НомерСправкиА");
	ПараметрыСтроки.Вставить("ИдентификаторСтроки");
	ПараметрыСтроки.Вставить("ДиапазоныНомеровМарок");

	ЗаполнитьЗначенияСвойств(ПараметрыСтроки, Элементы.Товары.ТекущиеДанные);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПараметрыСтроки", ПараметрыСтроки);
	ПараметрыФормы.Вставить("ТаблицаОрганизаций", ХранилищеТаблицаОрганизаций);
	ОткрытьФорму("Документ.ТоварноТранспортнаяНакладнаяЕГАИС.Форма.ПросмотрСтрокиТоваров", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодтвердитьДанныеВЕГАИС(Команда)
	
	Если НЕ НаличиеСправкиБ() Тогда
		ТекстСообщения = НСтр("ru = 'Не загружена справка Б.
									|Отправка данных не возможна.'");
									
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеПодтвердитьДанныеВЕГАИС", ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru = 'Отправить подтверждение ТТН в ЕГАИС?'");
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить("Отправить", НСтр("ru = 'Отправить'"));
	Кнопки.Добавить("Отмена",    НСтр("ru = 'Отмена'"));
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки,, "Отмена", НСтр("ru = 'Подтверждение ТТН'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьсяОтТТН(Команда)
	
	Если НЕ НаличиеСправкиБ() Тогда
		ТекстСообщения = НСтр("ru = 'Не загружена справка Б.
									|Отправка данных не возможна.'");
									
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеОтказатьсяОтТТН", ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru = 'Отправить отказ от ТТН в ЕГАИС?'");
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить("Отправить", НСтр("ru = 'Отправить'"));
	Кнопки.Добавить("Отмена",    НСтр("ru = 'Отмена'"));
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки,, "Отмена", НСтр("ru = 'Отказ от ТТН'"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция НаличиеСправкиБ()
	
	Возврат ЗначениеЗаполнено(ИдентификаторТТН);
	
КонецФункции

&НаКлиенте
Процедура ПоказатьОрганизацию(Код, ЗаголовокФормыОрганизации)
	
	НайденныеСтроки = Организации.НайтиСтроки(Новый Структура("Код", Код));
	
	Если НЕ НайденныеСтроки.Количество() = 0 Тогда
		
		НайденнаяОрганизация = НайденныеСтроки[0];
		
		РеквизитыОрганизации = Новый Структура;
		РеквизитыОрганизации.Вставить("Код");
		РеквизитыОрганизации.Вставить("ИНН");
		РеквизитыОрганизации.Вставить("КодРегиона");
		РеквизитыОрганизации.Вставить("КодСтраны");
		РеквизитыОрганизации.Вставить("КПП");
		РеквизитыОрганизации.Вставить("Наименование");
		РеквизитыОрганизации.Вставить("НаименованиеПолное");
		РеквизитыОрганизации.Вставить("ПочтовыйИндекс");
		РеквизитыОрганизации.Вставить("ПредставлениеАдреса");
		
		ЗаполнитьЗначенияСвойств(РеквизитыОрганизации, НайденнаяОрганизация);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("РеквизитыОрганизации", РеквизитыОрганизации);
		ПараметрыФормы.Вставить("ЗаголовокФормы", ЗаголовокФормыОрганизации);
		ОткрытьФорму("Документ.ТоварноТранспортнаяНакладнаяЕГАИС.Форма.ФормаОрганизации", ПараметрыФормы, ЭтаФорма);
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ЗаголовокФормыОрганизации + Символы.НПП + НСтр("ru = 'не определен'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФорму()
	
	Если ДанныеТТН = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Реквизиты формы
	РеквизитыФормы = "Автомобиль,
		|Водитель,
		|Возврат,
		|Грузоотправитель,
		|Грузополучатель,
		|ДатаОтгрузки,
		|Заказчик,
		|Идентификатор,
		|ИдентификаторТТН,
		|Комментарий,
		|Основание,
		|Перевозчик,
		|Перенаправление,
		|Поставщик,
		|Прицеп,
		|ПунктПогрузки,
		|ПунктРазгрузки,
		|ТипДоставки,
		|Упакована,
		|Экспедитор";
		
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ДанныеТТН, РеквизитыФормы);
	
	// Товары
	РеквизитыТоваров = "ИдентификаторСтроки,
		|НомерСправкиА,
		|НомерСправкиБПоставщика,
		|ИдентификаторУпаковки,
		|НомерПартии,
		|Цена,
		|Код,
		|Крепость,
		|Объем,
		|НаименованиеПолное,
		|Идентификатор,
		|Импортер,
		|Производитель,
		|КодВидаПродукции,
		|Наименование,
		|Тип,
		|Количество,
		|НомерСправкиБ,
		|ДиапазоныНомеровМарок";
		
	СуммаДокумента = 0;
	
	Для Каждого СтрокаТаблицы Из ДанныеТТН.ТаблицаТоваров Цикл
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы, РеквизитыТоваров);
		
		Если НЕ ПустаяСтрока(НоваяСтрока.НаименованиеПолное) И ПустаяСтрока(НоваяСтрока.Наименование) Тогда
			
			НоваяСтрока.Наименование = НоваяСтрока.НаименованиеПолное;
			
		ИначеЕсли НЕ ПустаяСтрока(НоваяСтрока.Наименование) И ПустаяСтрока(НоваяСтрока.НаименованиеПолное) Тогда
			
			НоваяСтрока.НаименованиеПолное = НоваяСтрока.Наименование;
			
		КонецЕсли;
		
		НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
		
		СуммаДокумента = СуммаДокумента + НоваяСтрока.Сумма;
		
	КонецЦикла;
	
	// Организации
	ХранилищеТаблицаОрганизаций = ПоместитьВоВременноеХранилище(ДанныеТТН.ТаблицаОрганизаций, ЭтаФорма.УникальныйИдентификатор);
	Для Каждого СтрокаТаблицы Из ДанныеТТН.ТаблицаОрганизаций Цикл
		НоваяСтрока = Организации.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
	// Квитанции
	Для Каждого Квитанция Из ДанныеТТН.Квитанции Цикл
		НоваяСтрока = Квитанции.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Квитанция);
		НоваяСтрока.ИндексКартинки = ?(Квитанция.ОтказЕГАИС, 1, 2);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПодтвердитьДанныеВЕГАИС(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = "Отправить" Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеТТН.Свойство("Отказ") Тогда
		ДанныеТТН.Отказ = Ложь;
	Иначе
		ДанныеТТН.Вставить("Отказ", Ложь);
	КонецЕсли;
	
	ДанныеТТН.ТаблицаТоваров.Очистить();
	
	РезультатОтправки = ИнтеграцияЕГАИСКлиент.ВыгрузитьАктПодтвержденияТТН(ДанныеТТН);
	
	Если РезультатОтправки.Результат Тогда
		ЗаписатьОтправленоПодтверждение(РезультатОтправки);
		Закрыть();
		Оповестить("ЗаписанаНакладнаяЕГАИС", Объект.Ссылка);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатОтправки.ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОтказатьсяОтТТН(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = "Отправить" Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеТТН.Свойство("Отказ") Тогда
		ДанныеТТН.Отказ = Истина;
	Иначе
		ДанныеТТН.Вставить("Отказ", Истина);
	КонецЕсли;
	
	РезультатОтправки = ИнтеграцияЕГАИСКлиент.ВыгрузитьАктПодтвержденияТТН(ДанныеТТН);
	
	Если РезультатОтправки.Результат Тогда
		ЗаписатьОтправленОтказ();
		Закрыть();
		Оповестить("ЗаписанаНакладнаяЕГАИС", Объект.Ссылка);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатОтправки.ОписаниеОшибки);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьОтправленоПодтверждение(РезультатОтправки)
	
	ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
	ДокументОбъект.ОтправленоПодтверждение = Истина;
	ДокументОбъект.ОтправленОтказ = Ложь;
	ДокументОбъект.ИдентификаторИсходящегоЗапросаАктаПодтверждения = РезультатОтправки.ИдентификаторЗапроса;
	ДокументОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьОтправленОтказ()
	
	ДокументОбъект = Объект.Ссылка.ПолучитьОбъект();
	ДокументОбъект.ОтправленОтказ = Истина;
	ДокументОбъект.ОтправленоПодтверждение = Ложь;
	ДокументОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКоманд()
	
	Если Объект.ОтправленоПодтверждение Тогда
		
		Элементы.СтраницыШапка.ТекущаяСтраница = Элементы.СтраницаПодтверждено;
		Элементы.СтраницаКоманды.Видимость = Ложь;
		Элементы.СтраницаОтправленОтказ.Видимость = Ложь;
		
	ИначеЕсли Объект.ОтправленОтказ Тогда
		
		Элементы.СтраницыШапка.ТекущаяСтраница = Элементы.СтраницаОтправленОтказ;
		Элементы.СтраницаКоманды.Видимость = Ложь;
		Элементы.СтраницаПодтверждено.Видимость = Ложь;
		
	Иначе
		
		Элементы.СтраницыШапка.ТекущаяСтраница = Элементы.СтраницаКоманды;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
	СписокПолей = "НомерВходящий,
		|ДатаВходящая,
		|ДатаОтгрузки,
		|Поставщик,
		|Грузоотправитель,
		|Грузополучатель,
		|Идентификатор,
		|ИдентификаторТТН,
		|Основание,
		|Комментарий,
		|Автомобиль,
		|Водитель,
		|Заказчик,
		|Перевозчик,
		|Прицеп,
		|ПунктПогрузки,
		|ПунктРазгрузки,
		|Перенаправление,
		|ТипДоставки,
		|Экспедитор";
		
	Если ПараметрыСеанса.ГоризонтальнаяОриентацияЭкрана Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, СписокПолей, "ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Лево);
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, СписокПолей, "ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Верх);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КвитанцииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Квитанции.ТекущиеДанные;
	Если НЕ ТекущиеДанные = Неопределено Тогда
		ПоказатьЗначение(, ТекущиеДанные.КомментарийЕГАИС);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти



















