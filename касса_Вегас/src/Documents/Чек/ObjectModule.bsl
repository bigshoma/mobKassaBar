
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Проведение.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.Чек.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	Проведение.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Продажи.ОтразитьДвижениеНаличных(ДополнительныеСвойства, Движения, Отказ);
	Продажи.ОтразитьРасчетыСКлиентами(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	Проведение.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	Проведение.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	Проведение.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	Если НЕ Отказ Тогда
		
		Если СтатусЧека = Перечисления.СтатусыЧеков.Пробит Тогда
			Продажи.АннулироватьСвязанныеНеПробитыеЧеки(Ссылка);
			РасчитатьСтатусРасчетовПоЗаказу();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЧекОснование = Неопределено;
	ЗаполнитьТоварыПоЧекуОснованию = Ложь;
	ЗаполнитьОплатыПоЧекуОснованию = Ложь;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ЗначениеЗаполнено(ДанныеЗаполнения.ЗаказКлиента) Тогда
			ЗаказКлиента = ДанныеЗаполнения.ЗаказКлиента;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗаполнения.ЧекПродажи) Тогда
			ЧекПродажи = ДанныеЗаполнения.ЧекПродажи;
		КонецЕсли;
		
		Если ДанныеЗаполнения.ЭтоВозврат Тогда
			ВидОперации = ПродажиКлиентСерверПовтИсп.ВидОперацииЧека_Возврат();
		КонецЕсли;
		
		Если ДанныеЗаполнения.ЦенаВключаетНДС = Неопределено Тогда
			ЦенаВключаетНДС = ЗначениеНастроекПовтИсп.ЦенаВключаетНДС();
		Иначе
			ЦенаВключаетНДС = ДанныеЗаполнения.ЦенаВключаетНДС;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗаполнения.ПризнакСпособаРасчета) Тогда
			ПризнакСпособаРасчета = ДанныеЗаполнения.ПризнакСпособаРасчета;
		КонецЕсли;
		
		Если ДанныеЗаполнения.ЭтоПолныйВозврат Тогда
			ЗаполнитьТоварыПриВозврате(ЧекПродажи);
		КонецЕсли;
		
		Если ДанныеЗаполнения.ЭтоЧекКоррекции Тогда
			ЭтоЧекКоррекции = Истина;
		КонецЕсли;
		
		Если ДанныеЗаполнения.НеприменениеККТ Тогда
			НеприменениеККТ = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗаполнения.ДатаКоррекции) Тогда
			ДатаКоррекции = ДанныеЗаполнения.ДатаКоррекции;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗаполнения.ОписаниеКоррекции) Тогда
			ОписаниеКоррекции = ДанныеЗаполнения.ОписаниеКоррекции;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗаполнения.НомерПредписания) Тогда
			НомерПредписания = ДанныеЗаполнения.НомерПредписания;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗаполнения.НомерПредписания) Тогда
			НомерПредписания = ДанныеЗаполнения.НомерПредписания;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗаполнения.ЧекОснование) Тогда
			ЧекОснование = ДанныеЗаполнения.ЧекОснование;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеЗаполнения.ТипКоррекции) Тогда
			ТипКоррекции = ДанныеЗаполнения.ТипКоррекции;
		КонецЕсли;
		
		ЗаполнитьТоварыПоЧекуОснованию = ДанныеЗаполнения.ЗаполнитьТоварыПоЧекуОснованию;
		ЗаполнитьОплатыПоЧекуОснованию = ДанныеЗаполнения.ЗаполнитьОплатыПоЧекуОснованию;
		
	Иначе
		ЦенаВключаетНДС = ЗначениеНастроекПовтИсп.ЦенаВключаетНДС();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаказКлиента)
		И НЕ ВидОперации = ПродажиКлиентСерверПовтИсп.ВидОперацииЧека_Возврат() Тогда
		
		ЗаполнитьЧекПоЗаказу(ЗаказКлиента);
		
	ИначеЕсли ЗначениеЗаполнено(ЧекОснование) Тогда
		
		ЗаполнитьЧекПоЧеку(ЧекОснование,
			ЗаполнитьТоварыПоЧекуОснованию, ЗаполнитьОплатыПоЧекуОснованию
		);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаказКлиента) Тогда
		
		РеквизитыЗаказа = ОбщегоНазначенияВызовСервера.ЗначенияРеквизитовОбъекта(ЗаказКлиента,
			"АдресДоставкиГород, АдресДоставкиУлица, АдресДоставкиДом, АдресДоставкиКвартира"
		);
		
		АдресРасчета = ГеолокацияКлиентСервер.ПолучитьПредставлениеАдреса(РеквизитыЗаказа.АдресДоставкиГород,
			РеквизитыЗаказа.АдресДоставкиУлица, РеквизитыЗаказа.АдресДоставкиДом, РеквизитыЗаказа.АдресДоставкиКвартира
		);
		
	КонецЕсли;
	
	РассчитатьСуммыДокумента();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтатусЧека) Тогда
		СтатусЧека = Перечисления.СтатусыЧеков.Отложен;
	КонецЕсли;
	
	Если СтатусЧека = Перечисления.СтатусыЧеков.Отложен И НЕ Оплаты.Количество() = 0 Тогда
		
		Если СуммаДокумента = Оплаты.Итог("Сумма") Тогда
			СтатусОплаты = Перечисления.СтатусыОплатыЧека.Оплачен;
		Иначе
			СтатусОплаты = Перечисления.СтатусыОплатыЧека.ОплаченЧастично;
		КонецЕсли;
		
	Иначе
		СтатусОплаты = Перечисления.СтатусыОплатыЧека.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьЧекПоЗаказу(Заказ)
	
	Если ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ОплатаКредита Тогда
		
		ЧекПередачиТоваров = ПродажиВызовСервера.ПолучитьЧекПередачиТоваровПоЗаказу(Заказ);
		ЗаполнитьТоварыПриВозврате(ЧекПередачиТоваров);
		
		Для Каждого СтрокаЧека Из Товары Цикл
			
			СтрокаЧека.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			СтрокаЧека.СуммаНДС  = 0;
			
		КонецЦикла;
		
	Иначе
		
		ЗаказКлиента = Заказ;
		
		РеквизитыЗаказа = ОбщегоНазначенияВызовСервера.ЗначенияРеквизитовОбъекта(Заказ,
			"ЦенаВключаетНДС"
		);
		
		ЦенаВключаетНДС = РеквизитыЗаказа.ЦенаВключаетНДС;
		
		Если ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс Тогда
			Возврат;
		КонецЕсли;
		
		ТоварыДляЗаполнения = Неопределено;
		
		Если ЗначениеНастроекПовтИсп.ИспользуютсяРасчетыСКлиентами() Тогда
			
			ЧекПередачиТоваров = ПродажиВызовСервера.ПолучитьЧекПередачиТоваровПоЗаказу(Заказ);
			
			Если ЗначениеЗаполнено(ЧекПередачиТоваров) Тогда
				ТоварыДляЗаполнения = ЧекПередачиТоваров.Товары;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТоварыДляЗаполнения = Неопределено Тогда
			ТоварыДляЗаполнения = Заказ.Товары;
		КонецЕсли;
		
		Для Каждого СтрокаТовары Из ТоварыДляЗаполнения Цикл
			
			СтрокаЧека = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаЧека, СтрокаТовары,
				"Номенклатура, Количество, СкидкаНаценкаПроцент, СкидкаНаценкаСумма,
				|СуммаНДС, СтавкаНДС, Сумма, Цена"
			);
			
			СтрокаЧека.СтавкаНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавку_18_20(СтрокаЧека.СтавкаНДС);
			
			Если НЕ ЦенаВключаетНДС Тогда
				СтрокаЧека.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			КонецЕсли;
			
			СтрокаЧека.НеобходимостьВводаАкцизнойМарки =
				ПродажиВызовСервера.ОпределитьНеобходимостьВводаАкцизнойМарки(СтрокаЧека.Номенклатура);
			
			СтрокаЧека.НеобходимостьШтрихкодаПриПродаже =
				ПродажиВызовСервера.ОпределитьНеобходимостьШтрихкодаПриПродаже(СтрокаЧека.Номенклатура);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчитатьСтатусРасчетовПоЗаказу()
	
	Если ЗначениеЗаполнено(ЗаказКлиента) И СтатусЧека = Перечисления.СтатусыЧеков.Пробит Тогда
		
		Продажи.РасчитатьСтатусРасчетовПоЗаказу(ЗаказКлиента);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьСуммыДокумента()
	
	СуммаДокумента = Товары.Итог("Сумма");
	СуммаНДСДокумента = Товары.Итог("СуммаНДС");
	
КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()
	
	Массив = Новый Массив;
	
	Массив.Добавить(Движения.ДенежныеСредства);
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

Процедура ЗаполнитьТоварыПриВозврате(ЧекПередачиТоваров)
	
	ТаблицаТоваровДляВозврата = Продажи.ПолучитьТаблицуТоваровЧекаВозврата(ЧекПередачиТоваров);
	
	Если ТаблицаТоваровДляВозврата.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Нет товаров к возврату'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицыВозврата Из ТаблицаТоваровДляВозврата Цикл
		
		СтрокаТовары = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовары, СтрокаТаблицыВозврата);
		
		Если НЕ СтрокаТаблицыВозврата.Марки = Неопределено Тогда
			
			Для Каждого Марка Из СтрокаТаблицыВозврата.Марки Цикл
				НоваяМарка = Марки.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяМарка, Марка,
					"КлючСвязи, КодМаркировки, ТипМаркировки, ГлобальныйИдентификаторТорговойЕдиницы, СерийныйНомер");
			КонецЦикла;
			
			Если СтрокаТаблицыВозврата.Марки.Количество() = 0 Тогда
				СтрокаТовары.Количество = 0;
				СтрокаТовары.Сумма = 0;
			КонецЕсли;
			
		КонецЕсли;
		
		СуммаНДС = 0;
		
		Если ЦенаВключаетНДС Тогда
			
			ПроцентНДС = ЦенообразованиеКлиентСерверПовтИсп.ПолучитьСтавкуНДСЧислом(СтрокаТовары.СтавкаНДС);
			
			Если ЗначениеЗаполнено(СтрокаТаблицыВозврата.ТипМаркировки) И СтрокаТовары.Количество > 1 Тогда
				
				Коэффициенты = Новый Массив(СтрокаТовары.Количество);
				
				Индекс = 0;
				Для Каждого _ Из Коэффициенты Цикл
					Коэффициенты[Индекс] = 1;
					Индекс = Индекс + 1;
				КонецЦикла;
				
				РаспределенныеСуммы = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(
					СтрокаТовары.Сумма, Коэффициенты
				);
				
				Для Каждого РаспределеннаяСумма Из РаспределенныеСуммы Цикл
					СуммаНДС = СуммаНДС + ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(РаспределеннаяСумма, ПроцентНДС);
				КонецЦикла;
				
			Иначе
				СуммаНДС   = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(СтрокаТовары.Сумма, ПроцентНДС);
			КонецЕсли;
			
		КонецЕсли;
		
		СтрокаТовары.СуммаНДС  = СуммаНДС;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьЧекПоЧеку(СсылкаНаЧек, ЗаполнитьТоварыПоЧекуОснованию, ЗаполнитьОплатыПоЧекуОснованию)
	
	Если НЕ ЗаполнитьТоварыПоЧекуОснованию И НЕ ЗаполнитьОплатыПоЧекуОснованию Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЧекТовары.Количество КАК Количество,
		|	ЧекТовары.Номенклатура КАК Номенклатура,
		|	ЧекТовары.СкидкаНаценкаПроцент КАК СкидкаНаценкаПроцент,
		|	ЧекТовары.СкидкаНаценкаСумма КАК СкидкаНаценкаСумма,
		|	ЧекТовары.СтавкаНДС КАК СтавкаНДС,
		|	ЧекТовары.Сумма КАК Сумма,
		|	ЧекТовары.СуммаНДС КАК СуммаНДС,
		|	ЧекТовары.УдалитьСуммаСНДС КАК УдалитьСуммаСНДС,
		|	ЧекТовары.Цена КАК Цена,
		|	ЧекТовары.Штрихкод КАК Штрихкод,
		|	ЧекТовары.ЦенаСУчетомСкидки КАК ЦенаСУчетомСкидки
		|ИЗ
		|	Документ.Чек.Товары КАК ЧекТовары
		|ГДЕ
		|	ЧекТовары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЧекОплаты.Ссылка КАК Ссылка,
		|	ЧекОплаты.НомерСтроки КАК НомерСтроки,
		|	ЧекОплаты.ВидОплаты КАК ВидОплаты,
		|	ЧекОплаты.Сумма КАК Сумма,
		|	ЧекОплаты.ТипОплаты КАК ТипОплаты,
		|	ЧекОплаты.КлючСвязи КАК КлючСвязи
		|ИЗ
		|	Документ.Чек.Оплаты КАК ЧекОплаты
		|ГДЕ
		|	ЧекОплаты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаЧек);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если ЗаполнитьТоварыПоЧекуОснованию Тогда
		
		Выборка = РезультатЗапроса[0].Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СтрокаЧека = Товары.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаЧека, Выборка);
			
		КонецЦикла;
	КонецЕсли;
	
	Если ЗаполнитьОплатыПоЧекуОснованию Тогда
		
		Выборка = РезультатЗапроса[1].Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СтрокаЧека = Оплаты.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаЧека, Выборка);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли