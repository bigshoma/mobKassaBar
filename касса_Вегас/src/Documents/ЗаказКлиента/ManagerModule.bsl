
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекстЗаголовка = НСтр("ru = '%ПредставлениеНомера% от %ПредставлениеДата%'");
	
	ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%ПредставлениеНомера%", 
		ОбщегоНазначенияКлиентСервер.ПредставлениеНомера(Данные.Ссылка.Номер));
		
	ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%ПредставлениеДата%",
		Формат(Данные.Ссылка.Дата,"ДФ=dd.MM; ДЛФ=D"));
	
	Представление = ТекстЗаголовка;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Оплаты.Ссылка.Дата КАК Период,
	|	СУММА(Оплаты.Сумма) КАК Сумма,
	|	Оплаты.Ссылка КАК ЗаказКлиента,
	|	ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.ПредоплатаЧастичная) КАК ПризнакСпособаРасчета,
	|	Оплаты.ТипОплаты КАК ТипОплаты
	|ИЗ
	|	Документ.ЗаказКлиента.Оплаты КАК Оплаты
	|ГДЕ
	|	Оплаты.Ссылка = &Ссылка
	|	И Оплаты.ТипОплаты В (ЗНАЧЕНИЕ(Перечисление.ТипыОплаты.Наличные), ЗНАЧЕНИЕ(Перечисление.ТипыОплаты.ПлатежнаяКарта))
	|
	|СГРУППИРОВАТЬ ПО
	|	Оплаты.Ссылка,
	|	Оплаты.Ссылка.Дата,
	|	Оплаты.ТипОплаты";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСКлиентами", Результат[0].Выгрузить());
	
КонецПроцедуры

// Возвращает список чеков, которые содержат переданную номенклатуру
// 
// Возвращаемое значение:
//   Массив   - пустой массив, если чеков с номенклатурой нет.
//
Функция СписокДокументовСодержащихНоменклатуру(Номенклатура) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказКлиентаТовары.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|ГДЕ
		|	ЗаказКлиентаТовары.Номенклатура = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	МассивЧеков = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат МассивЧеков;
	
КонецФункции

Функция ПолучитьСостояниеЗаказовНаСегодня() Экспорт
	
	Дата = ОбщегоНазначенияКлиентСервер.ПолучитьТекущуюДату();
	
	Результат = Новый Структура;
	Результат.Вставить("НеСогласовано", 0);
	Результат.Вставить("Согласовано", 0);
	Результат.Вставить("Выполнено", 0);
	Результат.Вставить("Отменено", 0);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НеСогласовано,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Согласован)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Согласовано,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Выполнен)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Выполнено,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Отменен)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Отменено
	|ПОМЕСТИТЬ Т
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.ЖелаемаяДатаПокупки МЕЖДУ &ДатаС И &ДатаПо
	|	И ЗаказКлиента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Согласован)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Выполнен)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Отменен)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.ЖелаемаяДатаПокупки < &ДатаС
	|	И ЗаказКлиента.Проведен
	|	И ЗаказКлиента.СтатусЗаказа В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Согласован))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Т.НеСогласовано), 0) КАК НеСогласовано,
	|	ЕСТЬNULL(СУММА(Т.Согласовано), 0) КАК Согласовано,
	|	ЕСТЬNULL(СУММА(Т.Выполнено), 0) КАК Выполнено,
	|	ЕСТЬNULL(СУММА(Т.Отменено), 0) КАК Отменено
	|ИЗ
	|	Т КАК Т";
	
	Запрос.УстановитьПараметр("ДатаС",  НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаПо", КонецДня(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьСостояниеЗаказовНаЗавтра() Экспорт
	
	Дата = ОбщегоНазначенияКлиентСервер.ПолучитьТекущуюДату() + 86400;
	
	Результат = Новый Структура;
	Результат.Вставить("НеСогласовано", 0);
	Результат.Вставить("Согласовано", 0);
	Результат.Вставить("Выполнено", 0);
	Результат.Вставить("Отменено", 0);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК НеСогласовано,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Согласован)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК Согласовано,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Выполнен)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК Выполнено,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА ЗаказКлиента.СтатусЗаказа = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Отменен)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК Отменено
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.ЖелаемаяДатаПокупки МЕЖДУ &ДатаС И &ДатаПо
	|	И ЗаказКлиента.Проведен";
	
	Запрос.УстановитьПараметр("ДатаС",  НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаПо", КонецДня(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьРасчетнуюСтавкуНДСВозвратаАвансаЧислом(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Чек.Дата КАК Дата
	|ИЗ
	|	Документ.Чек КАК Чек
	|ГДЕ
	|	Чек.Проведен = ИСТИНА
	|	И Чек.ЗаказКлиента = &ЗаказКлиента
	|	И Чек.ПризнакСпособаРасчета В (ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.Аванс), ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.ПредоплатаПолная), ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.ПредоплатаЧастичная))
	|	И Чек.ВидОперации = &ВидОперации";
	
	Запрос.УстановитьПараметр("ЗаказКлиента", ДокументСсылка);
	Запрос.УстановитьПараметр("ВидОперации", ПродажиКлиентСерверПовтИсп.ВидОперацииЧека_Продажа());
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат ЦенообразованиеКлиентСервер.ПолучитьРасчетнуюСтавкуНДСАвансаЧислом(Выборка.Дата);
		
	Иначе
		
		Возврат ЦенообразованиеКлиентСервер.ПолучитьРасчетнуюСтавкуНДСАвансаЧислом();
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли