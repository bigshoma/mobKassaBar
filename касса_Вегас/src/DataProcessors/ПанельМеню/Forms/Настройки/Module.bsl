
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	
	НастроитьФормуПоАдминистративномуРежиму();
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
	// Демоверсия
	НастроитьФормуДляДемоверсии();
	
	ОбновитьВиджет1СКасса();
	
	ОбновитьСсылкуНаФреш();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыЗначенияНастроек" Тогда
		
		НастроитьФормуПоЗначениямНастроек();
		ОбновитьВиджет1СКасса();
		ОбновитьСсылкуНаФреш();
		
	ИначеЕсли ИмяСобытия = "ИзмененАдминистративныйРежим" Тогда
		
		НастроитьФормуПоАдминистративномуРежиму();
		НастроитьОтображениеПереключенияРежима();
		
	ИначеЕсли ИмяСобытия = "ЗакрытьМастер" Тогда
		ОбновитьВиджет1СКасса();
		ОбновитьСсылкуНаФреш();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьОтображениеПереключенияРежима();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВнешнийВидПриложения(Команда)
	
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.ВнешнийВидПриложения",,ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыУчета(Команда)
	
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.ПараметрыУчета",,ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура АдминистративныйРежим(Команда)
	
	ОбщегоНазначенияКлиент.ОткрытьФормуПереключенияАдминистративногоРежима(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСинхронизации(Команда)
	
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.РежимСинхронизации",,ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключаемоеОборудование(Команда)
	
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.ПодключаемоеОборудование",, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтикеткиЦенники(Команда)
	
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.ЭтикеткиЦенники",, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура РезервноеКопирование(Команда)
	
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.РезервноеКопирование",,ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыСинхронизации(Команда)
	
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.ПараметрыСинхронизации",,ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЕГАИС(Команда)
	
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.ЕГАИС",,ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Геолокация(Команда)
	
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.Геолокация",,ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ЧтоНового(Команда)
	ОткрытьФорму("ОбщаяФорма.ЧтоНового",, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОграниченияДемоверсии(Команда)
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.Демоверсия",, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьАдминистративныйРежим(Команда)
	
	Если НЕ АдминистративныйРежим
		И ОбщегоНазначенияВызовСервера.УстановленПарольАдминистративногоРежима() Тогда
		
		ОбщегоНазначенияКлиент.ОткрытьФормуПереключенияАдминистративногоРежима(ЭтотОбъект);
		
		Возврат;
	КонецЕсли;
	
	АдминистративныйРежим = НЕ АдминистративныйРежим;
	
	НастроитьОтображениеПереключенияРежима();
	
	ИзменитьАдминистративныйРежим();
	Оповестить("ИзмененАдминистративныйРежим");
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьРегистрациюВОблаке(Команда)
	
	ПараметрыМастера = РегистрацияВОблакеКлиент.ПолучитьПараметрыМастераРегистрации();
	ПараметрыМастера.ОтображатьПредупреждениеПередЗакрытиемБезРегистации = Ложь;
	
	РегистрацияВОблакеКлиент.ОткрытьМастерРегистрации(ПараметрыМастера);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСсылку1СКасса(Команда)
	
	РегистрацияВОблакеКлиент.ОткрытьСсылкуНаСайт(ЭтотОбъект, Элементы.ОткрытьСсылку1СКасса, СсылкаНаФреш);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьВиджет1СКасса()
	
	Если РегистрацияВОблакеВызовСервера.ОтображатьВиджет1СКасса() Тогда
		
		Элементы.Виджет1СКасса.Видимость = Истина;
		
		ЗаголовокНадписи = РегистрацияВОблакеВызовСервера.ПолучитьЗаголовокВиджета1СКасса();
		Элементы.НачатьРегистрациюВОблаке.Высота = СтрЧислоСтрок(ЗаголовокНадписи) + 1;
		Элементы.НачатьРегистрациюВОблаке.Заголовок = ЗаголовокНадписи;
	Иначе
		
		Элементы.Виджет1СКасса.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтотОбъект);
	
	Если НЕ ЗначениеНастроекВызовСервераПовтИсп.УстановленРежимСинхронизации() Тогда
		ОбщегоНазначения.УстановитьЦветПолейОшибок(ЭтотОбъект, "РежимСинхронизации");
	Иначе
		ОбщегоНазначения.СброситьЦветПолей(ЭтотОбъект, "РежимСинхронизации");
	КонецЕсли;
	
	Если ЗначениеНастроекВызовСервераПовтИсп.УстановленРежимСинхронизации() И НЕ ЗначениеНастроекВызовСервераПовтИсп.ЗаполненыПараметрыСинхронизации() Тогда
		ОбщегоНазначения.УстановитьЦветПолейОшибок(ЭтотОбъект, "ПараметрыСинхронизации");
	Иначе
		ОбщегоНазначения.СброситьЦветПолей(ЭтотОбъект, "ПараметрыСинхронизации");
	КонецЕсли;
	
	Если (ЗначениеНастроекВызовСервераПовтИсп.ЗаполненыПараметрыСинхронизации() И НЕ ЗначениеНастроекВызовСервераПовтИсп.ЗаполненыПараметрыУчета())
			ИЛИ (ЗначениеНастроекВызовСервераПовтИсп.УстановленРежимСинхронизации() И ЗначениеНастроекВызовСервераПовтИсп.ЭтоАвтономныйРежим() И НЕ ЗначениеНастроекВызовСервераПовтИсп.ЗаполненыПараметрыУчета()) Тогда
				ОбщегоНазначения.УстановитьЦветПолейОшибок(ЭтотОбъект, "ПараметрыУчета");
	Иначе
		ОбщегоНазначения.СброситьЦветПолей(ЭтотОбъект, "ПараметрыУчета");
	КонецЕсли;
	
	Если ЗначениеНастроекВызовСервераПовтИсп.ЭтоАвтономныйРежим() ИЛИ НЕ ЗначениеНастроекВызовСервераПовтИсп.УстановленРежимСинхронизации() Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, "ПараметрыСинхронизации", "Видимость", Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, "ПараметрыСинхронизации", "Видимость", Истина);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, "ЕГАИС", "Видимость", ЗначениеНастроекПовтИсп.ИспользуетсяАлкогольнаяПродукция());
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоАдминистративномуРежиму()
	
	ОбщегоНазначения.НастроитьДоступностьФлагаАдминистративногоРежима(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьАдминистративныйРежим()
	
	ОбщегоНазначения.ИзменитьАдминистративныйРежим(АдминистративныйРежим);
	
	Если НЕ АдминистративныйРежим Тогда
		НастроитьФормуПоАдминистративномуРежиму();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуДляДемоверсии()
	
	Элементы.ОграниченияДемоверсии.Видимость = ЗначениеНастроекПовтИсп.ЭтоДемоверсия();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеПереключенияРежима()
	
	Если АдминистративныйРежим Тогда
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаЗамокОткрытый;
	Иначе
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаЗамок;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСсылкуНаФреш()
	
	Если НЕ ЗначениеНастроекВызовСервераПовтИсп.УстановленРежимСинхронизации()
		ИЛИ ЗначениеНастроекВызовСервераПовтИсп.ЭтоАвтономныйРежим() Тогда
		
		Элементы.ОткрытьСсылку1СКасса.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	АдресСервераФреш = СинхронизацияКлиентСервер.АдресСервераФреш();
	СсылкаНаФреш = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("АдресWS");
	
	ИмяБазыФреш = СинхронизацияКлиентСервер.ПолучитьИмяБазы();
	
	Если НЕ СтрНайти(СсылкаНаФреш, АдресСервераФреш) = 0
		И НЕ СтрНайти(СсылкаНаФреш, ИмяБазыФреш) = 0 Тогда
		
		Элементы.ОткрытьСсылку1СКасса.Видимость = Истина;
	Иначе
		
		Элементы.ОткрытьСсылку1СКасса.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти


