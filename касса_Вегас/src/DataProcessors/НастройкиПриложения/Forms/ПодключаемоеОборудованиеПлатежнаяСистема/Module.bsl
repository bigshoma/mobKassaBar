
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НаборКонстант = Константы.СоздатьНабор(СписокКонстант());
	НаборКонстант.Прочитать();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, НаборКонстант, СписокКонстант());

	НастроитьФормуПоЗначениямНастроек();
	
	// АдминистративныйРежим
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(ОборудованиеПлатежнойСистемы) Тогда
		Драйвер = ОборудованиеПлатежнойСистемы.ДрайверОборудования;
		ИспользованиеПлатежнойСистемы = 1;
	КонецЕсли;
	
	НастроитьВидимостьДрайвера();
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	ОпределитьВерсиюДрайверов();
	ОпределитьДоступностьКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененАдминистративныйРежим" Тогда
		// АдминистративныйРежим
		НастроитьФормуПоАдминистративномуРежиму();
		НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
		ОпределитьДоступностьКоманд();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	
	ОбщегоНазначенияКлиент.ПередЗакрытиемФормыНастроек(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Настроить(Команда)
	
	ОчиститьСообщения();
	
	#Если МобильноеПриложениеКлиент Тогда
		
		ПодключаемоеОборудованиеКлиент.ОтключитьОборудование(ОборудованиеПлатежнойСистемы);
		
		МенеджерОборудованияКлиент.ВыполнитьНастройкуОборудования(ОборудованиеПлатежнойСистемы);
		
	#Иначе
		ТекстОшибки = НСтр("ru = 'Операция доступна только из мобильного приложения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайвер(Команда)
	
	ОчиститьСообщения();
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если НЕ ЗначениеЗаполнено(Драйвер) Тогда
			Возврат;
		КонецЕсли;
		
		МенеджерОборудованияКлиент.УстановитьДрайверИзМакета(Драйвер);
		ОпределитьВерсиюДрайверов();
		ОпределитьДоступностьКоманд();
		
	#Иначе
		ТекстОшибки = НСтр("ru = 'Операция доступна только из мобильного приложения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьАдминистративныйРежим(Команда)
	
	Если НЕ АдминистративныйРежим
		И ОбщегоНазначенияВызовСервера.УстановленПарольАдминистративногоРежима() Тогда
		
		ОбщегоНазначенияКлиент.ОткрытьФормуПереключенияАдминистративногоРежима(ЭтотОбъект);
		
		Возврат;
	КонецЕсли;
	
	АдминистративныйРежим = НЕ АдминистративныйРежим;
	
	ИзменитьАдминистративныйРежим();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ДрайверПриИзменении(Элемент)
	
	ДрайверПриИзмененииНаСервере();
	ОпределитьВерсиюДрайверов();
	ОпределитьДоступностьКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользованиеПлатежнойСистемыПриИзменении(Элемент)
	
	ИспользованиеПлатежнойСистемыПриИзмененииНаСервере();
	ОпределитьВерсиюДрайверов();
	ОпределитьДоступностьКоманд();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыАдминистративныйРежим

&НаКлиенте
Процедура НастроитьДоступностьЭлементовПоАдминистративномуРежиму()
	
	СписокТолькоПросмотр = "ИспользованиеПлатежнойСистемы, Драйвер";
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, СписокТолькоПросмотр, "ТолькоПросмотр", НЕ АдминистративныйРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуПоАдминистративномуРежимуКлиент()
	
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	НастроитьФормуПоАдминистративномуРежиму(Истина);
	Оповестить("ИзмененАдминистративныйРежим");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоАдминистративномуРежиму(УстановитьРежим = Ложь)
	
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтотОбъект, УстановитьРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьАдминистративныйРежим()
	
	НастроитьОтображениеПереключенияРежима();
	
	ПодключитьОбработчикОжидания("НастроитьФормуПоАдминистративномуРежимуКлиент", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеПереключенияРежима()
	
	Если АдминистративныйРежим Тогда
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокированоПроцесс;
	Иначе
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокировать;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПроверитьЗаполнениеФормы()
	
	Если ПлатежнаяСистемаИспользуется() И НЕ ЗначениеЗаполнено(Драйвер) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект, Элементы.Драйвер, НСтр("ru = 'Драйвер'"));
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СохранитьНаКлиенте() Экспорт
	
	ОчиститьСообщения();
	Отказ = Ложь;
	
	Если НЕ ПроверитьЗаполнениеФормы() Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		СохранитьНаСервере(Отказ);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Если ОповеститьОбИзмененииЗначенийНастроек Тогда
			Оповестить("ИзмененыЗначенияНастроек");
		КонецЕсли;
		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере(Отказ)
	
	ОбщегоНазначения.СохранитьКонстантыФормы(ЭтотОбъект, СписокКонстант(), Отказ);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокировать", "АдминистративныйРежимРазблокировать",, Ложь
	);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокированоПроцесс", "АдминистративныйРежимРазблокированоПроцесс",, Ложь
	);
	
КонецПроцедуры

&НаСервере
Процедура ДрайверПриИзмененииНаСервере()
	
	ПодключаемоеОборудование.ОпределитьПодключаемоеОборудование(Драйвер, ОборудованиеПлатежнойСистемы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьВерсиюДрайверов()
	
	ВерсияДрайвераВМакете = "";
	
	ПодключаемоеОборудованиеКлиент.ПолучитьВерсиюДрайвераОборудования(ЭтотОбъект,
		ОборудованиеПлатежнойСистемы,
		ВерсияДрайвера,
		ВерсияДрайвераВМакете,
		ДрайверУстановлен);
	
	Если НЕ ДрайверУстановлен Тогда
		Элементы.ВерсияДрайвера.ЦветТекста = WebЦвета.Кирпичный;
	Иначе
		Элементы.ВерсияДрайвера.ЦветТекста = Новый Цвет;
	КонецЕсли;
	
	ЗаголовокКнопки = НСтр("ru = 'Установить драйвер'");
	
	Если ЗначениеЗаполнено(ВерсияДрайвераВМакете) Тогда
		ЗаголовокКнопки = ЗаголовокКнопки + " (" + ВерсияДрайвераВМакете + ")";
	КонецЕсли;
	
	УстановитьЗаголовокКнопкиУстановитьДрайвер(ЗаголовокКнопки);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокКнопкиУстановитьДрайвер(ЗаголовокКнопки)
	
	Элементы.УстановитьДрайвер.Заголовок = ЗаголовокКнопки;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьДоступностьКоманд()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, "КомандыДрайвера", "Видимость",
										ЗначениеЗаполнено(Драйвер));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, "Настроить", "Доступность", 
										АдминистративныйРежим И ЗначениеЗаполнено(ОборудованиеПлатежнойСистемы) И ДрайверУстановлен);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, "УстановитьДрайвер", "Доступность", 
										АдминистративныйРежим И ЗначениеЗаполнено(ОборудованиеПлатежнойСистемы));
	
КонецПроцедуры

&НаСервере
Функция СписокКонстант()
	
	Возврат "ОборудованиеПлатежнойСистемы";
	
КонецФункции

&НаСервере
Процедура ИспользованиеПлатежнойСистемыПриИзмененииНаСервере()
	
	НастроитьВидимостьДрайвера();
	
	Если ПлатежнаяСистемаИспользуется() Тогда
		Драйвер = Справочники.ДрайверыОборудования.ДрайверIboxProПлатежнаяСистема;
	Иначе
		Драйвер = Справочники.ДрайверыОборудования.ПустаяСсылка();
	КонецЕсли;
	
	ДрайверПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьДрайвера()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, "ГруппаДрайвер", "Видимость", 
		ПлатежнаяСистемаИспользуется());
	
КонецПроцедуры

&НаСервере
Функция ПлатежнаяСистемаИспользуется()
	
	Возврат ИспользованиеПлатежнойСистемы = 1;
	
КонецФункции

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры


#КонецОбласти

