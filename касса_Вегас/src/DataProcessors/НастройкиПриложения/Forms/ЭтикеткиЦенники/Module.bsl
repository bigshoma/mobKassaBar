
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	
	НаборКонстант = Константы.СоздатьНабор(СписокКонстант());
	НаборКонстант.Прочитать();
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, НаборКонстант, СписокКонстант());
	
	ПрочитатьШаблоны();
	
	// АдминистративныйРежим
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтаФорма);
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененАдминистративныйРежим" Тогда
		// АдминистративныйРежим
		НастроитьФормуПоАдминистративномуРежиму();
		НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	
	ОбщегоНазначенияКлиент.ПередЗакрытиемФормыНастроек(ЭтаФорма, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура СписокШаблонЦенникаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = "СписокШаблонЦенникаЗначение" Тогда
		
		ТекущаяСтрока  = СписокШаблонЦенника.НайтиПоИдентификатору(ВыбраннаяСтрока);
		
		Если НЕ (ТекущаяСтрока.Значение = "НаименованиеТовара"
			ИЛИ ТекущаяСтрока.Значение = "Цена"
			ИЛИ ТекущаяСтрока.Значение = "ДатаПечати") Тогда
			
			ТекущаяСтрока.Пометка = НЕ ТекущаяСтрока.Пометка;
			
			Модифицированность = Истина;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокШаблонЭтикеткиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле.Имя = "СписокШаблонЭтикеткиЗначение" Тогда
		
		ТекущаяСтрока  = СписокШаблонЭтикетки.НайтиПоИдентификатору(ВыбраннаяСтрока);
		ТекущаяСтрока.Пометка = НЕ ТекущаяСтрока.Пометка;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУмолчаниюШаблонЦенника(Команда)
	
	ЗаполнитьШаблонЦенникаПоУмолчанию();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУмолчаниюШаблонЭтикетки(Команда)
	
	ЗаполнитьШаблонЭтикеткиПоУмолчанию();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьАдминистративныйРежим(Команда)
	
	Если НЕ АдминистративныйРежим
		И ОбщегоНазначенияВызовСервера.УстановленПарольАдминистративногоРежима() Тогда
		
		ОбщегоНазначенияКлиент.ОткрытьФормуПереключенияАдминистративногоРежима(ЭтотОбъект);
		
		Возврат;
	КонецЕсли;
	
	АдминистративныйРежим = НЕ АдминистративныйРежим;
	
	ИзменитьАдминистративныйРежим();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьШаблонЦенникаПоУмолчанию()
	
	ШаблонЦенникаПоУмолчанию = ЗначениеНастроекВызовСервераПовтИсп.ШаблонЦенникаПоУмолчанию();
	
	СписокШаблонЦенника.Очистить();
	
	СписокШаблонЦенника = ОбщегоНазначенияКлиентСервер.СкопироватьСписокЗначений(ШаблонЦенникаПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШаблонЭтикеткиПоУмолчанию()
	
	ШаблонЭтикеткиПоУмолчанию = ЗначениеНастроекВызовСервераПовтИсп.ШаблонЭтикеткиПоУмолчанию();
	
	СписокШаблонЭтикетки.Очистить();
	
	СписокШаблонЭтикетки = ОбщегоНазначенияКлиентСервер.СкопироватьСписокЗначений(ШаблонЭтикеткиПоУмолчанию);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте() Экспорт
	
	ПоместитьШаблоны();
	
	ОчиститьСообщения();
	Отказ = Ложь;
	
	Если Модифицированность Тогда
		СохранитьНаСервере(Отказ);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Если ОповеститьОбИзмененииЗначенийНастроек Тогда
			Оповестить("ИзмененыЗначенияНастроек");
		КонецЕсли;
		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере(Отказ)
	
	ОбщегоНазначения.СохранитьКонстантыФормы(ЭтаФорма, СписокКонстант(), Отказ);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокировать", "АдминистративныйРежимРазблокировать",, Ложь
	);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокированоПроцесс", "АдминистративныйРежимРазблокированоПроцесс",, Ложь
	);
	
КонецПроцедуры

&НаСервере
Функция СписокКонстант()
	
	Возврат "ПечататьЭтикеткиЦенники, ШаблонЦенника, ШаблонЭтикетки";
	
КонецФункции

&НаСервере
Процедура ПоместитьШаблоны()
	
	ШаблонЦенника = Новый ХранилищеЗначения(СписокШаблонЦенника);
	ШаблонЭтикетки = Новый ХранилищеЗначения(СписокШаблонЭтикетки);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьШаблоны()
	
	СписокШаблонЦенника = ШаблонЦенника.Получить();
	
	Если СписокШаблонЦенника.Количество() = 0 Тогда
		ЗаполнитьШаблонЦенникаПоУмолчанию();
	КонецЕсли;
	
	СписокШаблонЭтикетки = ШаблонЭтикетки.Получить();
	
	Если СписокШаблонЭтикетки.Количество() = 0 Тогда
		ЗаполнитьШаблонЭтикеткиПоУмолчанию();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыАдминистративныйРежим

&НаКлиенте
Процедура НастроитьДоступностьЭлементовПоАдминистративномуРежиму()
	
	СписокТолькоПросмотр = "ПечататьЭтикеткиЦенники";
	
	СписокДоступность = "СписокШаблонЦенника, СписокШаблонЭтикетки, ЗаполнитьШаблонЦенникаПоУмолчанию, ЗаполнитьПоУмолчаниюШаблонЭтикетки";
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, СписокТолькоПросмотр, "ТолькоПросмотр", НЕ АдминистративныйРежим);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, СписокДоступность, "Доступность", АдминистративныйРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуПоАдминистративномуРежимуКлиент()
	
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	НастроитьФормуПоАдминистративномуРежиму(Истина);
	Оповестить("ИзмененАдминистративныйРежим");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоАдминистративномуРежиму(УстановитьРежим = Ложь)
	
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтаФорма, УстановитьРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьАдминистративныйРежим()
	
	НастроитьОтображениеПереключенияРежима();
	
	ПодключитьОбработчикОжидания("НастроитьФормуПоАдминистративномуРежимуКлиент", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеПереключенияРежима()
	
	Если АдминистративныйРежим Тогда
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокированоПроцесс;
	Иначе
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокировать;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры


#КонецОбласти
