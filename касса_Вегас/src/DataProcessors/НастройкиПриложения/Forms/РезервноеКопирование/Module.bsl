
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	
	ОбщегоНазначения.УстановитьЦветИнформационныхНадписей(ЭтотОбъект, "КаталогДокументовПоУмолчанию");
	
	НаборКонстант = Константы.СоздатьНабор(СписокКонстант());
	НаборКонстант.Прочитать();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, НаборКонстант, СписокКонстант());
	
	// АдминистративныйРежим
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтотОбъект);
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	УстановитьДоступностьКомандДействия();
	УстановитьДоступностьНастроекНаУстройстве();
	УстановитьДоступностьНастроекНаЯндекс();
	
	КаталогДокументовПоУмолчанию = КаталогДокументов();
	
	Если ЗначениеЗаполнено(ПарольЯндексРезервногоКопирования) Тогда
		
		Элементы.СтраницыЯндексПароль.ТекущаяСтраница = Элементы.СтраницаЯндексПарольБезГлаза;
		
	Иначе
		
		НастроитьОтображениеПароля();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененАдминистративныйРежим" Тогда
		// АдминистративныйРежим
		НастроитьФормуПоАдминистративномуРежиму();
		НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	
	ОбщегоНазначенияКлиент.ПередЗакрытиемФормыНастроек(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура РезервныеКопииНаУстройствеПриИзменении(Элемент)
	УстановитьДоступностьКомандДействия();
	УстановитьДоступностьНастроекНаУстройстве();
КонецПроцедуры

&НаКлиенте
Процедура РезервныеКопииНаЯндексДискеПриИзменении(Элемент)
	УстановитьДоступностьКомандДействия();
	УстановитьДоступностьНастроекНаЯндекс();
КонецПроцедуры

&НаКлиенте
Процедура ПарольЯндексРезервногоКопированияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ПарольЯндексРезервногоКопирования) Тогда
		
		НастроитьОтображениеПароля();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКаталогомПоУмолчанию(Команда)
	
	КаталогРезервногоКопирования = КаталогДокументовПоУмолчанию;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРезервнуюКопию(Команда)
	
	ОчиститьСообщения();
	Отказ = Ложь;
	
	Если Модифицированность Тогда
		СохранитьНаСервере(Отказ);
		Если НЕ Отказ Тогда
			Оповестить("ИзмененыЗначенияНастроек");
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		РезервноеКопированиеКлиент.СоздатьРезервнуюКопию();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьИзРезервнойКопии(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	Если Модифицированность Тогда
		СохранитьНаСервере(Отказ);
		Если НЕ Отказ Тогда
			Оповестить("ИзмененыЗначенияНастроек");
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		РезервноеКопированиеКлиент.ВосстановитьИзРезервнойКопии();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьПароль(Команда)
	
	ПарольОтображается = НЕ ПарольОтображается;
	НастроитьОтображениеПароля();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьАдминистративныйРежим(Команда)
	
	Если НЕ АдминистративныйРежим
		И ОбщегоНазначенияВызовСервера.УстановленПарольАдминистративногоРежима() Тогда
		
		ОбщегоНазначенияКлиент.ОткрытьФормуПереключенияАдминистративногоРежима(ЭтотОбъект);
		
		Возврат;
	КонецЕсли;
	
	АдминистративныйРежим = НЕ АдминистративныйРежим;
	
	ИзменитьАдминистративныйРежим();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьНаКлиенте() Экспорт
	
	ОчиститьСообщения();
	Отказ = Ложь;
	
	Если НЕ ПроверитьЗаполнениеФормы() Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		СохранитьНаСервере(Отказ);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Если ОповеститьОбИзмененииЗначенийНастроек Тогда
			Оповестить("ИзмененыЗначенияНастроек");
		КонецЕсли;
		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере(Отказ)
	
	ОбщегоНазначения.СохранитьКонстантыФормы(ЭтотОбъект, СписокКонстант(), Отказ);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокировать", "АдминистративныйРежимРазблокировать",, Ложь
	);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокированоПроцесс", "АдминистративныйРежимРазблокированоПроцесс",, Ложь
	);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандДействия()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, "СоздатьРезервнуюКопию, ВосстановитьИзРезервнойКопии", "Доступность", РезервныеКопииНаУстройстве ИЛИ РезервныеКопииНаЯндексДиске);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьНастроекНаУстройстве()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, "КаталогРезервногоКопирования, ГруппаКаталогПодсказка", "Доступность", РезервныеКопииНаУстройстве);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьНастроекНаЯндекс()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект,
		"ЛогинЯндексРезервногоКопирования,
		|ГруппаЯндексПарольГлаз,
		|ГруппаЯндексПарольГлазПеречеркнутый,
		|ГруппаЯндексПарольБезГлаза,
		|КаталогЯндексРезервногоКопирования",
		"Доступность",
		РезервныеКопииНаЯндексДиске
	);
	
КонецПроцедуры

&НаСервере
Функция СписокКонстант()
	
	Возврат "КаталогРезервногоКопирования, КаталогЯндексРезервногоКопирования, ЛогинЯндексРезервногоКопирования, ПарольЯндексРезервногоКопирования, РезервныеКопииНаУстройстве, РезервныеКопииНаЯндексДиске";
	
КонецФункции

&НаКлиенте
Процедура НастроитьОтображениеПароля()
	
	Если ПарольОтображается Тогда
		
		Элементы.СтраницыЯндексПароль.ТекущаяСтраница = Элементы.СтраницаЯндексПарольГлазПеречеркнутый;
		
	Иначе
		
		Элементы.СтраницыЯндексПароль.ТекущаяСтраница = Элементы.СтраницаЯндексПарольГлаз;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеФормы()
	
	Если РезервныеКопииНаУстройстве И НЕ ЗначениеЗаполнено(КаталогРезервногоКопирования) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект, Элементы.КаталогРезервногоКопирования, НСтр("ru = 'Каталог'"));
		
		Возврат Ложь;
	КонецЕсли;
	
	Если РезервныеКопииНаЯндексДиске И НЕ ЗначениеЗаполнено(ЛогинЯндексРезервногоКопирования) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект, Элементы.ЛогинЯндексРезервногоКопирования, НСтр("ru = 'Логин'"));
		
		Возврат Ложь;
	КонецЕсли;
	
	Если РезервныеКопииНаЯндексДиске И НЕ ЗначениеЗаполнено(ПарольЯндексРезервногоКопирования) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект, Элементы.ПарольЯндексРезервногоКопирования, НСтр("ru = 'Пароль'"));
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыАдминистративныйРежим

&НаКлиенте
Процедура НастроитьДоступностьЭлементовПоАдминистративномуРежиму()
	
	СписокТолькоПросмотр = "РезервныеКопииНаУстройстве,
		|КаталогРезервногоКопирования,
		|РезервныеКопииНаЯндексДиске,
		|ЛогинЯндексРезервногоКопирования,
		|КаталогЯндексРезервногоКопирования,
		|ПарольЯндексРезервногоКопированияБезГлаза,
		|ПарольЯндексРезервногоКопирования,
		|ПарольЯндексРезервногоКопированияГлазПеречеркнутый
		|";
	
	СписокДоступность = "ЗаполнитьКаталогомПоУмолчанию, ПоказатьСкрытьПароль, ПоказатьСкрытьПарольГлазПеречеркнутый";
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, СписокТолькоПросмотр, "ТолькоПросмотр", НЕ АдминистративныйРежим);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект, СписокДоступность, "Доступность", АдминистративныйРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуПоАдминистративномуРежимуКлиент()
	
	НастроитьФормуПоАдминистративномуРежиму(Истина);
	Оповестить("ИзмененАдминистративныйРежим");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоАдминистративномуРежиму(УстановитьРежим = Ложь)
	
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтотОбъект, УстановитьРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьАдминистративныйРежим()
	
	НастроитьОтображениеПереключенияРежима();
	
	ПодключитьОбработчикОжидания("НастроитьФормуПоАдминистративномуРежимуКлиент", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеПереключенияРежима()
	
	Если АдминистративныйРежим Тогда
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокированоПроцесс;
	Иначе
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокировать;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти

