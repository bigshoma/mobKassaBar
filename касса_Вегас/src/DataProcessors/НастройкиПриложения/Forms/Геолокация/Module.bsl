
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	
	НаборКонстант = Константы.СоздатьНабор(СписокКонстант());
	НаборКонстант.Прочитать();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, НаборКонстант, СписокКонстант());
		
	// АдминистративныйРежим
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтотОбъект);
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	ОпределитьМестоположение();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененАдминистративныйРежим" Тогда
		// АдминистративныйРежим
		НастроитьФормуПоАдминистративномуРежиму();
		НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	
	ОбщегоНазначенияКлиент.ПередЗакрытиемФормыНастроек(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьМестоположение(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		ДанныеМестоположения = ГеолокацияКлиент.ОбновитьМестоположение();
		
		Если НЕ ДанныеМестоположения = Неопределено Тогда
			Местоположение = ГеолокацияКлиент.ПолучитьПредставлениеКоординатМестоположения(ДанныеМестоположения.Координаты);
			
			ПредставлениеАдресаМестоположения = ГеолокацияКлиент.ПолучитьПредставлениеАдресаМестоположения(ДанныеМестоположения.Координаты);
			
		Иначе
			Местоположение = НСтр("ru = 'Не удалось определить'");
			ПредставлениеАдресаМестоположения = "";
		КонецЕсли;
		
	#Иначе
		
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru = 'Операция доступна только из мобильного приложения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКоординатыНаКарте(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если ЗначениеЗаполнено(ДанныеМестоположения) Тогда
			ГеоКоординаты = ГеолокацияКлиент.ПолучитьКоординатыПоМестоположению(ДанныеМестоположения);
			ПоказатьНаКарте(ГеоКоординаты);
		КонецЕсли;
		
	#Иначе
		
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru = 'Операция доступна только из мобильного приложения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьАдминистративныйРежим(Команда)
	
	Если НЕ АдминистративныйРежим
		И ОбщегоНазначенияВызовСервера.УстановленПарольАдминистративногоРежима() Тогда
		
		ОбщегоНазначенияКлиент.ОткрытьФормуПереключенияАдминистративногоРежима(ЭтотОбъект);
		
		Возврат;
	КонецЕсли;
	
	АдминистративныйРежим = НЕ АдминистративныйРежим;
	
	ИзменитьАдминистративныйРежим();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОпределитьМестоположение()
	
	#Если МобильноеПриложениеКлиент Тогда
		
		ИмяПровайдераГеолокации = ОбщегоНазначенияВызовСервера.ПолучитьПараметрСеанса("ИмяПровайдераГеолокации");
		
		Если ЗначениеЗаполнено(ИмяПровайдераГеолокации) Тогда
			
			ДанныеМестоположения = СредстваГеопозиционирования.ПолучитьПоследнееМестоположение(ИмяПровайдераГеолокации);
			
			Если НЕ ДанныеМестоположения = Неопределено Тогда
				
				Местоположение = ГеолокацияКлиент.ПолучитьПредставлениеКоординатМестоположения(ДанныеМестоположения.Координаты);
				
				ПредставлениеАдресаМестоположения = ГеолокацияКлиент.ПолучитьПредставлениеАдресаМестоположения(ДанныеМестоположения.Координаты);
				
			КонецЕсли;
			
		КонецЕсли;
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте() Экспорт
	
	ОчиститьСообщения();
	Отказ = Ложь;
	
	Если Модифицированность Тогда
		СохранитьНаСервере(Отказ);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Если ОповеститьОбИзмененииЗначенийНастроек Тогда
			Оповестить("ИзмененыЗначенияНастроек");
		КонецЕсли;
		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере(Отказ)
	
	ОбщегоНазначения.СохранитьКонстантыФормы(ЭтотОбъект, СписокКонстант(), Отказ);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект, 
		"ГруппаРазблокировать", "АдминистративныйРежимРазблокировать",, Ложь
	);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект, 
		"ГруппаРазблокированоПроцесс", "АдминистративныйРежимРазблокированоПроцесс",, Ложь
	);

КонецПроцедуры

&НаСервере
Функция СписокКонстант()
	
	Возврат "ФиксироватьКоординатыПробитияЧека, ЧастотаОбновленияКоординат";
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыАдминистративныйРежим

&НаКлиенте
Процедура НастроитьДоступностьЭлементовПоАдминистративномуРежиму()
	
	СписокТолькоПросмотр = "ФиксироватьКоординатыПробитияЧека, ЧастотаОбновленияКоординат";
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтотОбъект,
		СписокТолькоПросмотр, "ТолькоПросмотр", НЕ АдминистративныйРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуПоАдминистративномуРежимуКлиент()
	
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	НастроитьФормуПоАдминистративномуРежиму(Истина);
	Оповестить("ИзмененАдминистративныйРежим");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоАдминистративномуРежиму(УстановитьРежим = Ложь)
	
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтотОбъект, УстановитьРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьАдминистративныйРежим()
	
	НастроитьОтображениеПереключенияРежима();
	
	ПодключитьОбработчикОжидания("НастроитьФормуПоАдминистративномуРежимуКлиент", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеПереключенияРежима()
	
	Если АдминистративныйРежим Тогда
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокированоПроцесс;
	Иначе
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокировать;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти
