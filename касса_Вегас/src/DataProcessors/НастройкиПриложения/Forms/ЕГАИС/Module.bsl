
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	
	НаборКонстант = Константы.СоздатьНабор(СписокКонстант());
	НаборКонстант.Прочитать();
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, НаборКонстант, СписокКонстант());
	
	// АдминистративныйРежим
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтаФорма);
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
	Если НЕ ЗначениеЗаполнено(ДатаНачалаВыгрузкиЧековЕГАИС) Тогда
		
		ДатаНачалаВыгрузкиПоЗакону = Дата(2016, 7, 1);
		ДатаНачалаВыгрузкиЧековЕГАИС = ДатаНачалаВыгрузкиПоЗакону;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	НастроитьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененАдминистративныйРежим" Тогда
		// АдминистративныйРежим
		НастроитьФормуПоАдминистративномуРежиму();
		НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
		
	ИначеЕсли ИмяСобытия = "ИзмененыЗначенияНастроек" Тогда
		
		НастроитьФормуПоЗначениямНастроек();
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	
	ОбщегоНазначенияКлиент.ПередЗакрытиемФормыНастроек(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ВыгружатьЧекиЕГАИС Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементИзМассива(ПроверяемыеРеквизиты, "ДатаНачалаВыгрузкиЧековЕГАИС");
	КонецЕсли;
	
	Если НЕ ВыгружатьЧекиЕГАИС И НЕ ЗагружатьТТНЕГАИС Тогда
		ПроверяемыеРеквизиты.Очистить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ИспользоватьЕГАИСПриИзменении(Элемент)
	
	НастроитьДоступностьЭлементов();
	
	ИзмененаФО = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгружатьЧекиЕГАИСПриИзменении(Элемент)
	
	НастроитьДоступностьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьАдминистративныйРежим(Команда)
	
	Если НЕ АдминистративныйРежим
		И ОбщегоНазначенияВызовСервера.УстановленПарольАдминистративногоРежима() Тогда
		
		ОбщегоНазначенияКлиент.ОткрытьФормуПереключенияАдминистративногоРежима(ЭтотОбъект);
		
		Возврат;
	КонецЕсли;
	
	АдминистративныйРежим = НЕ АдминистративныйРежим;
	
	ИзменитьАдминистративныйРежим();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПроверитьЗаполнениеФормы()
	
	Если ВыгружатьЧекиЕГАИС И НЕ ЗначениеЗаполнено(ДатаНачалаВыгрузкиЧековЕГАИС) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект,
			Элементы.ДатаНачалаВыгрузкиЧековЕГАИС,
			НСтр("ru = 'Дата начала выгрузки'")
		);
		
		Возврат Ложь;
	КонецЕсли;
	
	
	Если ВыгружатьЧекиЕГАИС ИЛИ ЗагружатьТТНЕГАИС Тогда
		
		Если НЕ ЗначениеЗаполнено(ИдентификаторФСРАР) Тогда
			
			ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект,
				Элементы.ИдентификаторФСРАР,
				НСтр("ru = 'Код в ФС РАР'")
			);
			
			Возврат Ложь;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(АдресУТМ) Тогда
			
			ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект,
				Элементы.АдресУТМ,
				НСтр("ru = 'Адрес УТМ'")
			);
			
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СохранитьНаКлиенте() Экспорт
	
	ОчиститьСообщения();
	Отказ = Ложь;
	
	Если НЕ ПроверитьЗаполнениеФормы() Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		СохранитьНаСервере(Отказ);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Если ОповеститьОбИзмененииЗначенийНастроек Тогда
			Оповестить("ИзмененыЗначенияНастроек");
		КонецЕсли;
		
		Если ИзмененаФО Тогда
			ОбновитьИнтерфейс();
		КонецЕсли;
		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере(Отказ)
	
	ОбщегоНазначения.СохранитьКонстантыФормы(ЭтаФорма, СписокКонстант(), Отказ);
	
	Если ЗагружатьТТНЕГАИС ИЛИ ВыгружатьЧекиЕГАИС Тогда
		ИнтеграцияЕГАИСПереопределяемый.ОбновитьВидыОбъектовЕГАИС();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокировать", "АдминистративныйРежимРазблокировать",, Ложь
	);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокированоПроцесс", "АдминистративныйРежимРазблокированоПроцесс",, Ложь
	);
	
КонецПроцедуры

&НаСервере
Функция СписокКонстант()
	
	Возврат "ЗагружатьТТНЕГАИС, АдресУТМ, ПортУТМ, ИдентификаторФСРАР, ВыгружатьЧекиЕГАИС, ДатаНачалаВыгрузкиЧековЕГАИС";
	
КонецФункции

&НаКлиенте
Процедура НастроитьДоступностьЭлементов()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "АдресУТМ, ПортУТМ, ИдентификаторФСРАР", "Доступность", ЗагружатьТТНЕГАИС ИЛИ ВыгружатьЧекиЕГАИС);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ДатаНачалаВыгрузкиЧековЕГАИС",
		"Доступность", ВыгружатьЧекиЕГАИС);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыАдминистративныйРежим

&НаКлиенте
Процедура НастроитьДоступностьЭлементовПоАдминистративномуРежиму()
	
	СписокТолькоПросмотр = "ЗагружатьТТНЕГАИС, АдресУТМ, ПортУТМ, ИдентификаторФСРАР, ВыгружатьЧекиЕГАИС, ДатаНачалаВыгрузкиЧековЕГАИС";
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, СписокТолькоПросмотр, "ТолькоПросмотр", НЕ АдминистративныйРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуПоАдминистративномуРежимуКлиент()
	
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	НастроитьФормуПоАдминистративномуРежиму(Истина);
	Оповестить("ИзмененАдминистративныйРежим");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоАдминистративномуРежиму(УстановитьРежим = Ложь)
	
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтаФорма, УстановитьРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьАдминистративныйРежим()
	
	НастроитьОтображениеПереключенияРежима();
	
	ПодключитьОбработчикОжидания("НастроитьФормуПоАдминистративномуРежимуКлиент", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеПереключенияРежима()
	
	Если АдминистративныйРежим Тогда
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокированоПроцесс;
	Иначе
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокировать;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти
