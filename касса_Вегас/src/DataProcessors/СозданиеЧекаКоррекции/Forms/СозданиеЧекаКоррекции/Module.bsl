
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДатаКоррекции = ОбщегоНазначенияКлиентСервер.ПолучитьТекущуюДату();
	
	ВидОперации = "Продажа";
	
	Если Параметры.Свойство("Основание") Тогда
		ЧекСОшибкой = Параметры.Основание;
		
		ФискальныйПризнак = ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(
			ЧекСОшибкой, "ФискальныйПризнак"
		);
		
		Если ЗначениеЗаполнено(ФискальныйПризнак) Тогда
			Элементы.ФискальныйПризнак.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		Элементы.ДекорацияПодсказкаНеприменениеККТ.Видимость = Ложь;
	Иначе
		Элементы.ГруппаЧекСОшибкой.Видимость = Ложь;
		Элементы.ОтступЧекСОшибкой.Видимость = Ложь;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьПодсказкуПоТипуКоррекции();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыЗначенияНастроек" Тогда
		
		НастроитьФормуПоЗначениямНастроек();
		
	ИначеЕсли ИмяСобытия = "ЗакрытьСозданиеЧекаКоррекции" Тогда
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	Если НЕ ПроверитьЗаполнениеФормы() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДатаКоррекции", ДатаКоррекции);
	ПараметрыФормы.Вставить("ОписаниеКоррекции", ОписаниеКоррекции);
	ПараметрыФормы.Вставить("ОснованиеКоррекции", ОснованиеКоррекции);
	ПараметрыФормы.Вставить("ТипКоррекции", ТипКоррекции);
	ПараметрыФормы.Вставить("ЧекСОшибкой", ЧекСОшибкой);
	ПараметрыФормы.Вставить("ФискальныйПризнак", ФискальныйПризнак);
	
	ОткрытьФорму("Обработка.СозданиеЧекаКоррекции.Форма.СозданиеЧекаКоррекции1",
		ПараметрыФормы,
		ЭтотОбъект,
		УникальныйИдентификатор
	);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ДатаКоррекцииПриИзменении(Элемент)
	
	ТекущаяДата = ОбщегоНазначенияКлиентСервер.ПолучитьТекущуюДату();
	
	Если ДатаКоррекции > ТекущаяДата Тогда
		
		ДатаКоррекции = ТекущаяДата;
		
		ПомощникUIКлиент.ПоказатьСообщение(
			НСтр("ru = '""Дата корректируемого расчета"" не может быть больше текущей'"),
			Ложь
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКоррекцииПриИзменении(Элемент)
	
	УстановитьПодсказкуПоТипуКоррекции();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПроверитьЗаполнениеФормы()
	
	Если ЗначениеЗаполнено(ЧекСОшибкой) И НЕ ЗначениеЗаполнено(ФискальныйПризнак) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект,
			Элементы.ФискальныйПризнак, НСтр("ru = 'Фискальный признак'")
		);
		
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипКоррекции) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект,
			Элементы.ТипКоррекции, НСтр("ru = 'Тип коррекции'")
		);
		
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаКоррекции) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект,
			Элементы.ДатаКоррекции, НСтр("ru = 'Дата коррекции'")
		);
		
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОснованиеКоррекции) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект,
			Элементы.ОснованиеКоррекции, НСтр("ru = 'Основание коррекции'")
		);
		
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОписаниеКоррекции) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект,
			Элементы.ОписаниеКоррекции, НСтр("ru = 'Описание коррекции'")
		);
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект, "ГруппаДалее", "Далее", 2,, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПодсказкуПоТипуКоррекции()
	
	Подсказка = " ";
	
	Если ТипКоррекции = ПредопределенноеЗначение("Перечисление.ТипыКоррекции.Самостоятельно") Тогда
		
		Подсказка = НСтр("ru = 'Номер внутреннего документа'");
		
	ИначеЕсли ТипКоррекции = ПредопределенноеЗначение("Перечисление.ТипыКоррекции.ПоПредписанию") Тогда
		
		Подсказка = НСтр("ru = 'Номер предписания ФНС'");
		
	КонецЕсли;
	
	Элементы.ОснованиеКоррекции.Подсказка = Подсказка;
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	//
КонецПроцедуры

#КонецОбласти



