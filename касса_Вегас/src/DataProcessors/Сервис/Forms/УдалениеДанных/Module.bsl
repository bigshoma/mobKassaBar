
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВариантОчистки = "ЗаПериод";
	
	// АдминистративныйРежим
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтаФорма);
	
	НастроитьФормуПоЗначениямНастроек();
	
	ОбщегоНазначения.УстановитьЦветИнформационныхНадписей(ЭтаФорма, "Описание, ИнфоНадписьПериод");
	ОбщегоНазначения.УстановитьЦветПредупреждающихПолей(ЭтаФорма, "НадписьПредупреждение, УдалитьДанные");
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
	ПроверитьВозможностьУдаленияДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	УстановитьТекущуюСтраницу();
	УстановитьДоступностьКнопкиУдалить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененАдминистративныйРежим" Тогда
		// АдминистративныйРежим
		НастроитьФормуПоАдминистративномуРежиму();
		НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ВариантУдаленияПриИзменении(Элемент)
	
	УстановитьТекущуюСтраницу();
	ОбновитьОписание();
	УстановитьДоступностьКнопкиУдалить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПродажНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ОповещениеУстановитьПериод", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Период", ПериодПродаж);
	
	ОткрытьФорму("ОбщаяФорма.НастройкаПериода", ПараметрыФормы, ЭтаФорма,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеОПродажахПриИзменении(Элемент)
	
	Если НЕ УдалитьДанныеОПродажах Тогда
		
		УдалитьНастройки = Ложь;
		УдалитьПрайсЛист = Ложь;
		
	КонецЕсли;
	
	УстановитьДоступностьЭлементовВыборочно();
	УстановитьДоступностьКнопкиУдалить();
	
	ОбновитьОписаниеПоПродажам(УдалитьДанныеОПродажах);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрайсЛистПриИзменении(Элемент)
	
	Если НЕ УдалитьПрайсЛист Тогда
		УдалитьНастройки = Ложь;
	КонецЕсли;
	
	УстановитьДоступностьЭлементовВыборочно();
	
	ОбновитьОписаниеПоПрайсЛисту(УдалитьПрайсЛист);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПриИзменении(Элемент)
	
	ОбновитьОписаниеПоНастройкам(УдалитьНастройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьДанные(Команда)
	
	Если НЕ ПроверитьЗаполнениеФормы() Тогда
		Возврат;
	КонецЕсли;
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить("Отмена",        НСтр("ru = 'Отмена'"));
	Кнопки.Добавить("УдалитьДанные", НСтр("ru = 'Удалить данные'"));
	
	ТекстВопроса = НСтр("ru = 'Выбранные данные будут безвозвратно удалены.'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеУдалитьДанные", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки, , "Отмена", НСтр("ru = 'Удаление данных'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьАдминистративныйРежим(Команда)
	
	Если НЕ АдминистративныйРежим
		И ОбщегоНазначенияВызовСервера.УстановленПарольАдминистративногоРежима() Тогда
		
		ОбщегоНазначенияКлиент.ОткрытьФормуПереключенияАдминистративногоРежима(ЭтотОбъект);
		
		Возврат;
	КонецЕсли;
	
	АдминистративныйРежим = НЕ АдминистративныйРежим;
	
	ИзменитьАдминистративныйРежим();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПроверитьЗаполнениеФормы()
	
	Если ВариантОчистки = "ЗаПериод" И НЕ ЗначениеЗаполнено(ПериодПродаж) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект, Элементы.ПериодПродаж, НСтр("ru = 'Период'"));
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьОписание()
	
	Описание = "";
	
	Если ВариантОчистки = "ЗаПериод" Тогда
		
		Если ЗначениеЗаполнено(ПериодПродаж) Тогда
			ОбновитьОписаниеПоПродажам();
		КонецЕсли;
		
	ИначеЕсли ВариантОчистки = "Выборочно" Тогда
		
		ОбновитьОписаниеПоПродажам(УдалитьДанныеОПродажах);
		ОбновитьОписаниеПоПрайсЛисту(УдалитьПрайсЛист);
		ОбновитьОписаниеПоНастройкам(УдалитьНастройки);
		
	ИначеЕсли ВариантОчистки = "Все" Тогда
		
		ОбновитьОписаниеПоПродажам();
		ОбновитьОписаниеПоПрайсЛисту();
		ОбновитьОписаниеПоНастройкам();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОписаниеПоПродажам(ФлагУстановлен = Истина)
	
	Описание = "";
	
	Если НЕ ФлагУстановлен Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеКУдалению = Неопределено;
	
	Если ВариантОчистки = "ЗаПериод" Тогда
		
		Если ЗначениеЗаполнено(ПериодПродаж) Тогда
			ДанныеКУдалению = КоличествоДокументовПоСменам(ПериодПродаж);
		КонецЕсли;
		
	Иначе
		
		ДанныеКУдалению = КоличествоДокументовПоСменам();
		
	КонецЕсли;
	
	Если ДанныеКУдалению = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru = 'Чеки: %Чеки%
								|Кассовые смены: %КассовыеСмены%
								|Внесения и выемки: %ВыемкиИВнесения%'");
		
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КассовыеСмены%",   ДанныеКУдалению.КассовыеСмены);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Чеки%",            ДанныеКУдалению.Чеки);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВыемкиИВнесения%", ДанныеКУдалению.ВыемкиИВнесения);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТекст(Описание, ТекстСообщения);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписаниеПоПрайсЛисту(ФлагУстановлен = Истина)
	
	Если ФлагУстановлен Тогда
		
		КоличествоЭлементовИГрупп = Справочники.Номенклатура.КоличествоЭлементовИГрупп();
		
		Если ЗначениеНастроекПовтИсп.ИспользуютсяГруппыНоменклатуры() Тогда
			ТекстСообщения = НСтр("ru = 'Позиции и группы прайс-листа: %Количество%'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Позиции прайс-листа: %Количество%'");
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", КоличествоЭлементовИГрупп);
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТекст(Описание, ТекстСообщения);
		
	Иначе
		
		ПозицияЗнака = СтрНайти(Описание, "Позиции");
		
		Если НЕ ПозицияЗнака = 0 Тогда
			
			Описание = Лев(Описание, ПозицияЗнака - 2);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОписаниеПоНастройкам(ФлагУстановлен = Истина)
	
	Если ФлагУстановлен Тогда
		
		ТекстСообщения = НСтр("ru = 'Настройки'");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТекст(Описание, ТекстСообщения);
		
	Иначе
		
		ПозицияЗнака = СтрНайти(Описание, "Настройки");
		
		Если НЕ ПозицияЗнака = 0 Тогда
			
			Описание = Лев(Описание, ПозицияЗнака - 2);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОповещениеУдалитьДанные(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = "УдалитьДанные" Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьДанныеНаСервере();
	
	ТекстСообщения = НСтр("ru = 'Данные успешно очищены'");
	
	ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("ОписаниеПослеУспешногоУдаления", ЭтотОбъект);
	ПоказатьПредупреждение(ОписаниеОповещенияОЗавершении, ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПослеУспешногоУдаления(ДополнительныеПараметры) Экспорт
	
	Ответ = Новый Структура;
	
	Если УдалитьНастройки Тогда
		Ответ.Вставить("УдаленыНастройки", Истина);
	КонецЕсли;
	
	Закрыть(Ответ);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДанныеНаСервере()
	
	Если ВариантОчистки = "ЗаПериод" Тогда
		
		ОбщегоНазначения.УдалитьДанныеОПродажахЗаПериод(ПериодПродаж);
		
	ИначеЕсли ВариантОчистки = "Выборочно" Тогда
		
		ОбщегоНазначения.ОчиститьДанныеБД(УдалитьДанныеОПродажах, УдалитьПрайсЛист, УдалитьНастройки);
		
	ИначеЕсли ВариантОчистки = "Все" Тогда
		
		УдалитьДанныеОПродажах = Истина;
		УдалитьПрайсЛист = Истина;
		УдалитьНастройки = Истина;
		
		ОбщегоНазначения.ОчиститьДанныеБД(УдалитьДанныеОПродажах, УдалитьПрайсЛист, УдалитьНастройки);
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьВозможностьУдаленияДанных()
	
	Если НЕ ПродажиВызовСервераПовтИсп.ПолучитьСмену(Ложь) = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Кассовая смена не закрыта.'");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТекст(Описание, ТекстСообщения);
		УдалениеЗапрещено = Истина;
		
	КонецЕсли;
	
	Если НЕ Документы.ОтчетОРозничныхПродажах.ОтчетыОПродажахКВыгрузке().Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Есть не выгруженные отчеты о продажах.'");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТекст(Описание, ТекстСообщения);
		
		УдалениеЗапрещено = Истина;
	КонецЕсли;
	
	Если УдалениеЗапрещено Тогда
		ТекстСообщения = НСтр("ru = 'Удаление данных не возможно.'");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТекст(Описание, ТекстСообщения);
		
		ВариантОчистки = "";
		Элементы.ВариантОчистки.Доступность = Ложь;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ГруппаСтраницы", "Видимость", Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтотОбъект);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокировать", "АдминистративныйРежимРазблокировать",, Ложь
	);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокированоПроцесс", "АдминистративныйРежимРазблокированоПроцесс",, Ложь
	);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементовВыборочно()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ПрайсЛист" , "Доступность",
		УдалитьДанныеОПродажах);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Настройки" , "Доступность",
		УдалитьПрайсЛист);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеУстановитьПериод(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = "ОчиститьПериод" Тогда
		ПериодПродаж = Неопределено;
	Иначе
		ПериодПродаж = Результат;
	КонецЕсли;
	
	УстановитьДоступностьКнопкиУдалить();
	
	Если ЗначениеЗаполнено(ПериодПродаж) Тогда
		
		ФорматДаты = "ДФ=dd.MM.yy";
		ИнфоНадпись = НСтр("ru = '%ДатаНачала% - %ДатаОкончания%'");
		ИнфоНадпись = СтрЗаменить(ИнфоНадпись, "%ДатаНачала%", Формат(ПериодПродаж.ДатаНачала, ФорматДаты));
		ИнфоНадпись = СтрЗаменить(ИнфоНадпись, "%ДатаОкончания%", Формат(ПериодПродаж.ДатаОкончания, ФорматДаты));
		
	Иначе
		
		ИнфоНадпись = "";
		
	КонецЕсли;
	
	ИнфоНадписьПериод = ИнфоНадпись;
	
	ОбновитьОписание();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КоличествоДокументовПоСменам(Период = Неопределено)
	
	СпискиДокументов = ОбщегоНазначения.СпискиДокументовПродажИКассовыхОпераций(Период);
	
	КоличествоДокументовПоСменам = Новый Структура;
	КоличествоДокументовПоСменам.Вставить("КассовыеСмены",   СпискиДокументов.КассовыеСмены.Количество());
	КоличествоДокументовПоСменам.Вставить("Чеки",            СпискиДокументов.Чеки.Количество());
	КоличествоДокументовПоСменам.Вставить("ВыемкиИВнесения", СпискиДокументов.ВыемкиИВнесения.Количество());
	
	Возврат КоличествоДокументовПоСменам;
	
КонецФункции

&НаКлиенте
Процедура УстановитьТекущуюСтраницу()
	
	Если ВариантОчистки = "ЗаПериод" Тогда
		
		Элементы.СтраницаЗаПериод.Видимость = Истина;
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаЗаПериод;
		
		Элементы.СтраницаВыборочно.Видимость = Ложь;
		Элементы.СтраницаВсе.Видимость = Ложь;
		
	ИначеЕсли ВариантОчистки = "Выборочно" Тогда
		
		Элементы.СтраницаВыборочно.Видимость = Истина;
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВыборочно;
		
		Элементы.СтраницаЗаПериод.Видимость = Ложь;
		Элементы.СтраницаВсе.Видимость = Ложь;
		
		УстановитьДоступностьЭлементовВыборочно();
		
	ИначеЕсли ВариантОчистки = "Все" Тогда
		
		Элементы.СтраницаВсе.Видимость = Истина;
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаВсе;
		
		Элементы.СтраницаЗаПериод.Видимость = Ложь;
		Элементы.СтраницаВыборочно.Видимость = Ложь;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКнопкиУдалить()
	
	Если УдалениеЗапрещено Тогда
		Элементы.УдалитьДанные.Доступность = Ложь;
		Возврат;
	КонецЕсли;
	
	Если ВариантОчистки = "ЗаПериод" Тогда
		
		Элементы.УдалитьДанные.Доступность = ЗначениеЗаполнено(ПериодПродаж);
		
	ИначеЕсли ВариантОчистки = "Выборочно" Тогда
		
		Элементы.УдалитьДанные.Доступность = УдалитьДанныеОПродажах;
		
	ИначеЕсли ВариантОчистки = "Все" Тогда
		
		Элементы.УдалитьДанные.Доступность = Истина;
		
	Иначе
		Элементы.УдалитьДанные.Доступность = Ложь;
	КонецЕсли;
	
	КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыАдминистративныйРежим

&НаКлиенте
Процедура НастроитьДоступностьЭлементовПоАдминистративномуРежиму()
	
	Если НЕ АдминистративныйРежим Тогда
		ВариантУдаления = Ложь;
	КонецЕсли;
	
	УстановитьТекущуюСтраницу();
	УстановитьДоступностьКнопкиУдалить();
	
	СписокТолькоПросмотр = "ВариантОчистки, ПериодПродаж";
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, СписокТолькоПросмотр, "ТолькоПросмотр", НЕ АдминистративныйРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуПоАдминистративномуРежимуКлиент()
	
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	НастроитьФормуПоАдминистративномуРежиму(Истина);
	Оповестить("ИзмененАдминистративныйРежим");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоАдминистративномуРежиму(УстановитьРежим = Ложь)
	
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтаФорма, УстановитьРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьАдминистративныйРежим()
	
	НастроитьОтображениеПереключенияРежима();
	
	ПодключитьОбработчикОжидания("НастроитьФормуПоАдминистративномуРежимуКлиент", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеПереключенияРежима()
	
	Если АдминистративныйРежим Тогда
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокированоПроцесс;
	Иначе
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокировать;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти
