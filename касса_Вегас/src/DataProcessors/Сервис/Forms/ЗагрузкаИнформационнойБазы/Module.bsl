
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	ОбщегоНазначения.УстановитьЦветИнформационныхНадписей(ЭтаФорма, "ТекущаяВерсияПриложения");
	
	ТекущаяВерсияПриложения = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ТекущаяВерсияПриложения");
	
	Если Параметры.Свойство("СтрокаПодключения") Тогда 
		ЭтаФорма.РезервноеКопированиеСтрокаПодключения = Параметры.СтрокаПодключения;
	КонецЕсли;
	
	Если Параметры.Свойство("ВыгруженныеБазы") Тогда 
		
		ВыгруженныеБазыМассив = Параметры.ВыгруженныеБазы;
		
		Для Каждого ВыгруженнаяБаза Из ВыгруженныеБазыМассив Цикл
			Если ВыгруженнаяБаза.ВерсияПриложения = ТекущаяВерсияПриложения Тогда
				НоваяСтрока = ВыгруженныеБазы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыгруженнаяБаза);
			КонецЕсли;
		КонецЦикла;
		
		ВыгруженныеБазы.Сортировать("ДатаВыгрузки Убыв");
	КонецЕсли;
	
	Если ВыгруженныеБазы.Количество() = 0 Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНетДоступныхКопий;
	КонецЕсли;
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ВыгруженныеБазыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекстВопроса = НСтр("ru = 'При восстановлении информационной базы, все текущие данные будут удалены.
					|Продолжить?'");
	
	ОповещениеПослеВопросаВосстановления = Новый ОписаниеОповещения("ПослеВопросаВосстановления", ЭтотОбъект);
	ПоказатьВопрос(ОповещениеПослеВопросаВосстановления, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеВопросаВосстановления(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ВыгруженныеБазы.ТекущиеДанные;
	
	ВыбраннаяБаза = ТекущиеДанные.ИмяФайла;
	ВерсияПриложения = ТекущиеДанные.ВерсияПриложения;
	МестоХранения = ТекущиеДанные.МестоХранения;
	
	ПараметрыРезервнойКопии = Новый Структура;
	ПараметрыРезервнойКопии.Вставить("ВыбраннаяБаза",    ТекущиеДанные.ИмяФайла);
	ПараметрыРезервнойКопии.Вставить("ВерсияПриложения", ТекущиеДанные.ВерсияПриложения);
	ПараметрыРезервнойКопии.Вставить("МестоХранения",    ТекущиеДанные.МестоХранения);
	ПараметрыРезервнойКопии.Вставить("ПолноеИмя",        ТекущиеДанные.ПолноеИмя);
	
	ОписаниеПослеВосстановления = Новый ОписаниеОповещения("ПослеВосстановления", ЭтотОбъект);
	РезервноеКопированиеКлиент.ЗагрузитьБазуИзXML(ПараметрыРезервнойКопии,ОписаниеПослеВосстановления);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВосстановления(ДополнительныеПараметры) Экспорт
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти

