
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОбработатьПолученныйШтрихкод(ПолученныйШтрихкод, ДополнительныеПараметры) Экспорт
	
	ПродажиКлиент.ПолучитьНоменклатуруПоШтрихкоду(ПолученныйШтрихкод, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПолученнуюПоШтрихкодуНоменклатуру(НоменклатураПоШтрихкоду, Параметры) Экспорт
	
	Если ЗначениеНастроекВызовСервераПовтИсп.СканированиеВнешнимСканером() Тогда
		
		ДобавитьИЗаполнитьСтроку(НоменклатураПоШтрихкоду.Номенклатура, Параметры.Штрихкод, 1);
		
		Если ИдетПроцессСканирования И ЗначениеНастроекВызовСервераПовтИсп.СканированиеВнешнимСканером() Тогда
			ПодключитьОбработчикОжидания("Подключаемый_ПолучитьШтрихкод", 0.1, Истина);
		КонецЕсли;
		
		УстановитьВидимостьТаблицыТоваров();
		
	Иначе
		
		ПулТоваров.Добавить(НоменклатураПоШтрихкоду.Номенклатура, Параметры.Штрихкод);
		
	КонецЕсли;
	
КонецПроцедуры

// Возникает при сканировании внутренней камерой устройства
//
&НаКлиенте
Процедура ОбработкаЗакрытияСканирования(ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.Свойство("ПотоковоеСканирование") И ПулТоваров.Количество() > 0 Тогда
		
		Для Каждого Товар Из ПулТоваров Цикл
			ДобавитьИЗаполнитьСтроку(Товар.Значение, Товар.Представление, 1);
		КонецЦикла;
		
		ПулТоваров.Очистить();
		
	КонецЕсли;
	
	УстановитьВидимостьТаблицыТоваров();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	ОбщегоНазначения.ОформитьСуммовыеПоля(ЭтаФорма, "СписокТоваровЦена");
	
	ОбщегоНазначения.ВосстановитьНастройкуПользователя(Перечисления.НастройкиПользователя.ЭтикеткиЦенникиРежимПечати, РежимПечати);
	
	Если НЕ ЗначениеЗаполнено(РежимПечати) Тогда
		
		РежимПечати = "ПечатьЭтикеток";
		
	КонецЕсли;
	
	Если Параметры.Свойство("Номенклатура") Тогда
		ДобавитьТоварыИзПрайсЛиста(Параметры.Номенклатура);
	КонецЕсли;
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьТаблицыТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	
	ОбщегоНазначенияВызовСервера.СохранитьНастройкуПользователя("ЭтикеткиЦенникиРежимПечати", РежимПечати);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыЗначенияНастроек" Тогда
		
		НастроитьФормуПоЗначениямНастроек();
		
	КонецЕсли;
	
	Если ПодключаемоеОборудованиеКлиент.ЭтоОповещениеСканераШтрихкода(ИмяСобытия) И ВводДоступен() Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
		ОбработатьПолученныйШтрихкод(Параметр, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура СписокТоваровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыСтроки = ПолучитьПараметрыСтроки();
	
	Если НЕ ПараметрыСтроки = Неопределено Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИдентификаторСтроки", ПараметрыСтроки.ИдентификаторСтроки);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеИзменитьСтроку", ЭтотОбъект, ДополнительныеПараметры);
		
		ОткрытьФорму("Обработка.Сервис.Форма.ПечатьЭтикетокЦенниковРедактированиеСтроки", ПараметрыСтроки, ЭтаФорма,,,,ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокТоваровПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	СписокТоваровВыбор(Элемент,,,);

КонецПроцедуры

&НаКлиенте
Процедура СписокТоваровПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокТоваровПриИзменении(Элемент)
	
	УстановитьВидимостьТаблицыТоваров();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Печать(Команда)
	
	ПодключаемоеОборудованиеКлиент.РаспечататьЭтикетки(ЭтаФорма, СписокТоваров, РежимПечати);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборТоваров(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОповещениеПодборТоваров", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Режим", "ПодборБезСуммы");
	
	ОткрытьФорму("Обработка.ПодборТоваров.Форма.ФормаПодбора", ПараметрыФормы, ЭтаФорма,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СканированиеШтрихкода(Команда)
	
	ПоказатьДиалогСканирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзГруппыТоваров(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОповещениеВыборГруппы", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВыбораГруппы",, ЭтаФорма,,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКоличество(Команда)
	
	Если РежимПечати = "ПечатьЭтикеток" Тогда
		
		Подсказка = НСтр("ru = 'Количество этикеток'");
		
	Иначе
		
		Подсказка = НСтр("ru = 'Количество ценников'");
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗаголовокФормы", Подсказка);
	ПараметрыФормы.Вставить("ФорматРедактирования", "ЧЦ=10; ЧДЦ=0");
	
	Оповещение = Новый ОписаниеОповещения("ОповещениеУстановитьКоличество", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ВводЧисла", ПараметрыФормы, ЭтаФорма,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьСканер(Команда)
	
	ПодключаемоеОборудованиеКлиент.ИнициализироватьАсинхронныйСканер(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОповещениеУстановитьКоличество(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблица Из СписокТоваров Цикл
		
		СтрокаТаблица.Количество = Результат;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеИзменитьСтроку(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторСтроки = ДополнительныеПараметры.ИдентификаторСтроки;
	СтрокаТаблицы = СписокТоваров.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если Результат.Свойство("УдалитьСтроку") Тогда
		ИндексСтроки = СписокТоваров.Индекс(СтрокаТаблицы);
		СписокТоваров.Удалить(ИндексСтроки);
	ИначеЕсли Результат.Свойство("Сохранить") Тогда
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Результат);
	КонецЕсли;
	
	УстановитьВидимостьТаблицыТоваров();
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыСтроки()
	
	ТекущиеДанные = Элементы.СписокТоваров.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИдентификаторСтроки", ТекущиеДанные.ПолучитьИдентификатор());
	СтруктураПараметров.Вставить("Номенклатура",        ТекущиеДанные.Номенклатура);
	СтруктураПараметров.Вставить("Количество",          ТекущиеДанные.Количество);
	СтруктураПараметров.Вставить("Цена",                ТекущиеДанные.Цена);
	СтруктураПараметров.Вставить("Штрихкод",            ТекущиеДанные.Штрихкод);
	СтруктураПараметров.Вставить("РежимПечати",         РежимПечати);
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПолучитьШтрихкод()
	
	ПоказатьДиалогСканирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДиалогСканирования()
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	ДополнительныеПараметры.Вставить("ПотоковоеСканирование");
	ДополнительныеПараметры.Вставить("ИмяОбработчикаЗакрытияСканирования", "ОбработкаЗакрытияСканирования");
	
	ПодключаемоеОборудованиеКлиент.ПолучитьШтрихкод(ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИЗаполнитьСтроку(Номенклатура, Штрихкод = "", Количество = 1)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
	
	Если ЗначениеЗаполнено(Штрихкод) Тогда
		СтруктураПоиска.Вставить("Штрихкод", Штрихкод);
	КонецЕсли;
	
	НайденныеСтроки = СписокТоваров.НайтиСтроки(СтруктураПоиска);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		
		СтрокаЧека = СписокТоваров.Добавить();
		СтрокаЧека.Номенклатура = Номенклатура;
		СтрокаЧека.Штрихкод     = Штрихкод;
		СтрокаЧека.Количество   = Количество;
		ЗаполнитьЗначенияСвойств(СтрокаЧека, Номенклатура, "Цена, Артикул");
		
	Иначе
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			Строка.Количество = Строка.Количество + Количество;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ИспользуетсяАсинхронныйСканер = ЗначениеНастроекВызовСервераПовтИсп.ИспользуетсяАсинхронныйСканерШтрихкодов();
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "СканированиеШтрихкода", "Видимость",
		ЗначениеНастроекВызовСервераПовтИсп.ОтображатьКомандуСканированияШтрихкодаТоваров()
		И НЕ ИспользуетсяАсинхронныйСканер
	);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ДобавитьИзГруппыТоваров", "Видимость",
		ЗначениеНастроекПовтИсп.ИспользуютсяГруппыНоменклатуры());
		
	ОбщегоНазначения.УстановитьВысотуПоляНаименованиеТовара(ЭтаФорма, "СписокТоваровНоменклатура");
	
	НастроитьЭлементыАсинхронногоСканера();
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект, "ГруппаПечать", "Печать", 2);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыАсинхронногоСканера()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "АктивироватьСканер", "Видимость", 
		ИспользуетсяАсинхронныйСканер
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПодборТоваров(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		ДобавитьТоварыИзПодбора(Результат.АдресВоВременномХранилище);
		
	КонецЕсли;
	
	УстановитьВидимостьТаблицыТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеВыборГруппы(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		ДобавитьТоварыПоГруппе(Результат);
		
	КонецЕсли;
	
	УстановитьВидимостьТаблицыТоваров();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьТоварыИзПодбора(АдресВоВременномХранилище)
	
	ДанныеПодбора = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	ТаблицаПодбор = Новый ТаблицаЗначений;
	ТаблицаПодбор.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаПодбор.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
	
	Для Каждого СтрокаПодбора Из ДанныеПодбора Цикл
		СтрокаТаблицы = ТаблицаПодбор.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаПодбора, "Номенклатура, Количество");
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Подбор.Номенклатура,
	|	Подбор.Количество
	|ПОМЕСТИТЬ Подбор
	|ИЗ
	|	&Подбор КАК Подбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Подбор.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	Подбор.Количество КАК Количество
	|ИЗ
	|	Подбор КАК Подбор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Подбор.Номенклатура = Штрихкоды.Номенклатура";
	
	Запрос.УстановитьПараметр("Подбор", ТаблицаПодбор);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДобавитьИЗаполнитьСтроку(Выборка.Номенклатура, Выборка.Штрихкод, Выборка.Количество);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьТоварыПоГруппе(ГруппаТоваров)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТоварыПоГруппе
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Родитель В ИЕРАРХИИ(&Родитель)
	|	И НЕ Номенклатура.ЭтоГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПоГруппе.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	ТоварыПоГруппе.Количество КАК Количество
	|ИЗ
	|	ТоварыПоГруппе КАК ТоварыПоГруппе
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ТоварыПоГруппе.Номенклатура = Штрихкоды.Номенклатура";
	
	Запрос.УстановитьПараметр("Родитель", ГруппаТоваров);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДобавитьИЗаполнитьСтроку(Выборка.Номенклатура, Выборка.Штрихкод, Выборка.Количество);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьТоварыИзПрайсЛиста(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	1 КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Ссылка
	|	И НЕ Номенклатура.ЭтоГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	Товары.Количество КАК Количество
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДобавитьИЗаполнитьСтроку(Выборка.Номенклатура, Выборка.Штрихкод, Выборка.Количество);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьТаблицыТоваров()
	
	Если СписокТоваров.Количество() = 0 Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПустышка;
		Элементы.Печать.Доступность = Ложь;
	Иначе
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаСписокТоваров;
		Элементы.Печать.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти
