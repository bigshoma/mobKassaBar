
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	
	НастроитьПоляФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаблокироватьФорму();
	
	ОтобразитьСтраницуПолучениеПараметров();
	ПодключитьОбработчикОжидания("Подключаемый_ПараметрыККТ", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	
	Если НЕ ДоступноЗакрытиеФормы Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьЕщеРаз(Команда)
	
	ЗаблокироватьФорму();
	
	ОтобразитьСтраницуПолучениеПараметров();
	ПодключитьОбработчикОжидания("Подключаемый_ПараметрыККТ", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ПараметрыККТ()
	
	ЕстьОшибки = Ложь;
	
	ОчиститьСообщения();
	
	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;
	
	ЛогированиеКлиентСервер.ЗаписатьСобытие("ПолучениеПараметровККТ");
	
	Если НЕ МенеджерОборудованияКлиент.ВыполнитьПолучениеПараметровФискальногоУстройства(
		ПодключаемоеОборудованиеКлиент.ИдентификаторКлиентаОборудования(), ОборудованиеПечати, ВходныеПараметры, ВыходныеПараметры) Тогда
		
		ОтобразитьОшибку(ВыходныеПараметры.ТекстОшибки);
		
		ЕстьОшибки = Истина;
		
		ЛогированиеКлиентСервер.ЗаписатьСобытие("ПолучениеПараметровККТ", "Ошибка - " + ВыходныеПараметры.ТекстОшибки);
	КонецЕсли;
	
	Если НЕ ЕстьОшибки Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ВыходныеПараметры);
		
		ОтобразитьСтраницуУспешно();
		
		
		РазблокироватьФорму();
		
	КонецЕсли;
	
КонецПроцедуры

#Область ОтображениеСтраниц

&НаКлиенте
Процедура ОтобразитьОшибку(ОписаниеОшибки)
	
	ТекстОшибки = ОписаниеОшибки;
	
	РазблокироватьФорму();
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаОшибка;
	
	Элементы.СтраницаУспешно.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСтраницуПолучениеПараметров()
	
	Элементы.СтраницаУспешно.Видимость = Ложь;
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаПолучениеПараметров;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСтраницуУспешно()
	
	Элементы.СтраницаУспешно.Видимость = Истина;
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаУспешно;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
	ОборудованиеПечати = ЗначениеНастроекВызовСервераПовтИсп.ОборудованиеПечати();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПоляФормы()
	
	ОбщегоНазначения.УстановитьЦветПолейОшибок(ЭтаФорма,
		"НадписьОшибка"
	);
	
	ОбщегоНазначения.УстановитьЦветПолейУспешныхОпераций(ЭтаФорма,
		"НадписьУспешно"
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаблокироватьФорму()
	
	ДоступноЗакрытиеФормы = Ложь;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Закрыть", "Доступность",
		Ложь);

КонецПроцедуры

&НаКлиенте
Процедура РазблокироватьФорму()
	
	ДоступноЗакрытиеФормы = Истина;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Закрыть", "Доступность",
		Истина);

КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти

