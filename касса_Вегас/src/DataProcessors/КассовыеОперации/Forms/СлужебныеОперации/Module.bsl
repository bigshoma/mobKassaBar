
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	
	ОбщегоНазначения.ОформитьСуммовыеПоля(ЭтотОбъект, "Сумма");
	
	ОбщегоНазначения.УстановитьЦветИнформационныхНадписей(ЭтотОбъект,
		"ЗаголовокПодсказка
		|"
	);
	
	// АдминистративныйРежим
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененАдминистративныйРежим" Тогда
		// АдминистративныйРежим
		НастроитьФормуПоАдминистративномуРежиму();
		НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	
	ПодключаемоеОборудованиеКлиент.ОтключитьОборудование(ОборудованиеПечати);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьСмену(Команда)
	
	ВходныеПараметры  = Новый Структура();
	ВыходныеПараметры = Неопределено;
	
	ЛогированиеКлиентСервер.ЗаписатьСобытие("ОткрытьСменуККТ");
	
	Если МенеджерОборудованияКлиент.ВыполнитьОткрытиеСменыНаФискальномУстройстве(
		УникальныйИдентификатор,
		ОборудованиеПечати,
		ВходныеПараметры,
		ВыходныеПараметры) Тогда
		
		ПомощникUIКлиент.ПоказатьСообщение(НСтр("ru = 'Кассовая смена на ККТ открыта'"));
	Иначе
		
		ЛогированиеКлиентСервер.ЗаписатьСобытие("ОткрытьСменуККТ", "Ошибка - " + ВыходныеПараметры.ТекстОшибки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ВыходныеПараметры.ТекстОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСмену(Команда)
	
	ВходныеПараметры  = Новый Структура();
	ВыходныеПараметры = Неопределено;
	
	ЛогированиеКлиентСервер.ЗаписатьСобытие("ЗакрытьСменуККТ");
	
	Если МенеджерОборудованияКлиент.ВыполнитьЗакрытиеСменыНаФискальномУстройстве(
		УникальныйИдентификатор,
		ОборудованиеПечати,
		ВходныеПараметры,
		ВыходныеПараметры) Тогда
		
		ПомощникUIКлиент.ПоказатьСообщение(НСтр("ru = 'Кассовая смена на ККТ закрыта'"));
	Иначе
		
		ЛогированиеКлиентСервер.ЗаписатьСобытие("ЗакрытьСменуККТ", "Ошибка - " + ВыходныеПараметры.ТекстОшибки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ВыходныеПараметры.ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьАдминистративныйРежим(Команда)
	
	Если НЕ АдминистративныйРежим
		И ОбщегоНазначенияВызовСервера.УстановленПарольАдминистративногоРежима() Тогда
		
		ОбщегоНазначенияКлиент.ОткрытьФормуПереключенияАдминистративногоРежима(ЭтотОбъект);
		
		Возврат;
	КонецЕсли;
	
	АдминистративныйРежим = НЕ АдминистративныйРежим;
	
	ИзменитьАдминистративныйРежим();
	
КонецПроцедуры

&НаКлиенте
Процедура ВнестиНаличные(Команда)
	
	ВнестиИзъятьНаличные(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзъятьНаличные(Команда)
	
	ВнестиИзъятьНаличные(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВнестиИзъятьНаличные(ЭтоВнесение = Истина)
	
	Если НЕ ЗначениеЗаполнено(Сумма) Тогда
		
		ПомощникUIКлиент.СообщитьПолеНеЗаполнено(ЭтотОбъект, Элементы.Сумма, НСтр("ru = 'Сумма'"));
		
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ТекстОшибки = "";
	
	Успешно = ПродажиКлиент.ВыполнитьВнесениеВыемку(ЭтоВнесение, Сумма, ТекстОшибки);
	
	Если НЕ Успешно Тогда
			
		Сообщить(ТекстОшибки);
	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтотОбъект);
	
	ОборудованиеПечати = ЗначениеНастроекВызовСервераПовтИсп.ОборудованиеПечати();
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокировать", "АдминистративныйРежимРазблокировать",, Ложь
	);
	
	ОбщегоНазначения.НастроитьКомандуГотово(ЭтотОбъект,
		"ГруппаРазблокированоПроцесс", "АдминистративныйРежимРазблокированоПроцесс",, Ложь
	);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыАдминистративныйРежим

&НаКлиенте
Процедура НастроитьДоступностьЭлементовПоАдминистративномуРежиму()
	
	СписокДоступность = "ОткрытьСмену,
		|ЗакрытьСмену,
		|ГруппаНаличные
		|";
	
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(
		ЭтаФорма,
		СписокДоступность,
		"Доступность",
		АдминистративныйРежим
	);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуПоАдминистративномуРежимуКлиент()
	
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	НастроитьФормуПоАдминистративномуРежиму(Истина);
	Оповестить("ИзмененАдминистративныйРежим");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоАдминистративномуРежиму(УстановитьРежим = Ложь)
	
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтаФорма, УстановитьРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьАдминистративныйРежим()
	
	НастроитьОтображениеПереключенияРежима();
	
	ПодключитьОбработчикОжидания("НастроитьФормуПоАдминистративномуРежимуКлиент", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеПереключенияРежима()
	
	Если АдминистративныйРежим Тогда
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокированоПроцесс;
	Иначе
		
		Элементы.СтраницыАдминистративныйРежим.ТекущаяСтраница = Элементы.СтраницаРазблокировать;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

