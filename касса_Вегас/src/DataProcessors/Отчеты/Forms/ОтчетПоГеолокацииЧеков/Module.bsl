
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьФормуПоЗначениямНастроек();
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
	ОбщегоНазначения.ВосстановитьНастройкуПользователя(Перечисления.НастройкиПользователя.ОтчетГеоВариант, ВариантОтчета);
	ОбщегоНазначения.ВосстановитьНастройкуПользователя(Перечисления.НастройкиПользователя.ОтчетГеоПериод, Период);
	ОбщегоНазначения.ВосстановитьНастройкуПользователя(Перечисления.НастройкиПользователя.ОтчетГеоПоГоризонтали, ПоВертикалиГоризонтали);
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период.Вариант = ВариантСтандартногоПериода.Сегодня;
	КонецЕсли;
	
	Кассир = ПараметрыСеанса.ТекущийПользователь;
	КассоваяСмена = Продажи.ПолучитьКассовуюСменуДляОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеКлиент Тогда
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	#КонецЕсли
	
	ОбщегоНазначенияВызовСервера.СохранитьНастройкуПользователя("ОтчетГеоВариант", ВариантОтчета);
	ОбщегоНазначенияВызовСервера.СохранитьНастройкуПользователя("ОтчетГеоПериод", Период);
	ОбщегоНазначенияВызовСервера.СохранитьНастройкуПользователя("ОтчетГеоПоГоризонтали", ПоВертикалиГоризонтали);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьКнопкиПоВертикалиГоризонтали();
	
	ПриСменеВарианта();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ОповещениеВыборПериода", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура("Период, СкрытьОтменить", Период, Истина);
	ОткрытьФорму("ОбщаяФорма.НастройкаПериода", ПараметрыФормы,,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура КассирПриИзменении(Элемент)
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КассоваяСменаПриИзменении(Элемент)
	
	СформироватьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьПоEmail(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		СтруктураПисьма = ПолучитьСтруктуруПисьма();
		
		РаботаСПочтойКлиент.ОтправитьОтчет(СтруктураПисьма);
		
	#Иначе
		
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru = 'Операция доступна только из мобильного приложения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	Результат.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВертикали(Команда)
	
	ПоВертикалиГоризонтали = 0;
	НастроитьКнопкиПоВертикалиГоризонтали();
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоГоризонтали(Команда)
	
	ПоВертикалиГоризонтали = 1;
	НастроитьКнопкиПоВертикалиГоризонтали();
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаКассовуюСмену(Команда)
	
	ВариантОтчета = ВариантЗаКассовуюСмену();
	
	ПриСменеВарианта();
КонецПроцедуры

&НаКлиенте
Процедура ЗаПериод(Команда)
	
	ВариантОтчета = ВариантЗаПериод();
	
	ПриСменеВарианта();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьМестоположениеЧековНаКарте(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		СписокКоординат = СписокКоординатЧеков();
		
		Если СписокКоординат.Количество() = 0 Тогда
			
			ТекстОшибки = НСтр("ru = 'Нет данных для отображения'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			
		Иначе
			ПоказатьНаКарте(СписокКоординат);
		КонецЕсли;
		
	#Иначе
		
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru = 'Операция доступна только из мобильного приложения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьАдреса(Команда)
	
	ОбновитьАдресаПродолжение = Новый ОписаниеОповещения("ОбновитьАдресаПродолжение", ЭтотОбъект);
	ТекстСообщения = НСтр("ru = 'Обновить адреса чеков по значениям координат?
		|(необходимо подключение к интернету)'");
	
	ПоказатьВопрос(ОбновитьАдресаПродолжение, ТекстСообщения,РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьАдресаПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьАдресаЧеков();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьАдресаЧеков()
	
	КоличествоОбновленныхЧеков = 0;
	
	Для Каждого Чек Из ТаблицаЧеков Цикл
		
		Если НЕ ЗначениеЗаполнено(Чек.Адрес)
			И (ЗначениеЗаполнено(Чек.КоординатыДолгота) И ЗначениеЗаполнено(Чек.КоординатыШирота)) Тогда
			
			ПредставлениеАдреса = ГеолокацияКлиент.ПолучитьПредставлениеАдресаМестоположения(, Чек.КоординатыШирота, Чек.КоординатыДолгота);
			
			Если ЗначениеЗаполнено(ПредставлениеАдреса) Тогда
				ЗаписатьЧек(Чек.Ссылка, ПредставлениеАдреса);
				КоличествоОбновленныхЧеков = КоличествоОбновленныхЧеков + 1;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	ТекстСообщения = НСтр("ru = 'Обновлено чеков: %количество%'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%количество%", КоличествоОбновленныхЧеков);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
	СформироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЧек(Ссылка, ПредставлениеАдреса)
	
	ЧекОбъект = Ссылка.ПолучитьОбъект();
	ЧекОбъект.ПредставлениеАдресаМестоположения = ПредставлениеАдреса;
	ЧекОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Функция СписокКоординатЧеков()
	
	СписокКоординат = Новый СписокЗначений;
	
	Для Каждого Чек Из ТаблицаЧеков Цикл
		
		Если ЗначениеЗаполнено(Чек.КоординатыДолгота) И ЗначениеЗаполнено(Чек.КоординатыШирота) Тогда
			
			ГеоКоординаты = Новый ГеографическиеКоординаты(Чек.КоординатыШирота, Чек.КоординатыДолгота);
			СписокКоординат.Добавить(ГеоКоординаты, ОбщегоНазначенияКлиентСервер.ПредставлениеНомера(Чек.Номер));
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокКоординат;
	
КонецФункции

&НаКлиенте
Процедура ПриСменеВарианта()
	
	НастроитьКнопкиВариантовОтчета();
	
	УстановитьСтраницуОтбора();
	СформироватьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуОтбора()
	
	Если ВариантОтчета = ВариантЗаКассовуюСмену() Тогда
		
		Элементы.СтраницаЗаКассовуюСмену.Видимость = Истина;
		Элементы.СтраницыОтборыПоВарианту.ТекущаяСтраница = Элементы.СтраницаЗаКассовуюСмену;
		Элементы.СтраницаЗаПериод.Видимость = Ложь;
		
	Иначе
		
		Элементы.СтраницаЗаПериод.Видимость = Истина;
		Элементы.СтраницыОтборыПоВарианту.ТекущаяСтраница = Элементы.СтраницаЗаПериод;
		Элементы.СтраницаЗаКассовуюСмену.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьКнопкиПоВертикалиГоризонтали()
	
	Если ПоВертикалиГоризонтали = 0 Тогда
		
		
		ОбщегоНазначенияКлиентСервер.УстановитьПометкуКнопки(Элементы.ПоВертикали);
		ОбщегоНазначенияКлиентСервер.СнятьПометкуКнопки(Элементы.ПоГоризонтали);
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьПометкуКнопки(Элементы.ПоГоризонтали);
		ОбщегоНазначенияКлиентСервер.СнятьПометкуКнопки(Элементы.ПоВертикали);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьКнопкиВариантовОтчета()
	
	Если ВариантОтчета = ВариантЗаКассовуюСмену() Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьПометкуКнопки(Элементы.ЗаКассовуюСмену);
		ОбщегоНазначенияКлиентСервер.СнятьПометкуКнопки(Элементы.ЗаПериод);
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьПометкуКнопки(Элементы.ЗаПериод);
		ОбщегоНазначенияКлиентСервер.СнятьПометкуКнопки(Элементы.ЗаКассовуюСмену);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруПисьма()
	
	СтруктураПисьма = РаботаСПочтойКлиент.СтруктураПисьмаОтчета();
	
	СтруктураПисьма.ТемаПисьма  = ПолучитьТемуПисьма();
	СтруктураПисьма.ТекстПисьма = ОбщегоНазначенияКлиентСервер.ПолучитьТекстДатаФормированияОтчета(ДатаФормирования);
	
	ЗаписанныйФайл = РаботаСПочтойКлиент.ЗаписатьТабДокВФайлПисьма(Результат, СтруктураПисьма.ТемаПисьма);
	
	РаботаСПочтойКлиент.ДобавитьЗаписанныйФайлВоВложениеПисьма(СтруктураПисьма, ЗаписанныйФайл);
	
	Возврат СтруктураПисьма;
	
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
	
	ТаблицаЧеков.Очистить();
	Результат.Очистить();
	
	Если ВариантОтчета = ВариантЗаПериод() Тогда
		
		Если Не ЗначениеЗаполнено(Период) Тогда
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ВариантОтчета = ВариантЗаКассовуюСмену() Тогда
		
		Если Не ЗначениеЗаполнено(КассоваяСмена) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьТаблицуЧеков();
	
	МакетОтчета = Обработки.Отчеты.ПолучитьМакет("ОтчетПоГеолокацииЧеков");
	
	ПустаяСтрока = МакетОтчета.ПолучитьОбласть("ПустаяСтрока");
	Результат.Вывести(ПустаяСтрока);
	
	#Область ЗаголовокОтчета
	
	Если ВариантОтчета = ВариантЗаПериод() Тогда
		
		Если ПоВертикалиГоризонтали = 0 Тогда
			ЗаголовокОтчета = МакетОтчета.ПолучитьОбласть("ЗаголовокПериодВертикальный");
		Иначе
			ЗаголовокОтчета = МакетОтчета.ПолучитьОбласть("ЗаголовокПериод");
		КонецЕсли;
		
		ЗаголовокОтчета.Параметры.ДатаС  = Формат(Период.ДатаНачала,    "ДЛФ=D");
		ЗаголовокОтчета.Параметры.ДатаПо = Формат(Период.ДатаОкончания, "ДЛФ=D");
		
	Иначе // за кассовую смену
		
		Если ПоВертикалиГоризонтали = 0 Тогда
			ЗаголовокОтчета = МакетОтчета.ПолучитьОбласть("ЗаголовокКассоваяСменаВертикальный");
		Иначе
			ЗаголовокОтчета = МакетОтчета.ПолучитьОбласть("ЗаголовокКассоваяСмена");
		КонецЕсли;
		
		ЗаголовокОтчета.Параметры.Номер  = ОбщегоНазначенияКлиентСервер.ПредставлениеНомера(КассоваяСмена.Номер);
		ЗаголовокОтчета.Параметры.Дата   = Формат(КассоваяСмена.Дата, "ДФ=dd.MM.yyyy; ДЛФ=D");
		
	КонецЕсли;
	
	Результат.Вывести(ЗаголовокОтчета);
	Результат.Вывести(ПустаяСтрока);
	
	#КонецОбласти //ЗаголовокОтчета

	#Область ШапкаТаблицы
	
	Если ПоВертикалиГоризонтали = 0 Тогда
		Шапка = МакетОтчета.ПолучитьОбласть("ШапкаВертикальная");
	Иначе
		Шапка = МакетОтчета.ПолучитьОбласть("Шапка");
	КонецЕсли;
	
	Результат.Вывести(Шапка);
	
	#КонецОбласти //ШапкаТаблицы

	#Область СтрокиТаблицыПродажи
	
	Если ПоВертикалиГоризонтали = 0 Тогда
		Строка = МакетОтчета.ПолучитьОбласть("СтрокаВертикальная");
		СтрокаЦвет = МакетОтчета.ПолучитьОбласть("СтрокаВертикальнаяЦвет");
	Иначе
		Строка = МакетОтчета.ПолучитьОбласть("Строка");
		СтрокаЦвет = МакетОтчета.ПолучитьОбласть("СтрокаЦвет");
	КонецЕсли;
	
	НомерСтроки = 1;
	
	Для Каждого СтрокаОтчета Из ТаблицаЧеков Цикл
		
		Если НомерСтроки % 2 = 0 Тогда
			СтрокаМакета = СтрокаЦвет;
		Иначе
			СтрокаМакета = Строка;
		КонецЕсли;
		
		СтрокаМакета.Параметры.Заполнить(СтрокаОтчета);
		
		Если ЗначениеЗаполнено(СтрокаОтчета.КоординатыШирота) И ЗначениеЗаполнено(СтрокаОтчета.КоординатыДолгота) Тогда
			
			СтрокаМакета.Параметры.Координаты = ГеолокацияКлиентСервер.ПолучитьПредставлениеКоординат(
				СтрокаОтчета.КоординатыШирота, СтрокаОтчета.КоординатыДолгота);
		Иначе
			СтрокаМакета.Параметры.Координаты = "";
		КонецЕсли;
		
		СтрокаМакета.Параметры.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
		
		Результат.Вывести(СтрокаМакета);
	КонецЦикла;
	
	#КонецОбласти //СтрокиТаблицыПродажи
	
	#Область Кассир
	
	КассирВОтчет = Неопределено;
	
	Если ВариантОтчета = ВариантЗаПериод() Тогда
		КассирВОтчет = Кассир;
	Иначе
		КассирВОтчет = КассоваяСмена.Кассир;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КассирВОтчет) Тогда
		
		ПодвалКассир = МакетОтчета.ПолучитьОбласть("ПодвалКассир");
		ПодвалКассир.Параметры.Кассир = КассирВОтчет;
		Результат.Вывести(ПодвалКассир);
	КонецЕсли;
	
	#КонецОбласти //Кассир
	
	ДатаФормирования = ОбщегоНазначенияКлиентСервер.ПолучитьТекущуюДату();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуЧеков()
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Чек.Ссылка КАК Ссылка,
	|	Чек.КоординатыДолгота КАК КоординатыДолгота,
	|	Чек.КоординатыШирота КАК КоординатыШирота,
	|	Чек.ПредставлениеАдресаМестоположения КАК Адрес,
	|	Чек.Дата КАК Дата,
	|	Чек.Номер КАК Номер
	|ИЗ
	|	Документ.Чек КАК Чек
	|ГДЕ
	|	Чек.Ссылка.СтатусЧека В (ЗНАЧЕНИЕ(Перечисление.СтатусыЧеков.Пробит), ЗНАЧЕНИЕ(Перечисление.СтатусыЧеков.Архивный))
	|	%Условие%
	|	%УсловиеКассир%
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Если ВариантОтчета = ВариантЗаКассовуюСмену() Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Условие%", "И Чек.КассоваяСмена = &КассоваяСмена");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеКассир%", "");
		Запрос.УстановитьПараметр("КассоваяСмена", КассоваяСмена);
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Условие%", "И Чек.Дата МЕЖДУ &ДатаС И &ДатаПо");
		Запрос.УстановитьПараметр("ДатаС", Период.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаПо", Период.ДатаОкончания);
		
		Если ЗначениеЗаполнено(Кассир) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеКассир%", "И Чек.КассоваяСмена.Кассир = &Кассир");
			Запрос.УстановитьПараметр("Кассир", Кассир);
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%УсловиеКассир%", "");
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаЧеков.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеВыборПериода(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ТипЗнч(Результат) = Тип("СтандартныйПериод") Тогда
		Возврат;
	КонецЕсли;
	
	Период = Результат;
	СформироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТемуПисьма()
	
	
	Если ВариантОтчета = ВариантЗаПериод() Тогда
	
		ШаблонТемыПисьма = НСтр("ru = '[1С:МК] Геолокация чеков с %ДатаС% по %ДатаПо%'");
	
		ТемаПисьма = СтрЗаменить(ШаблонТемыПисьма, "%ДатаС%", Формат(Период.ДатаНачала, "ДЛФ=D"));
		ТемаПисьма = СтрЗаменить(ТемаПисьма, "%ДатаПо%", Формат(Период.ДатаОкончания, "ДЛФ=D"));
	Иначе
		
		ШаблонТемыПисьма = НСтр("ru = '[1С:МК] Геолокация за кассовую смену %Номер% от %Дата%'");
		
		ТемаПисьма = СтрЗаменить(ШаблонТемыПисьма, "%Номер%", ОбщегоНазначенияКлиентСервер.ПредставлениеНомера(КассоваяСмена.Номер));
		ТемаПисьма = СтрЗаменить(ТемаПисьма, "%Дата%", Формат(КассоваяСмена.Дата, "ДФ=dd.MM.yyyy; ДЛФ=D"));
		
	КонецЕсли;
		
	Возврат ТемаПисьма;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВариантЗаКассовуюСмену()
	
	ВариантЗаКассовуюСмену = 0;
	
	Возврат ВариантЗаКассовуюСмену;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВариантЗаПериод()
	
	ВариантЗаПериод = 1;
	
	Возврат ВариантЗаПериод;
КонецФункции

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры

#КонецОбласти


