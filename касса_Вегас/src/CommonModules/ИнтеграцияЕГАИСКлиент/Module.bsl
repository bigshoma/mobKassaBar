
#Область ПрограммныйИнтерфейс

// Обрабатывает ответы из транспортного модуля.
//
// Параметры:
//  ТранспортныйМодуль      - Структура - модуль обработки ответов,
//  ОтображатьСообщения     - Булево - если Истина, то пользователю будут отображены сообщения с ошибками,
//  ДополнительныеПараметры - Произвольный - параметры прикладной конфигурации.
//
// Возвращаемое значение:
//   Структура - результат обработки ответов.
//
Функция ОбработатьОтветыИзЕГАИС(ОтображатьСообщения = Истина, ДополнительныеПараметры = Неопределено) Экспорт
	
	Результат = ИнтеграцияЕГАИСКлиентСервер.ОбработатьОтветыИзУТМ(ОтображатьСообщения, ДополнительныеПараметры);
	
	Если НЕ Результат.Результат Тогда
		Возврат ЗавершитьОперациюСОшибкой(Результат, ОтображатьСообщения);
	КонецЕсли;
	
	Оповестить("ОбновитьСписокТТН_ЕГАИС", Результат.ДокументыТТН);
	
	Возврат Результат;
	
КонецФункции

// Загружает новые ТТН из транспортного модуля.
//
// Параметры:
//  ТранспортныйМодуль      - Структура - данные транспортного модуля, из которого требуется загрузить ТТН,
//  ОтображатьСообщения     - Булево - если Истина, то пользователю будут отображены сообщения с ошибками,
//  ДополнительныеПараметры - Произвольный - параметры прикладной конфигурации.
//
// Возвращаемое значение:
//   Структура - результат загрузки ТТН.
//
Функция ЗагрузитьТТН(ОтображатьСообщения = Истина, ДополнительныеПараметры = Неопределено) Экспорт
	
	Результат = ИнтеграцияЕГАИСКлиентСервер.ЗагрузитьДокументыИзУТМ("/WAYBILL/,/FORMBREGINFO/", ОтображатьСообщения, ДополнительныеПараметры);
	
	Если НЕ Результат.Результат Тогда
		Возврат ЗавершитьОперациюСОшибкой(Результат, ОтображатьСообщения);
	КонецЕсли;
	
	Оповестить("ОбновитьСписокТТН_ЕГАИС", Результат.ДокументыТТН);
	Возврат Результат;
	
КонецФункции

// Выгружает акт подтверждения ТТН.
//
// Параметры:
//  Параметры           - Структура - Состав:
//     ТТН            - ДокументСсылка.ТоварноТранспортнаяНакладнаяЕГАИС - ссылка на загруженную ранее ТТН,
//     Отказ          - Булево - признак отказа от ТТН,
//     ТаблицаТоваров - Массив - массив строк с фактическим количеством.
//                               При отсутствии расхождений или в случае отказа от ТТН, массив не содержит элементов.
//                               Элемент массива - структура с ключами:
//         ИдентификаторСтроки - Строка - идентификатор строки ТТН,
//         КоличествоФакт      - Число  - фактически принятое количество,
//         НомерСправкиБ       - Строка - регистрационный номер справки "Б".
//     Номер          - Строка - номер акта подтверждения,
//     Дата           - Дата   - дата акта подтверждения.
//  ТранспортныйМодуль  - Структура - модуль ТМ, в котором требуется подтвердить ТТН,
//  ОтображатьСообщения - Булево - если Истина, то пользователю будут отображены сообщения с ошибками.
//
// Возвращаемое значение:
//   Структура - результат загрузки ТТН.
//
Функция ВыгрузитьАктПодтвержденияТТН(ДанныеДляВыгрузки) Экспорт
	
	Результат = Новый Структура("Результат, ОписаниеОшибки", Ложь, "");
	
	Если НЕ ДанныеДляВыгрузки.Свойство("Отказ") Тогда
		ДанныеДляВыгрузки.Вставить("Отказ", Ложь);
	КонецЕсли;
	
	ВидОбъекта = ПредопределенноеЗначение("Справочник.ВидыОбъектовЕГАИС.АктПодтвержденияТТН");
	
	Результат = ИнтеграцияЕГАИСКлиентСервер.СформироватьЗапросВУТМ(ВидОбъекта, ДанныеДляВыгрузки);
	
	Возврат ?(Результат.Результат, Результат, ЗавершитьОперациюСОшибкой(Результат));
	
КонецФункции

// Отменяет чек в ТМ ЕГАИС.
//
// Параметры:
//  ТранспортныйМодуль  - Структура - данные транспортного модуля, в котором требуется отменить чек,
//  ПараметрыЧекаЕГАИС  - Структура - данные, необходимые для отмены чека,
//  ТаблицаТоваров      - Массив    - строки отменяемого чека,
//  ТекстОшибки         - Строка    - в переменную запишется текст ошибки при неудачной отмене чека.
//
Процедура ОтменитьЧекВУТМ(ПараметрыЧекаЕГАИС, ТаблицаТоваров, ТекстОшибки = "") Экспорт
	
	ЧекНаВозврат = ПараметрыЧекаЕГАИС.Свойство("Возврат") И ПараметрыЧекаЕГАИС.Возврат;
	
	ПараметрыЧекаЕГАИС.Вставить("Возврат", НЕ ЧекНаВозврат);
	
	РезультатОперации = ИнтеграцияЕГАИСКлиентСервер.ПолучитьЭлектроннуюПодписьЧекаВУТМ(ПараметрыЧекаЕГАИС, ТаблицаТоваров);
	
	ПараметрыЧекаЕГАИС.Вставить("Возврат", ЧекНаВозврат);
	
	Если НЕ РезультатОперации.Результат Тогда
		ТекстОшибки = НСтр("ru='Ошибка получения электронной подписи возвратного чека ЕГАИС.'")
												+ Символы.ПС + РезультатОперации.ОписаниеОшибки;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Прекращает выполнение текущей операции с оборудованием с ошибкой и возвращает структуру с ошибкой.
//
// Параметры:
//  Результат           - Структура - результат выполнения текущей операции с оборудованием,
//  ОтображатьСообщения - Булево    - если Истина, то пользователю будут отображены сообщения с ошибками,
//  ТекстОшибки         - Строка    - описание ошибки.
//
// Возвращаемое значение:
//   Структура - информация об ошибке.
//
Функция ЗавершитьОперациюСОшибкой(Результат = Неопределено, ОтображатьСообщения = Истина, ТекстОшибки = "")
	
	Если Результат = Неопределено Тогда
		Результат = Новый Структура("Результат, ОписаниеОшибки", Ложь, "");
	Иначе
		Результат.Результат = Ложь;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		Результат.ОписаниеОшибки = ТекстОшибки + ?(ПустаяСтрока(Результат.ОписаниеОшибки), "", Символы.ПС + Результат.ОписаниеОшибки);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Результат.ОписаниеОшибки) И ОтображатьСообщения Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ОписаниеОшибки);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
