
#Область ПрограммныйИнтерфейс

Функция ПодготовитьВходящиеДанныеДляПодписиЧека(Чек) Экспорт
	
	ВходящиеДанные = СтруктураДанныхЧекаККМ();
	
	ВыгружатьНемаркируемуюПродукцию = ЗначениеНастроекВызовСервераПовтИсп.ВыгружатьПродажиНемаркируемойПродукцииВЕГАИС();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЧекТовары.Ссылка КАК Ссылка,
		|	ЧекТовары.КлючСвязи КАК КлючСвязи,
		|	ЧекТовары.НомерСтроки КАК НомерСтроки,
		|	ЧекТовары.Количество КАК Количество,
		|	ЧекТовары.НеобходимостьВводаАкцизнойМарки КАК НеобходимостьВводаАкцизнойМарки,
		|	ЧекТовары.НеобходимостьШтрихкодаПриПродаже КАК НеобходимостьШтрихкодаПриПродаже,
		|	ЧекТовары.Номенклатура КАК Номенклатура,
		|	ЧекТовары.СкидкаНаценкаПроцент КАК СкидкаНаценкаПроцент,
		|	ЧекТовары.СкидкаНаценкаСумма КАК СкидкаНаценкаСумма,
		|	ЧекТовары.СтавкаНДС КАК СтавкаНДС,
		|	ЧекТовары.Сумма КАК Сумма,
		|	ЧекТовары.СуммаНДС КАК СуммаНДС,
		|	ЧекТовары.Цена КАК Цена,
		|	ЧекТовары.Штрихкод КАК Штрихкод,
		|	ЧекТовары.ЦенаСУчетомСкидки КАК ЦенаСУчетомСкидки,
		|	ЧекТовары.Номенклатура.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ЧекТовары.Номенклатура.Наименование КАК НоменклатураНаименование,
		|	ЧекТовары.Номенклатура.ОбъемАлкогольнойПродукции КАК ОбъемАлкогольнойПродукции,
		|	ЧекТовары.Номенклатура.Крепость КАК Крепость,
		|	ЧекТовары.Номенклатура.КодВидаАлкогольнойПродукции КАК КодВидаАлкогольнойПродукции
		|ИЗ
		|	Документ.Чек.Товары КАК ЧекТовары
		|ГДЕ
		|	ЧекТовары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЧекМарки.Ссылка КАК Ссылка,
		|	ЧекМарки.НомерСтроки КАК НомерСтроки,
		|	ЧекМарки.КлючСвязи КАК КлючСвязи,
		|	ЧекМарки.КодМаркировки КАК КодМаркировки
		|ИЗ
		|	Документ.Чек.Марки КАК ЧекМарки
		|ГДЕ
		|	ЧекМарки.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Чек);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	АкцизныеМарки = РезультатЗапроса[1].Выгрузить();
	
	Выборка = РезультатЗапроса[0].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.АлкогольнаяПродукция Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ Выборка.НеобходимостьВводаАкцизнойМарки И НЕ ВыгружатьНемаркируемуюПродукцию Тогда
			Продолжить;
		КонецЕсли;
		
		Наименование = СокрЛП(Выборка.НоменклатураНаименование);
		
		Если НЕ Выборка.СкидкаНаценкаСумма = 0 Тогда
			Цена = Окр(Выборка.Сумма / Выборка.Количество, 2);
		Иначе
			Цена = Выборка.Цена;
		КонецЕсли;
		
		ШтрихкодТовара = Выборка.Штрихкод;
		Объем          = Выборка.ОбъемАлкогольнойПродукции;
		
		Если Выборка.НеобходимостьВводаАкцизнойМарки Тогда
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("КлючСвязи", Выборка.КлючСвязи);
			СтрокиМарок = АкцизныеМарки.НайтиСтроки(СтруктураОтбора);
			
			МассивМарок = Новый Массив;
			
			Для Каждого Марки Из СтрокиМарок Цикл
				
				СтрокаЧека = СтруктураДанныхСтрокиЧекаККМ();
				СтрокаЧека.Наименование = Наименование;
				СтрокаЧека.Количество   = 1;
				СтрокаЧека.Цена = Цена;
				
				СтрокаЧека.ШтрихкодМарки  = Марки.КодМаркировки;
				СтрокаЧека.ШтрихкодТовара = ШтрихкодТовара;
				СтрокаЧека.Объем          = Объем;
				
				ВходящиеДанные.ТаблицаТоваров.Добавить(СтрокаЧека);
				
			КонецЦикла;
			
		Иначе //deprecated
			
			СтрокаЧека = СтруктураДанныхСтрокиЧекаККМ();
			
			СтрокаЧека.Наименование = Наименование;
			СтрокаЧека.Количество   = Выборка.Количество;
			СтрокаЧека.Цена         = Цена;
			
			СтрокаЧека.ШтрихкодТовара = ШтрихкодТовара;
			СтрокаЧека.Объем          = Объем;
			
			СтрокаЧека.Крепость         = Выборка.Крепость;
			СтрокаЧека.КодВидаПродукции = Выборка.КодВидаАлкогольнойПродукции;
			
			ВходящиеДанные.ТаблицаТоваровБезМарки.Добавить(СтрокаЧека);
			
		КонецЕсли;
	
	КонецЦикла;
	
	Если НЕ ВходящиеДанные.ТаблицаТоваров.Количество() = 0 ИЛИ НЕ ВходящиеДанные.ТаблицаТоваровБезМарки.Количество() = 0 Тогда
		
		ВходящиеДанные.ПодписьЕГАИС = Истина;
		
		Если НЕ ЗначениеНастроекВызовСервераПовтИсп.НезаполненныеПараметрыЕГАИС().Количество() = 0 Тогда
			
			ТекстСообщения = НСтр("ru = 'Не заполнены обязательные параметры для пробития алкогольного чека.
										|(см. раздел ""Начало"")'");
										
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
	Иначе
		
		Возврат ВходящиеДанные;
	КонецЕсли;
	
	ВходящиеДанные.ИНН                  = ЗначениеНастроекВызовСервераПовтИсп.ИНН();
	ВходящиеДанные.КПП                  = ЗначениеНастроекВызовСервераПовтИсп.КПП();
	ВходящиеДанные.АдресМагазина        = ЗначениеНастроекВызовСервераПовтИсп.АдресМагазина();
	ВходящиеДанные.НаименованиеМагазина = ЗначениеНастроекВызовСервераПовтИсп.НаименованиеМагазина();
	ВходящиеДанные.ЗаводскойНомерККМ    = ЗначениеНастроекВызовСервераПовтИсп.ЗаводскойНомерККМ();
	
	ВходящиеДанные.ДатаВремяЧека        = Чек.Дата;
	ВходящиеДанные.Возврат              = Чек.ВидОперации = 1;
	
	Возврат ВходящиеДанные;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает структуру данных чека для формирования подписи ЕГАИС.
//
Функция СтруктураДанныхЧекаККМ()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ИНН"                   , "");           // ИНН Организации
	СтруктураДанных.Вставить("КПП"                   , Неопределено); // КПП обособленного подразделения по розничной лицензии.
	СтруктураДанных.Вставить("АдресМагазина"         , "");           // Адрес обособленного подразделения по розничной лицензии (Длина до 128 символов).
	СтруктураДанных.Вставить("НаименованиеМагазина"  , "");           // Наименование магазина (Длина до 128 символов).
	СтруктураДанных.Вставить("ЗаводскойНомерККМ"     , "");           // Заводской номер ККМ (Длина до 128 символов).
	СтруктураДанных.Вставить("НомерСменыККМ"         , 0);            // Номер смены. Всегда 1.
	СтруктураДанных.Вставить("НомерЧекаККМ"          , 0);            // Номер чека.  Всегда 1.
	СтруктураДанных.Вставить("ДатаВремяЧека"         , '00010101000000');   // Дата, время чека. Формат: ДДММГГЧЧММ - день, месяц, год, часы, минуты.
	СтруктураДанных.Вставить("Возврат"               , Ложь);         // Если Истина - то покупатель возвращает товар.
	СтруктураДанных.Вставить("ТаблицаТоваров"        , Новый Массив); // Таблица товаров
	СтруктураДанных.Вставить("ТаблицаТоваровБезМарки", Новый Массив); // Таблица товаров без марки //deprecated
	СтруктураДанных.Вставить("ПодписьЕГАИС"          , Ложь);         // Признак необходимости подписи чека ЕГАИС
	
	Возврат СтруктураДанных;
	
КонецФункции // СтруктураДанныхЧекаККМ()

// Возвращает структуру данных строки чека для формирования подписи ЕГАИС.
//
Функция СтруктураДанныхСтрокиЧекаККМ()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Цена"            , 0);
	СтруктураДанных.Вставить("ШтрихкодМарки"   , "");
	СтруктураДанных.Вставить("ШтрихкодТовара"  , "");
	СтруктураДанных.Вставить("Объем"           , 0);
	СтруктураДанных.Вставить("КодВидаПродукции", "");
	СтруктураДанных.Вставить("Наименование"    , "");
	СтруктураДанных.Вставить("Крепость"        , 0);
	СтруктураДанных.Вставить("Количество"      , 0);
	
	Возврат СтруктураДанных;
	
КонецФункции // СтруктураДанныхСтрокиЧекаККМ()

#КонецОбласти
