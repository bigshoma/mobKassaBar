
#Область ПрограммныйИнтерфейс

Процедура ПолучитьВерсиюДрайвераОборудования(Форма, ПодключаемоеОборудование, Версия, ВерсияВМакете, ДрайверУстановлен) Экспорт
	
	ВыходныеПараметры = Неопределено;
	
	Если Не ЗначениеЗаполнено(ПодключаемоеОборудование) Тогда
		Версия = "";
		ДрайверУстановлен = Ложь;
		Возврат;
	КонецЕсли;
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если МенеджерОборудованияКлиент.ПолучитьВерсиюДрайвера(Форма.УникальныйИдентификатор, ПодключаемоеОборудование, Неопределено, ВыходныеПараметры) Тогда
			Версия = ?(ПустаяСтрока(ВыходныеПараметры.ВерсияДрайвера), "Неопределено", ВыходныеПараметры.ВерсияДрайвера);
			ДрайверУстановлен = Истина;
			
		Иначе
			Версия = НСтр("ru = 'Драйвер не установлен'");
			ДрайверУстановлен = Ложь;
		КонецЕсли;
		
		ВерсияВМакете = ВыходныеПараметры.ВерсияДрайвераВМакете;
		
	#Иначе
		ДрайверУстановлен = Ложь;
		Версия = НСтр("ru = 'Только из мобильного приложения'");
	#КонецЕсли
	
КонецПроцедуры

Процедура ПолучитьШтрихкод(ДополнительныеПараметры) Экспорт
	
	ЗаголовокСканирования = НСтр("ru = 'Считайте штрихкод'");
	
	Если ДополнительныеПараметры.Свойство("ЗаголовокСканирования") Тогда
		ЗаголовокСканирования = ДополнительныеПараметры.ЗаголовокСканирования;
	КонецЕсли;
	
	#Если МобильноеПриложениеКлиент Тогда
			
		Если ЗначениеНастроекВызовСервераПовтИсп.СканированиеВнешнимСканером() Тогда
			
			ВыходныеПараметры = Неопределено;
			
			Успешно = Истина;
			Если Не МенеджерОборудованияКлиент.ВыполнитьВводДанных(
				ИдентификаторКлиентаОборудования(),
				ЗначениеНастроекВызовСервераПовтИсп.ОборудованиеСканированияШтрихкодов(),
				ВыходныеПараметры) Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ВыходныеПараметры.ТекстОшибки);
				Успешно = Ложь;
			КонецЕсли;
			
			Если Успешно И ВыходныеПараметры.Свойство("ДанныеВвода") Тогда
				
				Если ЗначениеЗаполнено(ВыходныеПараметры.ДанныеВвода) Тогда
					ДополнительныеПараметры.Форма.ОбработатьПолученныйШтрихкод(ВыходныеПараметры.ДанныеВвода, ДополнительныеПараметры);
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			ОбработчикСканирования = Новый ОписаниеОповещения("ОбработкаСканирования", ПодключаемоеОборудованиеКлиент, ДополнительныеПараметры);
			ОбработчикЗакрытияСканирования = Новый ОписаниеОповещения(ДополнительныеПараметры.ИмяОбработчикаЗакрытияСканирования, 
				ДополнительныеПараметры.Форма, ДополнительныеПараметры);

			СредстваМультимедиа.ПоказатьСканированиеШтрихКодов(ЗаголовокСканирования, ОбработчикСканирования, ОбработчикЗакрытияСканирования);
			
		КонецЕсли;
		
	#Иначе
		
		Штрихкод = "";
		ОписаниеОповещения = Новый ОписаниеОповещения("ОповещениеПоискаПоШтрихкодуПК", ЭтотОбъект, ДополнительныеПараметры);
		
		ПоказатьВводСтроки(ОписаниеОповещения, Штрихкод, ЗаголовокСканирования);
		
	#КонецЕсли
	
КонецПроцедуры

Процедура РаспечататьЭтикетки(Форма, Товары, РежимПечати) Экспорт
	
	ОчиститьСообщения();
	
	ЭтикеткиДляПечати = Новый Массив();
	
	Если РежимПечати = "ПечатьЭтикеток" Тогда
		
		ШаблонПечати = ЗначениеНастроекВызовСервераПовтИсп.ШаблонЭтикетки();
		
	ИначеЕсли РежимПечати = "ПечатьЦенников" Тогда
		
		ШаблонПечати = ЗначениеНастроекВызовСервераПовтИсп.ШаблонЦенника();
		
	КонецЕсли;
	
	// Шапка - Штрихкод - Подвал
	ЭлементыВШапку = Истина;
	МакетШапки = "";
	МакетПодвала = "";
	
	СимволТега = "%";
	
	Для Каждого ЭлементПечати Из ШаблонПечати Цикл
		
		Если НЕ ЭлементПечати.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭлементПечати.Значение = "Штрихкод" Тогда
			
			ЭлементыВШапку = Ложь;
			
		Иначе
			
			ТекстВМакет = СимволТега + ЭлементПечати.Значение + СимволТега;
			
			Если ЭлементыВШапку Тогда
				МакетШапки = ?(МакетШапки = "", ТекстВМакет, МакетШапки + Символы.ПС + ТекстВМакет);
			Иначе
				МакетПодвала = ?(МакетПодвала = "", ТекстВМакет, МакетПодвала + Символы.ПС + ТекстВМакет);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ДатаПечати = Формат(ОбщегоНазначенияКлиентСервер.ПолучитьТекущуюДату(), "ДФ=dd.MM.yyyy");
	
	Для Каждого ВремТовар Из Товары Цикл
		
		КоличествоКопий = ВремТовар.Количество;
		
		Если КоличествоКопий = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Этикетка = Новый Структура();
		
		ШапкаЭтикетки = МакетШапки;
		ПодвалЭтикетки = МакетПодвала;
		
		ШапкаЭтикетки = СтрЗаменить(ШапкаЭтикетки, "%НаименованиеОрганизации%",
			ЗначениеНастроекВызовСервераПовтИсп.НаименованиеОрганизации()
		);
		
		ПодвалЭтикетки = СтрЗаменить(ПодвалЭтикетки, "%НаименованиеОрганизации%",
			ЗначениеНастроекВызовСервераПовтИсп.НаименованиеОрганизации()
		);
		
		ШапкаЭтикетки = СтрЗаменить(ШапкаЭтикетки, "%НаименованиеТовара%", ВремТовар.Номенклатура);
		ПодвалЭтикетки = СтрЗаменить(ПодвалЭтикетки, "%НаименованиеТовара%", ВремТовар.Номенклатура);
		
		ШапкаЭтикетки = СтрЗаменить(ШапкаЭтикетки, "%Артикул%", ВремТовар.Артикул);
		ПодвалЭтикетки = СтрЗаменить(ПодвалЭтикетки, "%Артикул%", ВремТовар.Артикул);
		
		ШапкаЭтикетки = СтрЗаменить(ШапкаЭтикетки, "%ДатаПечати%", ДатаПечати);
		ПодвалЭтикетки = СтрЗаменить(ПодвалЭтикетки, "%ДатаПечати%", ДатаПечати);
		
		НадписьЦена = НСтр("ru = 'ЦЕНА: %Цена% Руб.'");
		НадписьЦена = СтрЗаменить(НадписьЦена, "%Цена%", Формат(ВремТовар.Цена, "ЧЦ=10; ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0"));
		
		ШапкаЭтикетки = СтрЗаменить(ШапкаЭтикетки, "%Цена%", НадписьЦена);
		ПодвалЭтикетки = СтрЗаменить(ПодвалЭтикетки, "%Цена%", НадписьЦена);
		
		Этикетка.Вставить("ШапкаЭтикетки" , ШапкаЭтикетки);
		
		Если ЗначениеЗаполнено(ВремТовар.Штрихкод) Тогда
			Этикетка.Вставить("ТипШтрихкода", МенеджерОборудованияКлиент.ОпределитьТипШтрихкода(ВремТовар.Штрихкод));
			Этикетка.Вставить("Штрихкод"    , ВремТовар.Штрихкод);
		КонецЕсли;
		
		Этикетка.Вставить("ПодвалЭтикетки", ПодвалЭтикетки);
		
		Для Счетчик = 1 По КоличествоКопий Цикл
			ЭтикеткиДляПечати.Добавить(Этикетка);
		КонецЦикла;
		
	КонецЦикла;
	
	ВходныеПараметры = Новый Структура("Этикетки", ЭтикеткиДляПечати);
	ВыходныеПараметры = Неопределено;
	
	Если НЕ МенеджерОборудованияКлиент.ВыполнитьПечатьЭтикеток(
		Форма.УникальныйИдентификатор,
		ЗначениеНастроекВызовСервераПовтИсп.ОборудованиеПечати(),
		ВходныеПараметры,
		ВыходныеПараметры) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ВыходныеПараметры.ТекстОшибки);
		
	КонецЕсли;

КонецПроцедуры

Функция ЭтоОповещениеСканераШтрихкода(ИмяСобытия) Экспорт
	
	Если ИмяСобытия = "Штрихкод" ИЛИ ИмяСобытия = "Barcode" Тогда
		
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ОтключитьОборудование(ИдентификаторУстройства, ИдентификаторКлиентаОборудования = Неопределено) Экспорт
	
	ОписаниеОшибки = "";
	
	Если ИдентификаторКлиентаОборудования = Неопределено Тогда
		ИдентификаторКлиентаОборудования = ИдентификаторКлиентаОборудования();
	КонецЕсли;
	
	Результат = МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(
		ИдентификаторКлиентаОборудования,
		ИдентификаторУстройства,
		ОписаниеОшибки
	);
	
	Возврат Результат;
	
КонецФункции

Функция ПодключитьОборудование(ИдентификаторУстройства) Экспорт
	
	РезультатПодключения = Новый Структура;
	РезультатПодключения.Вставить("Успешно", Ложь);
	РезультатПодключения.Вставить("ОписаниеОшибки", "");
	
	ОписаниеОшибки = "";
	
	Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(
		ИдентификаторКлиентаОборудования(),
		ИдентификаторУстройства,
		ОписаниеОшибки
	);
	
	РезультатПодключения.Успешно = Результат;
	РезультатПодключения.ОписаниеОшибки = ОписаниеОшибки;
	
	Возврат РезультатПодключения;
	
КонецФункции

Процедура ИнициализироватьАсинхронныйСканер(Форма, Оповещение = Неопределено) Экспорт
	
	Если Оповещение = Неопределено Тогда
		
		ОткрытьФорму("Обработка.ИнициализацияОборудования.Форма.ИнициализацияСканераШтрихкодов",,
			Форма, Форма.УникальныйИдентификатор);
	Иначе
		
		ОткрытьФорму("Обработка.ИнициализацияОборудования.Форма.ИнициализацияСканераШтрихкодов",,
			Форма, Форма.УникальныйИдентификатор,,, Оповещение);
		
		КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИдентификаторКлиентаОборудования() Экспорт
	
	Возврат Новый УникальныйИдентификатор("ae20403c-7ebb-e122-c8dc-76fc1ac91684");
	
КонецФункции

Процедура ОбработкаСканирования(Штрихкод, Результат, Сообщение, ДополнительныеПараметры) Экспорт
	
	Если НЕ ДополнительныеПараметры.Свойство("ПотоковоеСканирование") Тогда
		
		#Если МобильноеПриложениеКлиент Тогда
			СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
		#КонецЕсли
		
	КонецЕсли;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.Форма.ОбработатьПолученныйШтрихкод(Штрихкод, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОповещениеПоискаПоШтрихкодуПК(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		ДополнительныеПараметры.Форма.ОбработатьПолученныйШтрихкод(Результат, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
