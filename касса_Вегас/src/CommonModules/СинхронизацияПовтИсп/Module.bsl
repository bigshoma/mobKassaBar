
#Область ПрограммныйИнтерфейс

Функция ПолучитьФабрикуXDTO(ВерсияФормата) Экспорт
	
	Фабрика = Новый ФабрикаXDTO(ПолучитьНаборСхемXML(ВерсияФормата));
	
	Возврат Фабрика;
	
КонецФункции

Функция ПолучитьURIПространстваИмен(ВерсияФормата) Экспорт
	
	Если ВерсияФормата = 1005 Тогда
		
		Возврат "http://www.1c.ru/EquipmentService";
		
	ИначеЕсли ВерсияФормата = 1006 Тогда
		
		Возврат "http://www.1c.ru/EquipmentService/1.0.0.6";
		
	ИначеЕсли ВерсияФормата = 1007 Тогда
		
		Возврат "http://www.1c.ru/EquipmentService/1.0.0.7";
		
	ИначеЕсли ВерсияФормата = 2003 Тогда
		
		Возврат "http://www.1c.ru/EquipmentService/2.0.0.3";
		
	ИначеЕсли ВерсияФормата = 3000 Тогда
		
		Возврат "http://www.1c.ru/EquipmentService/3.0.0.0";
		
	ИначеЕсли ВерсияФормата = 3001 ИЛИ ВерсияФормата = 0 Тогда
		
		Возврат "http://www.1c.ru/EquipmentService/3.0.0.1";

	КонецЕсли;
	
КонецФункции

Функция ВерсииПоддерживаемыхФорматовОбмена() Экспорт
	
	Версии = Новый Массив;
	
	Версии.Добавить(1005);
	Версии.Добавить(1006);
	Версии.Добавить(1007);
	Версии.Добавить(2003);
	Версии.Добавить(3000);
	Версии.Добавить(3001);
	
	Возврат Версии;
	
КонецФункции

Функция ПолучитьНаборСхемXML(ВерсияФормата) Экспорт
	
	ИмяМакета = Синхронизация.ПолучитьИмяМакетаСхемы(ВерсияФормата);
	
	Макет = ПолучитьОбщийМакет(ИмяМакета);
	ТекстСхемыXML = Макет.ТекущаяОбласть.Текст;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТекстСхемыXML);
	ПостроительDOM = Новый ПостроительDOM;
	ДокументDOM = ПостроительDOM.Прочитать(ЧтениеXML);
	ПостроительСхемы = Новый ПостроительСхемXML;
	СхемаДанныхСервиса = ПостроительСхемы.СоздатьСхемуXML(ДокументDOM);
	НаборСхем = Новый НаборСхемXML;
	НаборСхем.Добавить(СхемаДанныхСервиса);
	
	Возврат НаборСхем;
	
КонецФункции

Функция СтруктураПараметровWS() Экспорт
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("WSURLВебСервиса",                   ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("АдресWS"));
	СтруктураПараметров.Вставить("WSИмяПользователя",                 ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ПользовательWS"));
	СтруктураПараметров.Вставить("WSПароль",                          ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ПарольWS"));
	СтруктураПараметров.Вставить("ИдентификаторМобильногоУстройства", ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ИдентификаторУстройства"));
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ИнициализацияСообщенийОшибок() Экспорт
	
	СообщенияОшибок = Новый Соответствие;
	СообщенияОшибок.Вставить(1, НСтр("ru = 'Ошибка подключения: Не указан каталог обмена информацией.'"));
	СообщенияОшибок.Вставить(2, НСтр("ru = 'Ошибка подключения: Каталог обмена информацией не существует.'"));
	
	СообщенияОшибок.Вставить(3, НСтр("ru = 'В каталоге обмена информацией не был обнаружен файл сообщения с данными.'"));
	СообщенияОшибок.Вставить(4, НСтр("ru = 'Ошибка при распаковке сжатого файла сообщения.'"));
	СообщенияОшибок.Вставить(5, НСтр("ru = 'Ошибка при сжатии файла сообщения обмена.'"));
	СообщенияОшибок.Вставить(6, НСтр("ru = 'Ошибка при создании временного каталога'"));
	СообщенияОшибок.Вставить(7, НСтр("ru = 'Архив не содержит файл сообщения обмена'"));
	
	СообщенияОшибок.Вставить(8, НСтр("ru = 'Ошибка записи файла в каталог обмена информацией. Проверьте права пользователя на доступ к каталогу.'"));
	СообщенияОшибок.Вставить(9, НСтр("ru = 'Ошибка удаления файла из каталога обмена информацией. Проверьте права пользователя на доступ к каталогу.'"));
	
	СообщенияОшибок.Вставить(21, НСтр("ru = 'Не указан или указан неверно идентификатор мобильного устройства. Проверьте параметры синхронизации.'"));
	
	Возврат СообщенияОшибок;
	
КонецФункции

Функция ИмяВременногоФайлаФлага() Экспорт
	
	Возврат "flag.tmp";
	
КонецФункции

Функция НедопустимыеСимволыВИмениПользователяWSПрокси() Экспорт
	
	Возврат ":";
	
КонецФункции

#КонецОбласти



