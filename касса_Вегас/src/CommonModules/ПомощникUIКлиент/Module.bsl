#Область ПрограммныйИнтерфейс

#Область Инициализация

Процедура Инициализировать() Экспорт
	
	#Если МобильноеПриложениеКлиент Тогда
		
	НачатьУстановкуВнешнейКомпоненты(, "ОбщийМакет.MobileHelperUI");
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПослеПодключенияКомпоненты",
		ЭтотОбъект
	);
	
	НачатьПодключениеВнешнейКомпоненты(
		ОписаниеОповещения,
		"ОбщийМакет.MobileHelperUI",
		"com_1c_MobileHelperUI",
		ТипВнешнейКомпоненты.Native
	);
	
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ПомощникUI_API

#Область Toast

// Показывает Toast
// Короткое = Истина - 2.5 сек
// Короткое = Ложь   - 3.5 сек
//
Процедура ПоказатьСообщение(ТекстСообщения, Короткое = Истина) Экспорт
	
	ВнешняяКомпонентаHelperUI = ПолучитьОбъектКомпоненты();
	
	Если ВнешняяКомпонентаHelperUI = Неопределено Тогда
		
		#Если МобильноеПриложениеКлиент Тогда
		
			ПоказатьПредупреждение(, ТекстСообщения,, " ");
		#Иначе
			
			ПоказатьОповещениеПользователя(ТекстСообщения);
		#КонецЕсли
	Иначе
		
		ВнешняяКомпонентаHelperUI.ПоказатьСообщение(ТекстСообщения, Короткое);
		
	КонецЕсли;
	
КонецПроцедуры

// Показывает Toast с указанием незаполненного поля
Процедура СообщитьПолеНеЗаполнено(Форма, ЭлементПоле, ПредставлениеПоля) Экспорт
	
	ТекстСообщения = НСтр("ru = 'Поле ""%1"" не заполнено'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", ПредставлениеПоля);
	
	#Если МобильноеПриложениеКлиент Тогда
		
		ПоказатьСообщение(ТекстСообщения);
		
		Форма.ТекущийЭлемент = ЭлементПоле;
		Форма.НачатьРедактированиеЭлемента();
		
	#Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Поле = ЭлементПоле.Имя;
		
		Сообщение.Сообщить();
		
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ПроцессСинхронизации

Процедура ПоказатьПроцессСинхронизации(ТекстЗаголовок = "", ТекстСодержание = "", Неопределенный = Истина, Прогресс = 0) Экспорт
	
	ВнешняяКомпонентаHelperUI = ПолучитьОбъектКомпоненты();
	
	Если ВнешняяКомпонентаHelperUI = Неопределено Тогда
		
		#Если НЕ МобильноеПриложениеКлиент Тогда
			Состояние(ТекстЗаголовок, Прогресс, ТекстСодержание, БиблиотекаКартинок.Обновить);
		#КонецЕсли
		
	Иначе
		
		ПараметрJSON = ПолучитьПараметрПроцессСинхронизацииJSON(
			ТекстЗаголовок, ТекстСодержание, Неопределенный, Прогресс, Ложь
		);
		
		ВнешняяКомпонентаHelperUI.ПоказатьПроцессСинхронизации(ПараметрJSON);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьОшибкуПроцессаСинхронизации(ТекстЗаголовок, ТекстСодержание) Экспорт
	
	ВнешняяКомпонентаHelperUI = ПолучитьОбъектКомпоненты();
	
	Если ВнешняяКомпонентаHelperUI = Неопределено Тогда
		
		#Если НЕ МобильноеПриложениеКлиент Тогда
			Состояние(ТекстЗаголовок, 0, ТекстСодержание, БиблиотекаКартинок.Обновить);
		#КонецЕсли
		
	Иначе
		
		ПараметрJSON = ПолучитьПараметрПроцессСинхронизацииJSON(
			ТекстЗаголовок, ТекстСодержание, Ложь, 0, Истина
		);
		
		ВнешняяКомпонентаHelperUI.ПоказатьПроцессСинхронизации(ПараметрJSON);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СкрытьПроцессСинхронизации() Экспорт
	
	ВнешняяКомпонентаHelperUI = ПолучитьОбъектКомпоненты();
	
	Если ВнешняяКомпонентаHelperUI = Неопределено Тогда
		
		Возврат;
	Иначе
		
		ВнешняяКомпонентаHelperUI.СкрытьПроцессСинхронизации();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьВерсиюКомпоненты() Экспорт
	
	ВнешняяКомпонентаHelperUI = ПолучитьОбъектКомпоненты();
	
	Если НЕ ВнешняяКомпонентаHelperUI = Неопределено Тогда
		
		Версия = ВнешняяКомпонентаHelperUI.ПолучитьНомерВерсии();
		
		Возврат Версия;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПослеПодключенияКомпоненты(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат Тогда
		
		Попытка
			
			ВнешняяКомпонентаHelperUI = ПомощникUIКлиентПовтИсп.ПолучитьВнешнююКомпонентуПомощника(
				ПолучитьИдентификаторТипаКомпоненты()
			);
			
		Исключение
			Сообщить("Ошибка создания класса MobileHelperUI");
		Конецпопытки;
		
	Иначе
		
		Сообщить("Ошибка подключения внешней компоненты");
		
	КонецЕсли
	
КонецПроцедуры

Функция ПолучитьОбъектКомпоненты()
	
	Попытка
		КомпонентаПомощника = ПомощникUIКлиентПовтИсп.ПолучитьВнешнююКомпонентуПомощника(
			ПолучитьИдентификаторТипаКомпоненты()
		);
	Исключение
		
		КомпонентаПомощника = Неопределено;
	КонецПопытки;
	
	Возврат КомпонентаПомощника;
	
КонецФункции

Функция ПолучитьИдентификаторТипаКомпоненты()
	
	Возврат "AddIn.com_1c_MobileHelperUI.MobileHelperUI";
	
КонецФункции

Функция ПолучитьПараметрПроцессСинхронизацииJSON(ТекстЗаголовок, ТекстСодержание, Неопределенный, Прогресс, ЭтоОшибка)
	
	ПараметрJSON = "";
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, " ", Истина);
	ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	ЗаписьJSON.ЗаписатьИмяСвойства("ContentTitle");
	ЗаписьJSON.ЗаписатьЗначение(ТекстЗаголовок);
	
	ЗаписьJSON.ЗаписатьИмяСвойства("ContentText");
	ЗаписьJSON.ЗаписатьЗначение(ТекстСодержание);
	
	ЗаписьJSON.ЗаписатьИмяСвойства("IsError");
	ЗаписьJSON.ЗаписатьЗначение(ЭтоОшибка);
	
	ЗаписьJSON.ЗаписатьИмяСвойства("Progress");
	ЗаписьJSON.ЗаписатьЗначение(Прогресс);
	
	ЗаписьJSON.ЗаписатьИмяСвойства("Indeterminate");
	ЗаписьJSON.ЗаписатьЗначение(Неопределенный);
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	ПараметрJSON = ЗаписьJSON.Закрыть();
	
	Возврат ПараметрJSON;
	
КонецФункции

#КонецОбласти
